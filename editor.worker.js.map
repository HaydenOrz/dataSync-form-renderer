{"version":3,"file":"editor.worker.js","mappings":"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AAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,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","sources":["../webpack/bootstrap","../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../webpack/runtime/global","../node_modules/.pnpm/monaco-editor@0.30.1/node_modules/monaco-editor/esm/vs/base/common/errors.js","../node_modules/.pnpm/monaco-editor@0.30.1/node_modules/monaco-editor/esm/vs/base/common/iterator.js","../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/.pnpm/monaco-editor@0.30.1/node_modules/monaco-editor/esm/vs/base/common/functional.js","../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/.pnpm/@babel+runtime@7.20.13/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/.pnpm/monaco-editor@0.30.1/node_modules/monaco-editor/esm/vs/base/common/lifecycle.js","../node_modules/.pnpm/monaco-editor@0.30.1/node_modules/monaco-editor/esm/vs/base/common/linkedList.js","../node_modules/.pnpm/monaco-editor@0.30.1/node_modules/monaco-editor/esm/vs/base/common/platform.js","../node_modules/.pnpm/monaco-editor@0.30.1/node_modules/monaco-editor/esm/vs/base/common/stopwatch.js","../node_modules/.pnpm/monaco-editor@0.30.1/node_modules/monaco-editor/esm/vs/base/common/event.js","../node_modules/.pnpm/monaco-editor@0.30.1/node_modules/monaco-editor/esm/vs/base/common/types.js","../node_modules/.pnpm/monaco-editor@0.30.1/node_modules/monaco-editor/esm/vs/base/common/strings.js","../node_modules/.pnpm/monaco-editor@0.30.1/node_modules/monaco-editor/esm/vs/base/common/worker/simpleWorker.js","../node_modules/.pnpm/monaco-editor@0.30.1/node_modules/monaco-editor/esm/vs/base/common/diff/diffChange.js","../node_modules/.pnpm/monaco-editor@0.30.1/node_modules/monaco-editor/esm/vs/base/common/hash.js","../node_modules/.pnpm/monaco-editor@0.30.1/node_modules/monaco-editor/esm/vs/base/common/diff/diff.js","../node_modules/.pnpm/monaco-editor@0.30.1/node_modules/monaco-editor/esm/vs/base/common/process.js","../node_modules/.pnpm/monaco-editor@0.30.1/node_modules/monaco-editor/esm/vs/base/common/path.js","../node_modules/.pnpm/monaco-editor@0.30.1/node_modules/monaco-editor/esm/vs/base/common/uri.js","../node_modules/.pnpm/monaco-editor@0.30.1/node_modules/monaco-editor/esm/vs/editor/common/core/position.js","../node_modules/.pnpm/monaco-editor@0.30.1/node_modules/monaco-editor/esm/vs/editor/common/core/range.js","../node_modules/.pnpm/monaco-editor@0.30.1/node_modules/monaco-editor/esm/vs/editor/common/diff/diffComputer.js","../node_modules/.pnpm/monaco-editor@0.30.1/node_modules/monaco-editor/esm/vs/base/common/uint.js","../node_modules/.pnpm/monaco-editor@0.30.1/node_modules/monaco-editor/esm/vs/editor/common/viewModel/prefixSumComputer.js","../node_modules/.pnpm/monaco-editor@0.30.1/node_modules/monaco-editor/esm/vs/editor/common/model/mirrorTextModel.js","../node_modules/.pnpm/monaco-editor@0.30.1/node_modules/monaco-editor/esm/vs/editor/common/model/wordHelper.js","../node_modules/.pnpm/monaco-editor@0.30.1/node_modules/monaco-editor/esm/vs/editor/common/core/characterClassifier.js","../node_modules/.pnpm/monaco-editor@0.30.1/node_modules/monaco-editor/esm/vs/editor/common/modes/linkComputer.js","../node_modules/.pnpm/monaco-editor@0.30.1/node_modules/monaco-editor/esm/vs/editor/common/modes/supports/inplaceReplaceSupport.js","../node_modules/.pnpm/monaco-editor@0.30.1/node_modules/monaco-editor/esm/vs/base/common/cancellation.js","../node_modules/.pnpm/monaco-editor@0.30.1/node_modules/monaco-editor/esm/vs/base/common/keyCodes.js","../node_modules/.pnpm/monaco-editor@0.30.1/node_modules/monaco-editor/esm/vs/editor/common/core/selection.js","../node_modules/.pnpm/monaco-editor@0.30.1/node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneEnums.js","../node_modules/.pnpm/monaco-editor@0.30.1/node_modules/monaco-editor/esm/vs/editor/common/core/token.js","../node_modules/.pnpm/monaco-editor@0.30.1/node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneBase.js","../node_modules/.pnpm/monaco-editor@0.30.1/node_modules/monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js","../node_modules/.pnpm/monaco-editor@0.30.1/node_modules/monaco-editor/esm/vs/editor/editor.worker.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n    constructor() {\n        this.listeners = [];\n        this.unexpectedErrorHandler = function (e) {\n            setTimeout(() => {\n                if (e.stack) {\n                    throw new Error(e.message + '\\n\\n' + e.stack);\n                }\n                throw e;\n            }, 0);\n        };\n    }\n    emit(e) {\n        this.listeners.forEach((listener) => {\n            listener(e);\n        });\n    }\n    onUnexpectedError(e) {\n        this.unexpectedErrorHandler(e);\n        this.emit(e);\n    }\n    // For external errors, we don't want the listeners to be called\n    onUnexpectedExternalError(e) {\n        this.unexpectedErrorHandler(e);\n    }\n}\nexport const errorHandler = new ErrorHandler();\nexport function onUnexpectedError(e) {\n    // ignore errors from cancelled promises\n    if (!isPromiseCanceledError(e)) {\n        errorHandler.onUnexpectedError(e);\n    }\n    return undefined;\n}\nexport function onUnexpectedExternalError(e) {\n    // ignore errors from cancelled promises\n    if (!isPromiseCanceledError(e)) {\n        errorHandler.onUnexpectedExternalError(e);\n    }\n    return undefined;\n}\nexport function transformErrorForSerialization(error) {\n    if (error instanceof Error) {\n        let { name, message } = error;\n        const stack = error.stacktrace || error.stack;\n        return {\n            $isError: true,\n            name,\n            message,\n            stack\n        };\n    }\n    // return as is\n    return error;\n}\nconst canceledName = 'Canceled';\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error) {\n    return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled() {\n    const error = new Error(canceledName);\n    error.name = error.message;\n    return error;\n}\nexport function illegalArgument(name) {\n    if (name) {\n        return new Error(`Illegal argument: ${name}`);\n    }\n    else {\n        return new Error('Illegal argument');\n    }\n}\nexport function illegalState(name) {\n    if (name) {\n        return new Error(`Illegal state: ${name}`);\n    }\n    else {\n        return new Error('Illegal state');\n    }\n}\nexport class NotSupportedError extends Error {\n    constructor(message) {\n        super('NotSupported');\n        if (message) {\n            this.message = message;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var Iterable;\n(function (Iterable) {\n    function is(thing) {\n        return thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n    }\n    Iterable.is = is;\n    const _empty = Object.freeze([]);\n    function empty() {\n        return _empty;\n    }\n    Iterable.empty = empty;\n    function* single(element) {\n        yield element;\n    }\n    Iterable.single = single;\n    function from(iterable) {\n        return iterable || _empty;\n    }\n    Iterable.from = from;\n    function isEmpty(iterable) {\n        return !iterable || iterable[Symbol.iterator]().next().done === true;\n    }\n    Iterable.isEmpty = isEmpty;\n    function first(iterable) {\n        return iterable[Symbol.iterator]().next().value;\n    }\n    Iterable.first = first;\n    function some(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    Iterable.some = some;\n    function find(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return undefined;\n    }\n    Iterable.find = find;\n    function* filter(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                yield element;\n            }\n        }\n    }\n    Iterable.filter = filter;\n    function* map(iterable, fn) {\n        let index = 0;\n        for (const element of iterable) {\n            yield fn(element, index++);\n        }\n    }\n    Iterable.map = map;\n    function* concat(...iterables) {\n        for (const iterable of iterables) {\n            for (const element of iterable) {\n                yield element;\n            }\n        }\n    }\n    Iterable.concat = concat;\n    function* concatNested(iterables) {\n        for (const iterable of iterables) {\n            for (const element of iterable) {\n                yield element;\n            }\n        }\n    }\n    Iterable.concatNested = concatNested;\n    function reduce(iterable, reducer, initialValue) {\n        let value = initialValue;\n        for (const element of iterable) {\n            value = reducer(value, element);\n        }\n        return value;\n    }\n    Iterable.reduce = reduce;\n    /**\n     * Returns an iterable slice of the array, with the same semantics as `array.slice()`.\n     */\n    function* slice(arr, from, to = arr.length) {\n        if (from < 0) {\n            from += arr.length;\n        }\n        if (to < 0) {\n            to += arr.length;\n        }\n        else if (to > arr.length) {\n            to = arr.length;\n        }\n        for (; from < to; from++) {\n            yield arr[from];\n        }\n    }\n    Iterable.slice = slice;\n    /**\n     * Consumes `atMost` elements from iterable and returns the consumed elements,\n     * and an iterable for the rest of the elements.\n     */\n    function consume(iterable, atMost = Number.POSITIVE_INFINITY) {\n        const consumed = [];\n        if (atMost === 0) {\n            return [consumed, iterable];\n        }\n        const iterator = iterable[Symbol.iterator]();\n        for (let i = 0; i < atMost; i++) {\n            const next = iterator.next();\n            if (next.done) {\n                return [consumed, Iterable.empty()];\n            }\n            consumed.push(next.value);\n        }\n        return [consumed, { [Symbol.iterator]() { return iterator; } }];\n    }\n    Iterable.consume = consume;\n    /**\n     * Returns whether the iterables are the same length and all items are\n     * equal using the comparator function.\n     */\n    function equals(a, b, comparator = (at, bt) => at === bt) {\n        const ai = a[Symbol.iterator]();\n        const bi = b[Symbol.iterator]();\n        while (true) {\n            const an = ai.next();\n            const bn = bi.next();\n            if (an.done !== bn.done) {\n                return false;\n            }\n            else if (an.done) {\n                return true;\n            }\n            else if (!comparator(an.value, bn.value)) {\n                return false;\n            }\n        }\n    }\n    Iterable.equals = equals;\n})(Iterable || (Iterable = {}));\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function once(fn) {\n    const _this = this;\n    let didCall = false;\n    let result;\n    return function () {\n        if (didCall) {\n            return result;\n        }\n        didCall = true;\n        result = fn.apply(_this, arguments);\n        return result;\n    };\n}\n","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { once } from './functional.js';\nimport { Iterable } from './iterator.js';\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\nlet disposableTracker = null;\nexport function setDisposableTracker(tracker) {\n    disposableTracker = tracker;\n}\nif (TRACK_DISPOSABLES) {\n    const __is_disposable_tracked__ = '__is_disposable_tracked__';\n    setDisposableTracker(new class {\n        trackDisposable(x) {\n            const stack = new Error('Potentially leaked disposable').stack;\n            setTimeout(() => {\n                if (!x[__is_disposable_tracked__]) {\n                    console.log(stack);\n                }\n            }, 3000);\n        }\n        setParent(child, parent) {\n            if (child && child !== Disposable.None) {\n                try {\n                    child[__is_disposable_tracked__] = true;\n                }\n                catch (_a) {\n                    // noop\n                }\n            }\n        }\n        markAsDisposed(disposable) {\n            if (disposable && disposable !== Disposable.None) {\n                try {\n                    disposable[__is_disposable_tracked__] = true;\n                }\n                catch (_a) {\n                    // noop\n                }\n            }\n        }\n        markAsSingleton(disposable) { }\n    });\n}\nfunction trackDisposable(x) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.trackDisposable(x);\n    return x;\n}\nfunction markAsDisposed(disposable) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.markAsDisposed(disposable);\n}\nfunction setParentOfDisposable(child, parent) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.setParent(child, parent);\n}\nfunction setParentOfDisposables(children, parent) {\n    if (!disposableTracker) {\n        return;\n    }\n    for (const child of children) {\n        disposableTracker.setParent(child, parent);\n    }\n}\n/**\n * Indicates that the given object is a singleton which does not need to be disposed.\n*/\nexport function markAsSingleton(singleton) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.markAsSingleton(singleton);\n    return singleton;\n}\nexport class MultiDisposeError extends Error {\n    constructor(errors) {\n        super(`Encountered errors while disposing of store. Errors: [${errors.join(', ')}]`);\n        this.errors = errors;\n    }\n}\nexport function isDisposable(thing) {\n    return typeof thing.dispose === 'function' && thing.dispose.length === 0;\n}\nexport function dispose(arg) {\n    if (Iterable.is(arg)) {\n        let errors = [];\n        for (const d of arg) {\n            if (d) {\n                try {\n                    d.dispose();\n                }\n                catch (e) {\n                    errors.push(e);\n                }\n            }\n        }\n        if (errors.length === 1) {\n            throw errors[0];\n        }\n        else if (errors.length > 1) {\n            throw new MultiDisposeError(errors);\n        }\n        return Array.isArray(arg) ? [] : arg;\n    }\n    else if (arg) {\n        arg.dispose();\n        return arg;\n    }\n}\nexport function combinedDisposable(...disposables) {\n    const parent = toDisposable(() => dispose(disposables));\n    setParentOfDisposables(disposables, parent);\n    return parent;\n}\nexport function toDisposable(fn) {\n    const self = trackDisposable({\n        dispose: once(() => {\n            markAsDisposed(self);\n            fn();\n        })\n    });\n    return self;\n}\nexport class DisposableStore {\n    constructor() {\n        this._toDispose = new Set();\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    /**\n     * Dispose of all registered disposables and mark this object as disposed.\n     *\n     * Any future disposables added to this object will be disposed of on `add`.\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        markAsDisposed(this);\n        this._isDisposed = true;\n        this.clear();\n    }\n    /**\n     * Dispose of all registered disposables but do not mark this object as disposed.\n     */\n    clear() {\n        try {\n            dispose(this._toDispose.values());\n        }\n        finally {\n            this._toDispose.clear();\n        }\n    }\n    add(o) {\n        if (!o) {\n            return o;\n        }\n        if (o === this) {\n            throw new Error('Cannot register a disposable on itself!');\n        }\n        setParentOfDisposable(o, this);\n        if (this._isDisposed) {\n            if (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n                console.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n            }\n        }\n        else {\n            this._toDispose.add(o);\n        }\n        return o;\n    }\n}\nDisposableStore.DISABLE_DISPOSED_WARNING = false;\nexport class Disposable {\n    constructor() {\n        this._store = new DisposableStore();\n        trackDisposable(this);\n        setParentOfDisposable(this._store, this);\n    }\n    dispose() {\n        markAsDisposed(this);\n        this._store.dispose();\n    }\n    _register(o) {\n        if (o === this) {\n            throw new Error('Cannot register a disposable on itself!');\n        }\n        return this._store.add(o);\n    }\n}\nDisposable.None = Object.freeze({ dispose() { } });\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable {\n    constructor() {\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    get value() {\n        return this._isDisposed ? undefined : this._value;\n    }\n    set value(value) {\n        var _a;\n        if (this._isDisposed || value === this._value) {\n            return;\n        }\n        (_a = this._value) === null || _a === void 0 ? void 0 : _a.dispose();\n        if (value) {\n            setParentOfDisposable(value, this);\n        }\n        this._value = value;\n    }\n    clear() {\n        this.value = undefined;\n    }\n    dispose() {\n        var _a;\n        this._isDisposed = true;\n        markAsDisposed(this);\n        (_a = this._value) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._value = undefined;\n    }\n    /**\n     * Clears the value, but does not dispose it.\n     * The old value is returned.\n    */\n    clearAndLeak() {\n        const oldValue = this._value;\n        this._value = undefined;\n        if (oldValue) {\n            setParentOfDisposable(oldValue, null);\n        }\n        return oldValue;\n    }\n}\nexport class ImmortalReference {\n    constructor(object) {\n        this.object = object;\n    }\n    dispose() { }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nclass Node {\n    constructor(element) {\n        this.element = element;\n        this.next = Node.Undefined;\n        this.prev = Node.Undefined;\n    }\n}\nNode.Undefined = new Node(undefined);\nexport class LinkedList {\n    constructor() {\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    get size() {\n        return this._size;\n    }\n    isEmpty() {\n        return this._first === Node.Undefined;\n    }\n    clear() {\n        let node = this._first;\n        while (node !== Node.Undefined) {\n            const next = node.next;\n            node.prev = Node.Undefined;\n            node.next = Node.Undefined;\n            node = next;\n        }\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    unshift(element) {\n        return this._insert(element, false);\n    }\n    push(element) {\n        return this._insert(element, true);\n    }\n    _insert(element, atTheEnd) {\n        const newNode = new Node(element);\n        if (this._first === Node.Undefined) {\n            this._first = newNode;\n            this._last = newNode;\n        }\n        else if (atTheEnd) {\n            // push\n            const oldLast = this._last;\n            this._last = newNode;\n            newNode.prev = oldLast;\n            oldLast.next = newNode;\n        }\n        else {\n            // unshift\n            const oldFirst = this._first;\n            this._first = newNode;\n            newNode.next = oldFirst;\n            oldFirst.prev = newNode;\n        }\n        this._size += 1;\n        let didRemove = false;\n        return () => {\n            if (!didRemove) {\n                didRemove = true;\n                this._remove(newNode);\n            }\n        };\n    }\n    shift() {\n        if (this._first === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            const res = this._first.element;\n            this._remove(this._first);\n            return res;\n        }\n    }\n    pop() {\n        if (this._last === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            const res = this._last.element;\n            this._remove(this._last);\n            return res;\n        }\n    }\n    _remove(node) {\n        if (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n            // middle\n            const anchor = node.prev;\n            anchor.next = node.next;\n            node.next.prev = anchor;\n        }\n        else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n            // only node\n            this._first = Node.Undefined;\n            this._last = Node.Undefined;\n        }\n        else if (node.next === Node.Undefined) {\n            // last\n            this._last = this._last.prev;\n            this._last.next = Node.Undefined;\n        }\n        else if (node.prev === Node.Undefined) {\n            // first\n            this._first = this._first.next;\n            this._first.prev = Node.Undefined;\n        }\n        // done\n        this._size -= 1;\n    }\n    *[Symbol.iterator]() {\n        let node = this._first;\n        while (node !== Node.Undefined) {\n            yield node.element;\n            node = node.next;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _a;\nconst LANGUAGE_DEFAULT = 'en';\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isLinuxSnap = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isIOS = false;\nlet _locale = undefined;\nlet _language = LANGUAGE_DEFAULT;\nlet _translationsConfigFile = undefined;\nlet _userAgent = undefined;\nexport const globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\nlet nodeProcess = undefined;\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n    // Native environment (sandboxed)\n    nodeProcess = globals.vscode.process;\n}\nelse if (typeof process !== 'undefined') {\n    // Native environment (non-sandboxed)\n    nodeProcess = process;\n}\nconst isElectronRenderer = typeof ((_a = nodeProcess === null || nodeProcess === void 0 ? void 0 : nodeProcess.versions) === null || _a === void 0 ? void 0 : _a.electron) === 'string' && nodeProcess.type === 'renderer';\n// Web environment\nif (typeof navigator === 'object' && !isElectronRenderer) {\n    _userAgent = navigator.userAgent;\n    _isWindows = _userAgent.indexOf('Windows') >= 0;\n    _isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n    _isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n    _isLinux = _userAgent.indexOf('Linux') >= 0;\n    _isWeb = true;\n    _locale = navigator.language;\n    _language = _locale;\n}\n// Native environment\nelse if (typeof nodeProcess === 'object') {\n    _isWindows = (nodeProcess.platform === 'win32');\n    _isMacintosh = (nodeProcess.platform === 'darwin');\n    _isLinux = (nodeProcess.platform === 'linux');\n    _isLinuxSnap = _isLinux && !!nodeProcess.env['SNAP'] && !!nodeProcess.env['SNAP_REVISION'];\n    _locale = LANGUAGE_DEFAULT;\n    _language = LANGUAGE_DEFAULT;\n    const rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n    if (rawNlsConfig) {\n        try {\n            const nlsConfig = JSON.parse(rawNlsConfig);\n            const resolved = nlsConfig.availableLanguages['*'];\n            _locale = nlsConfig.locale;\n            // VSCode's default language is 'en'\n            _language = resolved ? resolved : LANGUAGE_DEFAULT;\n            _translationsConfigFile = nlsConfig._translationsConfigFile;\n        }\n        catch (e) {\n        }\n    }\n    _isNative = true;\n}\n// Unknown environment\nelse {\n    console.error('Unable to resolve platform.');\n}\nlet _platform = 0 /* Web */;\nif (_isMacintosh) {\n    _platform = 1 /* Mac */;\n}\nelse if (_isWindows) {\n    _platform = 3 /* Windows */;\n}\nelse if (_isLinux) {\n    _platform = 2 /* Linux */;\n}\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const isIOS = _isIOS;\nexport const userAgent = _userAgent;\nexport const setImmediate = (function defineSetImmediate() {\n    if (globals.setImmediate) {\n        return globals.setImmediate.bind(globals);\n    }\n    if (typeof globals.postMessage === 'function' && !globals.importScripts) {\n        let pending = [];\n        globals.addEventListener('message', (e) => {\n            if (e.data && e.data.vscodeSetImmediateId) {\n                for (let i = 0, len = pending.length; i < len; i++) {\n                    const candidate = pending[i];\n                    if (candidate.id === e.data.vscodeSetImmediateId) {\n                        pending.splice(i, 1);\n                        candidate.callback();\n                        return;\n                    }\n                }\n            }\n        });\n        let lastId = 0;\n        return (callback) => {\n            const myId = ++lastId;\n            pending.push({\n                id: myId,\n                callback: callback\n            });\n            globals.postMessage({ vscodeSetImmediateId: myId }, '*');\n        };\n    }\n    if (typeof (nodeProcess === null || nodeProcess === void 0 ? void 0 : nodeProcess.nextTick) === 'function') {\n        return nodeProcess.nextTick.bind(nodeProcess);\n    }\n    const _promise = Promise.resolve();\n    return (callback) => _promise.then(callback);\n})();\nexport const OS = (_isMacintosh || _isIOS ? 2 /* Macintosh */ : (_isWindows ? 1 /* Windows */ : 3 /* Linux */));\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian() {\n    if (!_isLittleEndianComputed) {\n        _isLittleEndianComputed = true;\n        const test = new Uint8Array(2);\n        test[0] = 1;\n        test[1] = 2;\n        const view = new Uint16Array(test.buffer);\n        _isLittleEndian = (view[0] === (2 << 8) + 1);\n    }\n    return _isLittleEndian;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { globals } from './platform.js';\nconst hasPerformanceNow = (globals.performance && typeof globals.performance.now === 'function');\nexport class StopWatch {\n    constructor(highResolution) {\n        this._highResolution = hasPerformanceNow && highResolution;\n        this._startTime = this._now();\n        this._stopTime = -1;\n    }\n    static create(highResolution = true) {\n        return new StopWatch(highResolution);\n    }\n    stop() {\n        this._stopTime = this._now();\n    }\n    elapsed() {\n        if (this._stopTime !== -1) {\n            return this._stopTime - this._startTime;\n        }\n        return this._now() - this._startTime;\n    }\n    _now() {\n        return this._highResolution ? globals.performance.now() : Date.now();\n    }\n}\n","import { onUnexpectedError } from './errors.js';\nimport { combinedDisposable, Disposable, DisposableStore, toDisposable } from './lifecycle.js';\nimport { LinkedList } from './linkedList.js';\nimport { StopWatch } from './stopwatch.js';\nexport var Event;\n(function (Event) {\n    Event.None = () => Disposable.None;\n    /**\n     * Given an event, returns another event which only fires once.\n     */\n    function once(event) {\n        return (listener, thisArgs = null, disposables) => {\n            // we need this, in case the event fires during the listener call\n            let didFire = false;\n            let result;\n            result = event(e => {\n                if (didFire) {\n                    return;\n                }\n                else if (result) {\n                    result.dispose();\n                }\n                else {\n                    didFire = true;\n                }\n                return listener.call(thisArgs, e);\n            }, null, disposables);\n            if (didFire) {\n                result.dispose();\n            }\n            return result;\n        };\n    }\n    Event.once = once;\n    /**\n     * @deprecated DO NOT use, this leaks memory\n     */\n    function map(event, map) {\n        return snapshot((listener, thisArgs = null, disposables) => event(i => listener.call(thisArgs, map(i)), null, disposables));\n    }\n    Event.map = map;\n    /**\n     * @deprecated DO NOT use, this leaks memory\n     */\n    function forEach(event, each) {\n        return snapshot((listener, thisArgs = null, disposables) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables));\n    }\n    Event.forEach = forEach;\n    function filter(event, filter) {\n        return snapshot((listener, thisArgs = null, disposables) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables));\n    }\n    Event.filter = filter;\n    /**\n     * Given an event, returns the same event but typed as `Event<void>`.\n     */\n    function signal(event) {\n        return event;\n    }\n    Event.signal = signal;\n    function any(...events) {\n        return (listener, thisArgs = null, disposables) => combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n    }\n    Event.any = any;\n    /**\n     * @deprecated DO NOT use, this leaks memory\n     */\n    function reduce(event, merge, initial) {\n        let output = initial;\n        return map(event, e => {\n            output = merge(output, e);\n            return output;\n        });\n    }\n    Event.reduce = reduce;\n    /**\n     * @deprecated DO NOT use, this leaks memory\n     */\n    function snapshot(event) {\n        let listener;\n        const emitter = new Emitter({\n            onFirstListenerAdd() {\n                listener = event(emitter.fire, emitter);\n            },\n            onLastListenerRemove() {\n                listener.dispose();\n            }\n        });\n        return emitter.event;\n    }\n    /**\n     * @deprecated DO NOT use, this leaks memory\n     */\n    function debounce(event, merge, delay = 100, leading = false, leakWarningThreshold) {\n        let subscription;\n        let output = undefined;\n        let handle = undefined;\n        let numDebouncedCalls = 0;\n        const emitter = new Emitter({\n            leakWarningThreshold,\n            onFirstListenerAdd() {\n                subscription = event(cur => {\n                    numDebouncedCalls++;\n                    output = merge(output, cur);\n                    if (leading && !handle) {\n                        emitter.fire(output);\n                        output = undefined;\n                    }\n                    clearTimeout(handle);\n                    handle = setTimeout(() => {\n                        const _output = output;\n                        output = undefined;\n                        handle = undefined;\n                        if (!leading || numDebouncedCalls > 1) {\n                            emitter.fire(_output);\n                        }\n                        numDebouncedCalls = 0;\n                    }, delay);\n                });\n            },\n            onLastListenerRemove() {\n                subscription.dispose();\n            }\n        });\n        return emitter.event;\n    }\n    Event.debounce = debounce;\n    /**\n     * @deprecated DO NOT use, this leaks memory\n     */\n    function latch(event, equals = (a, b) => a === b) {\n        let firstCall = true;\n        let cache;\n        return filter(event, value => {\n            const shouldEmit = firstCall || !equals(value, cache);\n            firstCall = false;\n            cache = value;\n            return shouldEmit;\n        });\n    }\n    Event.latch = latch;\n    /**\n     * @deprecated DO NOT use, this leaks memory\n     */\n    function split(event, isT) {\n        return [\n            Event.filter(event, isT),\n            Event.filter(event, e => !isT(e)),\n        ];\n    }\n    Event.split = split;\n    /**\n     * @deprecated DO NOT use, this leaks memory\n     */\n    function buffer(event, nextTick = false, _buffer = []) {\n        let buffer = _buffer.slice();\n        let listener = event(e => {\n            if (buffer) {\n                buffer.push(e);\n            }\n            else {\n                emitter.fire(e);\n            }\n        });\n        const flush = () => {\n            if (buffer) {\n                buffer.forEach(e => emitter.fire(e));\n            }\n            buffer = null;\n        };\n        const emitter = new Emitter({\n            onFirstListenerAdd() {\n                if (!listener) {\n                    listener = event(e => emitter.fire(e));\n                }\n            },\n            onFirstListenerDidAdd() {\n                if (buffer) {\n                    if (nextTick) {\n                        setTimeout(flush);\n                    }\n                    else {\n                        flush();\n                    }\n                }\n            },\n            onLastListenerRemove() {\n                if (listener) {\n                    listener.dispose();\n                }\n                listener = null;\n            }\n        });\n        return emitter.event;\n    }\n    Event.buffer = buffer;\n    class ChainableEvent {\n        constructor(event) {\n            this.event = event;\n        }\n        map(fn) {\n            return new ChainableEvent(map(this.event, fn));\n        }\n        forEach(fn) {\n            return new ChainableEvent(forEach(this.event, fn));\n        }\n        filter(fn) {\n            return new ChainableEvent(filter(this.event, fn));\n        }\n        reduce(merge, initial) {\n            return new ChainableEvent(reduce(this.event, merge, initial));\n        }\n        latch() {\n            return new ChainableEvent(latch(this.event));\n        }\n        debounce(merge, delay = 100, leading = false, leakWarningThreshold) {\n            return new ChainableEvent(debounce(this.event, merge, delay, leading, leakWarningThreshold));\n        }\n        on(listener, thisArgs, disposables) {\n            return this.event(listener, thisArgs, disposables);\n        }\n        once(listener, thisArgs, disposables) {\n            return once(this.event)(listener, thisArgs, disposables);\n        }\n    }\n    /**\n     * @deprecated DO NOT use, this leaks memory\n     */\n    function chain(event) {\n        return new ChainableEvent(event);\n    }\n    Event.chain = chain;\n    function fromNodeEventEmitter(emitter, eventName, map = id => id) {\n        const fn = (...args) => result.fire(map(...args));\n        const onFirstListenerAdd = () => emitter.on(eventName, fn);\n        const onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n        const result = new Emitter({ onFirstListenerAdd, onLastListenerRemove });\n        return result.event;\n    }\n    Event.fromNodeEventEmitter = fromNodeEventEmitter;\n    function fromDOMEventEmitter(emitter, eventName, map = id => id) {\n        const fn = (...args) => result.fire(map(...args));\n        const onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n        const onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n        const result = new Emitter({ onFirstListenerAdd, onLastListenerRemove });\n        return result.event;\n    }\n    Event.fromDOMEventEmitter = fromDOMEventEmitter;\n    function toPromise(event) {\n        return new Promise(resolve => once(event)(resolve));\n    }\n    Event.toPromise = toPromise;\n})(Event || (Event = {}));\nclass EventProfiling {\n    constructor(name) {\n        this._listenerCount = 0;\n        this._invocationCount = 0;\n        this._elapsedOverall = 0;\n        this._name = `${name}_${EventProfiling._idPool++}`;\n    }\n    start(listenerCount) {\n        this._stopWatch = new StopWatch(true);\n        this._listenerCount = listenerCount;\n    }\n    stop() {\n        if (this._stopWatch) {\n            const elapsed = this._stopWatch.elapsed();\n            this._elapsedOverall += elapsed;\n            this._invocationCount += 1;\n            console.info(`did FIRE ${this._name}: elapsed_ms: ${elapsed.toFixed(5)}, listener: ${this._listenerCount} (elapsed_overall: ${this._elapsedOverall.toFixed(2)}, invocations: ${this._invocationCount})`);\n            this._stopWatch = undefined;\n        }\n    }\n}\nEventProfiling._idPool = 0;\nlet _globalLeakWarningThreshold = -1;\nclass LeakageMonitor {\n    constructor(customThreshold, name = Math.random().toString(18).slice(2, 5)) {\n        this.customThreshold = customThreshold;\n        this.name = name;\n        this._warnCountdown = 0;\n    }\n    dispose() {\n        if (this._stacks) {\n            this._stacks.clear();\n        }\n    }\n    check(listenerCount) {\n        let threshold = _globalLeakWarningThreshold;\n        if (typeof this.customThreshold === 'number') {\n            threshold = this.customThreshold;\n        }\n        if (threshold <= 0 || listenerCount < threshold) {\n            return undefined;\n        }\n        if (!this._stacks) {\n            this._stacks = new Map();\n        }\n        const stack = new Error().stack.split('\\n').slice(3).join('\\n');\n        const count = (this._stacks.get(stack) || 0);\n        this._stacks.set(stack, count + 1);\n        this._warnCountdown -= 1;\n        if (this._warnCountdown <= 0) {\n            // only warn on first exceed and then every time the limit\n            // is exceeded by 50% again\n            this._warnCountdown = threshold * 0.5;\n            // find most frequent listener and print warning\n            let topStack;\n            let topCount = 0;\n            for (const [stack, count] of this._stacks) {\n                if (!topStack || topCount < count) {\n                    topStack = stack;\n                    topCount = count;\n                }\n            }\n            console.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n            console.warn(topStack);\n        }\n        return () => {\n            const count = (this._stacks.get(stack) || 0);\n            this._stacks.set(stack, count - 1);\n        };\n    }\n}\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n    class Document {\n\n        private readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n        public onDidChange = this._onDidChange.event;\n\n        // getter-style\n        // get onDidChange(): Event<(value:string)=>any> {\n        // \treturn this._onDidChange.event;\n        // }\n\n        private _doIt() {\n            //...\n            this._onDidChange.fire(value);\n        }\n    }\n */\nexport class Emitter {\n    constructor(options) {\n        var _a;\n        this._disposed = false;\n        this._options = options;\n        this._leakageMon = _globalLeakWarningThreshold > 0 ? new LeakageMonitor(this._options && this._options.leakWarningThreshold) : undefined;\n        this._perfMon = ((_a = this._options) === null || _a === void 0 ? void 0 : _a._profName) ? new EventProfiling(this._options._profName) : undefined;\n    }\n    /**\n     * For the public to allow to subscribe\n     * to events from this Emitter\n     */\n    get event() {\n        if (!this._event) {\n            this._event = (listener, thisArgs, disposables) => {\n                var _a;\n                if (!this._listeners) {\n                    this._listeners = new LinkedList();\n                }\n                const firstListener = this._listeners.isEmpty();\n                if (firstListener && this._options && this._options.onFirstListenerAdd) {\n                    this._options.onFirstListenerAdd(this);\n                }\n                const remove = this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n                if (firstListener && this._options && this._options.onFirstListenerDidAdd) {\n                    this._options.onFirstListenerDidAdd(this);\n                }\n                if (this._options && this._options.onListenerDidAdd) {\n                    this._options.onListenerDidAdd(this, listener, thisArgs);\n                }\n                // check and record this emitter for potential leakage\n                const removeMonitor = (_a = this._leakageMon) === null || _a === void 0 ? void 0 : _a.check(this._listeners.size);\n                const result = toDisposable(() => {\n                    if (removeMonitor) {\n                        removeMonitor();\n                    }\n                    if (!this._disposed) {\n                        remove();\n                        if (this._options && this._options.onLastListenerRemove) {\n                            const hasListeners = (this._listeners && !this._listeners.isEmpty());\n                            if (!hasListeners) {\n                                this._options.onLastListenerRemove(this);\n                            }\n                        }\n                    }\n                });\n                if (disposables instanceof DisposableStore) {\n                    disposables.add(result);\n                }\n                else if (Array.isArray(disposables)) {\n                    disposables.push(result);\n                }\n                return result;\n            };\n        }\n        return this._event;\n    }\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    fire(event) {\n        var _a, _b;\n        if (this._listeners) {\n            // put all [listener,event]-pairs into delivery queue\n            // then emit all event. an inner/nested event might be\n            // the driver of this\n            if (!this._deliveryQueue) {\n                this._deliveryQueue = new LinkedList();\n            }\n            for (let listener of this._listeners) {\n                this._deliveryQueue.push([listener, event]);\n            }\n            // start/stop performance insight collection\n            (_a = this._perfMon) === null || _a === void 0 ? void 0 : _a.start(this._deliveryQueue.size);\n            while (this._deliveryQueue.size > 0) {\n                const [listener, event] = this._deliveryQueue.shift();\n                try {\n                    if (typeof listener === 'function') {\n                        listener.call(undefined, event);\n                    }\n                    else {\n                        listener[0].call(listener[1], event);\n                    }\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                }\n            }\n            (_b = this._perfMon) === null || _b === void 0 ? void 0 : _b.stop();\n        }\n    }\n    dispose() {\n        var _a, _b, _c, _d, _e;\n        if (!this._disposed) {\n            this._disposed = true;\n            (_a = this._listeners) === null || _a === void 0 ? void 0 : _a.clear();\n            (_b = this._deliveryQueue) === null || _b === void 0 ? void 0 : _b.clear();\n            (_d = (_c = this._options) === null || _c === void 0 ? void 0 : _c.onLastListenerRemove) === null || _d === void 0 ? void 0 : _d.call(_c);\n            (_e = this._leakageMon) === null || _e === void 0 ? void 0 : _e.dispose();\n        }\n    }\n}\nexport class PauseableEmitter extends Emitter {\n    constructor(options) {\n        super(options);\n        this._isPaused = 0;\n        this._eventQueue = new LinkedList();\n        this._mergeFn = options === null || options === void 0 ? void 0 : options.merge;\n    }\n    pause() {\n        this._isPaused++;\n    }\n    resume() {\n        if (this._isPaused !== 0 && --this._isPaused === 0) {\n            if (this._mergeFn) {\n                // use the merge function to create a single composite\n                // event. make a copy in case firing pauses this emitter\n                const events = Array.from(this._eventQueue);\n                this._eventQueue.clear();\n                super.fire(this._mergeFn(events));\n            }\n            else {\n                // no merging, fire each event individually and test\n                // that this emitter isn't paused halfway through\n                while (!this._isPaused && this._eventQueue.size !== 0) {\n                    super.fire(this._eventQueue.shift());\n                }\n            }\n        }\n    }\n    fire(event) {\n        if (this._listeners) {\n            if (this._isPaused !== 0) {\n                this._eventQueue.push(event);\n            }\n            else {\n                super.fire(event);\n            }\n        }\n    }\n}\nexport class DebounceEmitter extends PauseableEmitter {\n    constructor(options) {\n        var _a;\n        super(options);\n        this._delay = (_a = options.delay) !== null && _a !== void 0 ? _a : 100;\n    }\n    fire(event) {\n        if (!this._handle) {\n            this.pause();\n            this._handle = setTimeout(() => {\n                this._handle = undefined;\n                this.resume();\n            }, this._delay);\n        }\n        super.fire(event);\n    }\n}\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n    constructor() {\n        this.buffers = [];\n    }\n    wrapEvent(event) {\n        return (listener, thisArgs, disposables) => {\n            return event(i => {\n                const buffer = this.buffers[this.buffers.length - 1];\n                if (buffer) {\n                    buffer.push(() => listener.call(thisArgs, i));\n                }\n                else {\n                    listener.call(thisArgs, i);\n                }\n            }, undefined, disposables);\n        };\n    }\n    bufferEvents(fn) {\n        const buffer = [];\n        this.buffers.push(buffer);\n        const r = fn();\n        this.buffers.pop();\n        buffer.forEach(flush => flush());\n        return r;\n    }\n}\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay {\n    constructor() {\n        this.listening = false;\n        this.inputEvent = Event.None;\n        this.inputEventListener = Disposable.None;\n        this.emitter = new Emitter({\n            onFirstListenerDidAdd: () => {\n                this.listening = true;\n                this.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n            },\n            onLastListenerRemove: () => {\n                this.listening = false;\n                this.inputEventListener.dispose();\n            }\n        });\n        this.event = this.emitter.event;\n    }\n    set input(event) {\n        this.inputEvent = event;\n        if (this.listening) {\n            this.inputEventListener.dispose();\n            this.inputEventListener = event(this.emitter.fire, this.emitter);\n        }\n    }\n    dispose() {\n        this.inputEventListener.dispose();\n        this.emitter.dispose();\n    }\n}\n","/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array) {\n    return Array.isArray(array);\n}\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str) {\n    return (typeof str === 'string');\n}\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj) {\n    // The method can't do a type cast since there are type (like strings) which\n    // are subclasses of any put not positvely matched by the function. Hence type\n    // narrowing results in wrong results.\n    return typeof obj === 'object'\n        && obj !== null\n        && !Array.isArray(obj)\n        && !(obj instanceof RegExp)\n        && !(obj instanceof Date);\n}\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj) {\n    return (typeof obj === 'number' && !isNaN(obj));\n}\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj) {\n    return (obj === true || obj === false);\n}\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj) {\n    return (typeof obj === 'undefined');\n}\n/**\n * @returns whether the provided parameter is defined.\n */\nexport function isDefined(arg) {\n    return !isUndefinedOrNull(arg);\n}\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj) {\n    return (isUndefined(obj) || obj === null);\n}\nexport function assertType(condition, type) {\n    if (!condition) {\n        throw new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n    }\n}\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined(arg) {\n    if (isUndefinedOrNull(arg)) {\n        throw new Error('Assertion Failed: argument is undefined or null');\n    }\n    return arg;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj) {\n    return (typeof obj === 'function');\n}\nexport function validateConstraints(args, constraints) {\n    const len = Math.min(args.length, constraints.length);\n    for (let i = 0; i < len; i++) {\n        validateConstraint(args[i], constraints[i]);\n    }\n}\nexport function validateConstraint(arg, constraint) {\n    if (isString(constraint)) {\n        if (typeof arg !== constraint) {\n            throw new Error(`argument does not match constraint: typeof ${constraint}`);\n        }\n    }\n    else if (isFunction(constraint)) {\n        try {\n            if (arg instanceof constraint) {\n                return;\n            }\n        }\n        catch (_a) {\n            // ignore\n        }\n        if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n            return;\n        }\n        if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n            return;\n        }\n        throw new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n    }\n}\nexport function getAllPropertyNames(obj) {\n    let res = [];\n    let proto = Object.getPrototypeOf(obj);\n    while (Object.prototype !== proto) {\n        res = res.concat(Object.getOwnPropertyNames(proto));\n        proto = Object.getPrototypeOf(proto);\n    }\n    return res;\n}\nexport function getAllMethodNames(obj) {\n    const methods = [];\n    for (const prop of getAllPropertyNames(obj)) {\n        if (typeof obj[prop] === 'function') {\n            methods.push(prop);\n        }\n    }\n    return methods;\n}\nexport function createProxyObject(methodNames, invoke) {\n    const createProxyMethod = (method) => {\n        return function () {\n            const args = Array.prototype.slice.call(arguments, 0);\n            return invoke(method, args);\n        };\n    };\n    let result = {};\n    for (const methodName of methodNames) {\n        result[methodName] = createProxyMethod(methodName);\n    }\n    return result;\n}\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined(x) {\n    return x === null ? undefined : x;\n}\nexport function assertNever(value, message = 'Unreachable') {\n    throw new Error(message);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function isFalsyOrWhitespace(str) {\n    if (!str || typeof str !== 'string') {\n        return true;\n    }\n    return str.trim().length === 0;\n}\nconst _formatRegexp = /{(\\d+)}/g;\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value, ...args) {\n    if (args.length === 0) {\n        return value;\n    }\n    return value.replace(_formatRegexp, function (match, group) {\n        const idx = parseInt(group, 10);\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\n            match :\n            args[idx];\n    });\n}\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html) {\n    return html.replace(/[<>&]/g, function (match) {\n        switch (match) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '&': return '&amp;';\n            default: return match;\n        }\n    });\n}\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value) {\n    return value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack, needle = ' ') {\n    const trimmed = ltrim(haystack, needle);\n    return rtrim(trimmed, needle);\n}\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length;\n    if (needleLen === 0 || haystack.length === 0) {\n        return haystack;\n    }\n    let offset = 0;\n    while (haystack.indexOf(needle, offset) === offset) {\n        offset = offset + needleLen;\n    }\n    return haystack.substring(offset);\n}\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length, haystackLen = haystack.length;\n    if (needleLen === 0 || haystackLen === 0) {\n        return haystack;\n    }\n    let offset = haystackLen, idx = -1;\n    while (true) {\n        idx = haystack.lastIndexOf(needle, offset - 1);\n        if (idx === -1 || idx + needleLen !== offset) {\n            break;\n        }\n        if (idx === 0) {\n            return '';\n        }\n        offset = idx;\n    }\n    return haystack.substring(0, offset);\n}\nexport function convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\nexport function stripWildcards(pattern) {\n    return pattern.replace(/\\*/g, '');\n}\nexport function createRegExp(searchString, isRegex, options = {}) {\n    if (!searchString) {\n        throw new Error('Cannot create regex from empty string');\n    }\n    if (!isRegex) {\n        searchString = escapeRegExpCharacters(searchString);\n    }\n    if (options.wholeWord) {\n        if (!/\\B/.test(searchString.charAt(0))) {\n            searchString = '\\\\b' + searchString;\n        }\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n            searchString = searchString + '\\\\b';\n        }\n    }\n    let modifiers = '';\n    if (options.global) {\n        modifiers += 'g';\n    }\n    if (!options.matchCase) {\n        modifiers += 'i';\n    }\n    if (options.multiline) {\n        modifiers += 'm';\n    }\n    if (options.unicode) {\n        modifiers += 'u';\n    }\n    return new RegExp(searchString, modifiers);\n}\nexport function regExpLeadsToEndlessLoop(regexp) {\n    // Exit early if it's one of these special cases which are meant to match\n    // against an empty string\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n        return false;\n    }\n    // We check against an empty string. If the regular expression doesn't advance\n    // (e.g. ends in an endless loop) it will match an empty string.\n    const match = regexp.exec('');\n    return !!(match && regexp.lastIndex === 0);\n}\nexport function regExpFlags(regexp) {\n    return (regexp.global ? 'g' : '')\n        + (regexp.ignoreCase ? 'i' : '')\n        + (regexp.multiline ? 'm' : '')\n        + (regexp /* standalone editor compilation */.unicode ? 'u' : '');\n}\nexport function splitLines(str) {\n    return str.split(/\\r\\n|\\r|\\n/);\n}\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str) {\n    for (let i = 0, len = str.length; i < len; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str, start = 0, end = str.length) {\n    for (let i = start; i < end; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return str.substring(start, i);\n        }\n    }\n    return str.substring(start, end);\n}\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str, startIndex = str.length - 1) {\n    for (let i = startIndex; i >= 0; i--) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function compare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a > b) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nexport function compareSubstring(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        let codeA = a.charCodeAt(aStart);\n        let codeB = b.charCodeAt(bStart);\n        if (codeA < codeB) {\n            return -1;\n        }\n        else if (codeA > codeB) {\n            return 1;\n        }\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nexport function compareIgnoreCase(a, b) {\n    return compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\nexport function compareSubstringIgnoreCase(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        let codeA = a.charCodeAt(aStart);\n        let codeB = b.charCodeAt(bStart);\n        if (codeA === codeB) {\n            // equal\n            continue;\n        }\n        if (codeA >= 128 || codeB >= 128) {\n            // not ASCII letters -> fallback to lower-casing strings\n            return compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n        }\n        // mapper lower-case ascii letter onto upper-case varinats\n        // [97-122] (lower ascii) --> [65-90] (upper ascii)\n        if (isLowerAsciiLetter(codeA)) {\n            codeA -= 32;\n        }\n        if (isLowerAsciiLetter(codeB)) {\n            codeB -= 32;\n        }\n        // compare both code points\n        const diff = codeA - codeB;\n        if (diff === 0) {\n            continue;\n        }\n        return diff;\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nexport function isLowerAsciiLetter(code) {\n    return code >= 97 /* a */ && code <= 122 /* z */;\n}\nexport function isUpperAsciiLetter(code) {\n    return code >= 65 /* A */ && code <= 90 /* Z */;\n}\nexport function equalsIgnoreCase(a, b) {\n    return a.length === b.length && compareSubstringIgnoreCase(a, b) === 0;\n}\nexport function startsWithIgnoreCase(str, candidate) {\n    const candidateLength = candidate.length;\n    if (candidate.length > str.length) {\n        return false;\n    }\n    return compareSubstringIgnoreCase(str, candidate, 0, candidateLength) === 0;\n}\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a, b) {\n    let i, len = Math.min(a.length, b.length);\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a, b) {\n    let i, len = Math.min(a.length, b.length);\n    const aLastIndex = a.length - 1;\n    const bLastIndex = b.length - 1;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate, lowSurrogate) {\n    return ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str, len, offset) {\n    const charCode = str.charCodeAt(offset);\n    if (isHighSurrogate(charCode) && offset + 1 < len) {\n        const nextCharCode = str.charCodeAt(offset + 1);\n        if (isLowSurrogate(nextCharCode)) {\n            return computeCodePoint(charCode, nextCharCode);\n        }\n    }\n    return charCode;\n}\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str, offset) {\n    const charCode = str.charCodeAt(offset - 1);\n    if (isLowSurrogate(charCode) && offset > 1) {\n        const prevCharCode = str.charCodeAt(offset - 2);\n        if (isHighSurrogate(prevCharCode)) {\n            return computeCodePoint(prevCharCode, charCode);\n        }\n    }\n    return charCode;\n}\nexport function nextCharLength(str, offset) {\n    const graphemeBreakTree = GraphemeBreakTree.getInstance();\n    const initialOffset = offset;\n    const len = str.length;\n    const initialCodePoint = getNextCodePoint(str, len, offset);\n    offset += (initialCodePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n    let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n    while (offset < len) {\n        const nextCodePoint = getNextCodePoint(str, len, offset);\n        const nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n        if (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n            break;\n        }\n        offset += (nextCodePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n        graphemeBreakType = nextGraphemeBreakType;\n    }\n    return (offset - initialOffset);\n}\nexport function prevCharLength(str, offset) {\n    const graphemeBreakTree = GraphemeBreakTree.getInstance();\n    const initialOffset = offset;\n    const initialCodePoint = getPrevCodePoint(str, offset);\n    offset -= (initialCodePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n    let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n    while (offset > 0) {\n        const prevCodePoint = getPrevCodePoint(str, offset);\n        const prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n        if (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n            break;\n        }\n        offset -= (prevCodePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n        graphemeBreakType = prevGraphemeBreakType;\n    }\n    return (initialOffset - offset);\n}\n/**\n * Generated using https://github.com/alexdima/unicode-utils/blob/master/generate-rtl-test.js\n */\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str) {\n    return CONTAINS_RTL.test(str);\n}\n/**\n * Generated using https://github.com/alexdima/unicode-utils/blob/master/generate-emoji-test.js\n */\nconst CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD00-\\uDDFF\\uDE70-\\uDED6])/;\nexport function containsEmoji(str) {\n    return CONTAINS_EMOJI.test(str);\n}\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str) {\n    return IS_BASIC_ASCII.test(str);\n}\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\n/**\n * Returns true if `str` contains unusual line terminators, like LS or PS\n */\nexport function containsUnusualLineTerminators(str) {\n    return UNUSUAL_LINE_TERMINATORS.test(str);\n}\nexport function containsFullWidthCharacter(str) {\n    for (let i = 0, len = str.length; i < len; i++) {\n        if (isFullWidthCharacter(str.charCodeAt(i))) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFullWidthCharacter(charCode) {\n    // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n    // http://jrgraphix.net/research/unicode_blocks.php\n    //          2E80 — 2EFF   CJK Radicals Supplement\n    //          2F00 — 2FDF   Kangxi Radicals\n    //          2FF0 — 2FFF   Ideographic Description Characters\n    //          3000 — 303F   CJK Symbols and Punctuation\n    //          3040 — 309F   Hiragana\n    //          30A0 — 30FF   Katakana\n    //          3100 — 312F   Bopomofo\n    //          3130 — 318F   Hangul Compatibility Jamo\n    //          3190 — 319F   Kanbun\n    //          31A0 — 31BF   Bopomofo Extended\n    //          31F0 — 31FF   Katakana Phonetic Extensions\n    //          3200 — 32FF   Enclosed CJK Letters and Months\n    //          3300 — 33FF   CJK Compatibility\n    //          3400 — 4DBF   CJK Unified Ideographs Extension A\n    //          4DC0 — 4DFF   Yijing Hexagram Symbols\n    //          4E00 — 9FFF   CJK Unified Ideographs\n    //          A000 — A48F   Yi Syllables\n    //          A490 — A4CF   Yi Radicals\n    //          AC00 — D7AF   Hangul Syllables\n    // [IGNORE] D800 — DB7F   High Surrogates\n    // [IGNORE] DB80 — DBFF   High Private Use Surrogates\n    // [IGNORE] DC00 — DFFF   Low Surrogates\n    // [IGNORE] E000 — F8FF   Private Use Area\n    //          F900 — FAFF   CJK Compatibility Ideographs\n    // [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n    // [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n    // [IGNORE] FE00 — FE0F   Variation Selectors\n    // [IGNORE] FE20 — FE2F   Combining Half Marks\n    // [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n    // [IGNORE] FE50 — FE6F   Small Form Variants\n    // [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n    //          FF00 — FFEF   Halfwidth and Fullwidth Forms\n    //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n    //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n    // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n    // [IGNORE] FFF0 — FFFF   Specials\n    charCode = +charCode; // @perf\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\n}\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexdima/unicode-utils/blob/master/generate-emoji-test.js\n */\nexport function isEmojiImprecise(x) {\n    return ((x >= 0x1F1E6 && x <= 0x1F1FF) || (x === 8986) || (x === 8987) || (x === 9200)\n        || (x === 9203) || (x >= 9728 && x <= 10175) || (x === 11088) || (x === 11093)\n        || (x >= 127744 && x <= 128591) || (x >= 128640 && x <= 128764)\n        || (x >= 128992 && x <= 129003) || (x >= 129280 && x <= 129535)\n        || (x >= 129648 && x <= 129750));\n}\n// -- UTF-8 BOM\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(65279 /* UTF8_BOM */);\nexport function startsWithUTF8BOM(str) {\n    return !!(str && str.length > 0 && str.charCodeAt(0) === 65279 /* UTF8_BOM */);\n}\nexport function containsUppercaseCharacter(target, ignoreEscapedChars = false) {\n    if (!target) {\n        return false;\n    }\n    if (ignoreEscapedChars) {\n        target = target.replace(/\\\\./g, '');\n    }\n    return target.toLowerCase() !== target;\n}\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n) {\n    const LETTERS_CNT = (90 /* Z */ - 65 /* A */ + 1);\n    n = n % (2 * LETTERS_CNT);\n    if (n < LETTERS_CNT) {\n        return String.fromCharCode(97 /* a */ + n);\n    }\n    return String.fromCharCode(65 /* A */ + n - LETTERS_CNT);\n}\n//#region Unicode Grapheme Break\nexport function getGraphemeBreakType(codePoint) {\n    const graphemeBreakTree = GraphemeBreakTree.getInstance();\n    return graphemeBreakTree.getGraphemeBreakType(codePoint);\n}\nexport function breakBetweenGraphemeBreakType(breakTypeA, breakTypeB) {\n    // http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n    // !!! Let's make the common case a bit faster\n    if (breakTypeA === 0 /* Other */) {\n        // see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n        return (breakTypeB !== 5 /* Extend */ && breakTypeB !== 7 /* SpacingMark */);\n    }\n    // Do not break between a CR and LF. Otherwise, break before and after controls.\n    // GB3                                        CR × LF\n    // GB4                       (Control | CR | LF) ÷\n    // GB5                                           ÷ (Control | CR | LF)\n    if (breakTypeA === 2 /* CR */) {\n        if (breakTypeB === 3 /* LF */) {\n            return false; // GB3\n        }\n    }\n    if (breakTypeA === 4 /* Control */ || breakTypeA === 2 /* CR */ || breakTypeA === 3 /* LF */) {\n        return true; // GB4\n    }\n    if (breakTypeB === 4 /* Control */ || breakTypeB === 2 /* CR */ || breakTypeB === 3 /* LF */) {\n        return true; // GB5\n    }\n    // Do not break Hangul syllable sequences.\n    // GB6                                         L × (L | V | LV | LVT)\n    // GB7                                  (LV | V) × (V | T)\n    // GB8                                 (LVT | T) × T\n    if (breakTypeA === 8 /* L */) {\n        if (breakTypeB === 8 /* L */ || breakTypeB === 9 /* V */ || breakTypeB === 11 /* LV */ || breakTypeB === 12 /* LVT */) {\n            return false; // GB6\n        }\n    }\n    if (breakTypeA === 11 /* LV */ || breakTypeA === 9 /* V */) {\n        if (breakTypeB === 9 /* V */ || breakTypeB === 10 /* T */) {\n            return false; // GB7\n        }\n    }\n    if (breakTypeA === 12 /* LVT */ || breakTypeA === 10 /* T */) {\n        if (breakTypeB === 10 /* T */) {\n            return false; // GB8\n        }\n    }\n    // Do not break before extending characters or ZWJ.\n    // GB9                                           × (Extend | ZWJ)\n    if (breakTypeB === 5 /* Extend */ || breakTypeB === 13 /* ZWJ */) {\n        return false; // GB9\n    }\n    // The GB9a and GB9b rules only apply to extended grapheme clusters:\n    // Do not break before SpacingMarks, or after Prepend characters.\n    // GB9a                                          × SpacingMark\n    // GB9b                                  Prepend ×\n    if (breakTypeB === 7 /* SpacingMark */) {\n        return false; // GB9a\n    }\n    if (breakTypeA === 1 /* Prepend */) {\n        return false; // GB9b\n    }\n    // Do not break within emoji modifier sequences or emoji zwj sequences.\n    // GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n    if (breakTypeA === 13 /* ZWJ */ && breakTypeB === 14 /* Extended_Pictographic */) {\n        // Note: we are not implementing the rule entirely here to avoid introducing states\n        return false; // GB11\n    }\n    // GB12                          sot (RI RI)* RI × RI\n    // GB13                        [^RI] (RI RI)* RI × RI\n    if (breakTypeA === 6 /* Regional_Indicator */ && breakTypeB === 6 /* Regional_Indicator */) {\n        // Note: we are not implementing the rule entirely here to avoid introducing states\n        return false; // GB12 & GB13\n    }\n    // GB999                                     Any ÷ Any\n    return true;\n}\nclass GraphemeBreakTree {\n    constructor() {\n        this._data = getGraphemeBreakRawData();\n    }\n    static getInstance() {\n        if (!GraphemeBreakTree._INSTANCE) {\n            GraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n        }\n        return GraphemeBreakTree._INSTANCE;\n    }\n    getGraphemeBreakType(codePoint) {\n        // !!! Let's make 7bit ASCII a bit faster: 0..31\n        if (codePoint < 32) {\n            if (codePoint === 10 /* LineFeed */) {\n                return 3 /* LF */;\n            }\n            if (codePoint === 13 /* CarriageReturn */) {\n                return 2 /* CR */;\n            }\n            return 4 /* Control */;\n        }\n        // !!! Let's make 7bit ASCII a bit faster: 32..126\n        if (codePoint < 127) {\n            return 0 /* Other */;\n        }\n        const data = this._data;\n        const nodeCount = data.length / 3;\n        let nodeIndex = 1;\n        while (nodeIndex <= nodeCount) {\n            if (codePoint < data[3 * nodeIndex]) {\n                // go left\n                nodeIndex = 2 * nodeIndex;\n            }\n            else if (codePoint > data[3 * nodeIndex + 1]) {\n                // go right\n                nodeIndex = 2 * nodeIndex + 1;\n            }\n            else {\n                // hit\n                return data[3 * nodeIndex + 2];\n            }\n        }\n        return 0 /* Other */;\n    }\n}\nGraphemeBreakTree._INSTANCE = null;\nfunction getGraphemeBreakRawData() {\n    // generated using https://github.com/alexdima/unicode-utils/blob/master/generate-grapheme-break.js\n    return JSON.parse('[0,0,0,51592,51592,11,44424,44424,11,72251,72254,5,7150,7150,7,48008,48008,11,55176,55176,11,128420,128420,14,3276,3277,5,9979,9980,14,46216,46216,11,49800,49800,11,53384,53384,11,70726,70726,5,122915,122916,5,129320,129327,14,2558,2558,5,5906,5908,5,9762,9763,14,43360,43388,8,45320,45320,11,47112,47112,11,48904,48904,11,50696,50696,11,52488,52488,11,54280,54280,11,70082,70083,1,71350,71350,7,73111,73111,5,127892,127893,14,128726,128727,14,129473,129474,14,2027,2035,5,2901,2902,5,3784,3789,5,6754,6754,5,8418,8420,5,9877,9877,14,11088,11088,14,44008,44008,5,44872,44872,11,45768,45768,11,46664,46664,11,47560,47560,11,48456,48456,11,49352,49352,11,50248,50248,11,51144,51144,11,52040,52040,11,52936,52936,11,53832,53832,11,54728,54728,11,69811,69814,5,70459,70460,5,71096,71099,7,71998,71998,5,72874,72880,5,119149,119149,7,127374,127374,14,128335,128335,14,128482,128482,14,128765,128767,14,129399,129400,14,129680,129685,14,1476,1477,5,2377,2380,7,2759,2760,5,3137,3140,7,3458,3459,7,4153,4154,5,6432,6434,5,6978,6978,5,7675,7679,5,9723,9726,14,9823,9823,14,9919,9923,14,10035,10036,14,42736,42737,5,43596,43596,5,44200,44200,11,44648,44648,11,45096,45096,11,45544,45544,11,45992,45992,11,46440,46440,11,46888,46888,11,47336,47336,11,47784,47784,11,48232,48232,11,48680,48680,11,49128,49128,11,49576,49576,11,50024,50024,11,50472,50472,11,50920,50920,11,51368,51368,11,51816,51816,11,52264,52264,11,52712,52712,11,53160,53160,11,53608,53608,11,54056,54056,11,54504,54504,11,54952,54952,11,68108,68111,5,69933,69940,5,70197,70197,7,70498,70499,7,70845,70845,5,71229,71229,5,71727,71735,5,72154,72155,5,72344,72345,5,73023,73029,5,94095,94098,5,121403,121452,5,126981,127182,14,127538,127546,14,127990,127990,14,128391,128391,14,128445,128449,14,128500,128505,14,128752,128752,14,129160,129167,14,129356,129356,14,129432,129442,14,129648,129651,14,129751,131069,14,173,173,4,1757,1757,1,2274,2274,1,2494,2494,5,2641,2641,5,2876,2876,5,3014,3016,7,3262,3262,7,3393,3396,5,3570,3571,7,3968,3972,5,4228,4228,7,6086,6086,5,6679,6680,5,6912,6915,5,7080,7081,5,7380,7392,5,8252,8252,14,9096,9096,14,9748,9749,14,9784,9786,14,9833,9850,14,9890,9894,14,9938,9938,14,9999,9999,14,10085,10087,14,12349,12349,14,43136,43137,7,43454,43456,7,43755,43755,7,44088,44088,11,44312,44312,11,44536,44536,11,44760,44760,11,44984,44984,11,45208,45208,11,45432,45432,11,45656,45656,11,45880,45880,11,46104,46104,11,46328,46328,11,46552,46552,11,46776,46776,11,47000,47000,11,47224,47224,11,47448,47448,11,47672,47672,11,47896,47896,11,48120,48120,11,48344,48344,11,48568,48568,11,48792,48792,11,49016,49016,11,49240,49240,11,49464,49464,11,49688,49688,11,49912,49912,11,50136,50136,11,50360,50360,11,50584,50584,11,50808,50808,11,51032,51032,11,51256,51256,11,51480,51480,11,51704,51704,11,51928,51928,11,52152,52152,11,52376,52376,11,52600,52600,11,52824,52824,11,53048,53048,11,53272,53272,11,53496,53496,11,53720,53720,11,53944,53944,11,54168,54168,11,54392,54392,11,54616,54616,11,54840,54840,11,55064,55064,11,65438,65439,5,69633,69633,5,69837,69837,1,70018,70018,7,70188,70190,7,70368,70370,7,70465,70468,7,70712,70719,5,70835,70840,5,70850,70851,5,71132,71133,5,71340,71340,7,71458,71461,5,71985,71989,7,72002,72002,7,72193,72202,5,72281,72283,5,72766,72766,7,72885,72886,5,73104,73105,5,92912,92916,5,113824,113827,4,119173,119179,5,121505,121519,5,125136,125142,5,127279,127279,14,127489,127490,14,127570,127743,14,127900,127901,14,128254,128254,14,128369,128370,14,128400,128400,14,128425,128432,14,128468,128475,14,128489,128494,14,128715,128720,14,128745,128745,14,128759,128760,14,129004,129023,14,129296,129304,14,129340,129342,14,129388,129392,14,129404,129407,14,129454,129455,14,129485,129487,14,129659,129663,14,129719,129727,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2363,2363,7,2402,2403,5,2507,2508,7,2622,2624,7,2691,2691,7,2786,2787,5,2881,2884,5,3006,3006,5,3072,3072,5,3170,3171,5,3267,3268,7,3330,3331,7,3406,3406,1,3538,3540,5,3655,3662,5,3897,3897,5,4038,4038,5,4184,4185,5,4352,4447,8,6068,6069,5,6155,6157,5,6448,6449,7,6742,6742,5,6783,6783,5,6966,6970,5,7042,7042,7,7143,7143,7,7212,7219,5,7412,7412,5,8206,8207,4,8294,8303,4,8596,8601,14,9410,9410,14,9742,9742,14,9757,9757,14,9770,9770,14,9794,9794,14,9828,9828,14,9855,9855,14,9882,9882,14,9900,9903,14,9929,9933,14,9963,9967,14,9987,9988,14,10006,10006,14,10062,10062,14,10175,10175,14,11744,11775,5,42607,42607,5,43043,43044,7,43263,43263,5,43444,43445,7,43569,43570,5,43698,43700,5,43766,43766,5,44032,44032,11,44144,44144,11,44256,44256,11,44368,44368,11,44480,44480,11,44592,44592,11,44704,44704,11,44816,44816,11,44928,44928,11,45040,45040,11,45152,45152,11,45264,45264,11,45376,45376,11,45488,45488,11,45600,45600,11,45712,45712,11,45824,45824,11,45936,45936,11,46048,46048,11,46160,46160,11,46272,46272,11,46384,46384,11,46496,46496,11,46608,46608,11,46720,46720,11,46832,46832,11,46944,46944,11,47056,47056,11,47168,47168,11,47280,47280,11,47392,47392,11,47504,47504,11,47616,47616,11,47728,47728,11,47840,47840,11,47952,47952,11,48064,48064,11,48176,48176,11,48288,48288,11,48400,48400,11,48512,48512,11,48624,48624,11,48736,48736,11,48848,48848,11,48960,48960,11,49072,49072,11,49184,49184,11,49296,49296,11,49408,49408,11,49520,49520,11,49632,49632,11,49744,49744,11,49856,49856,11,49968,49968,11,50080,50080,11,50192,50192,11,50304,50304,11,50416,50416,11,50528,50528,11,50640,50640,11,50752,50752,11,50864,50864,11,50976,50976,11,51088,51088,11,51200,51200,11,51312,51312,11,51424,51424,11,51536,51536,11,51648,51648,11,51760,51760,11,51872,51872,11,51984,51984,11,52096,52096,11,52208,52208,11,52320,52320,11,52432,52432,11,52544,52544,11,52656,52656,11,52768,52768,11,52880,52880,11,52992,52992,11,53104,53104,11,53216,53216,11,53328,53328,11,53440,53440,11,53552,53552,11,53664,53664,11,53776,53776,11,53888,53888,11,54000,54000,11,54112,54112,11,54224,54224,11,54336,54336,11,54448,54448,11,54560,54560,11,54672,54672,11,54784,54784,11,54896,54896,11,55008,55008,11,55120,55120,11,64286,64286,5,66272,66272,5,68900,68903,5,69762,69762,7,69817,69818,5,69927,69931,5,70003,70003,5,70070,70078,5,70094,70094,7,70194,70195,7,70206,70206,5,70400,70401,5,70463,70463,7,70475,70477,7,70512,70516,5,70722,70724,5,70832,70832,5,70842,70842,5,70847,70848,5,71088,71089,7,71102,71102,7,71219,71226,5,71231,71232,5,71342,71343,7,71453,71455,5,71463,71467,5,71737,71738,5,71995,71996,5,72000,72000,7,72145,72147,7,72160,72160,5,72249,72249,7,72273,72278,5,72330,72342,5,72752,72758,5,72850,72871,5,72882,72883,5,73018,73018,5,73031,73031,5,73109,73109,5,73461,73462,7,94031,94031,5,94192,94193,7,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,126976,126979,14,127184,127231,14,127344,127345,14,127405,127461,14,127514,127514,14,127561,127567,14,127778,127779,14,127896,127896,14,127985,127986,14,127995,127999,5,128326,128328,14,128360,128366,14,128378,128378,14,128394,128397,14,128405,128406,14,128422,128423,14,128435,128443,14,128453,128464,14,128479,128480,14,128484,128487,14,128496,128498,14,128640,128709,14,128723,128724,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129096,129103,14,129292,129292,14,129311,129311,14,129329,129330,14,129344,129349,14,129360,129374,14,129394,129394,14,129402,129402,14,129413,129425,14,129445,129450,14,129466,129471,14,129483,129483,14,129511,129535,14,129653,129655,14,129667,129670,14,129705,129711,14,129731,129743,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2307,2307,7,2366,2368,7,2382,2383,7,2434,2435,7,2497,2500,5,2519,2519,5,2563,2563,7,2631,2632,5,2677,2677,5,2750,2752,7,2763,2764,7,2817,2817,5,2879,2879,5,2891,2892,7,2914,2915,5,3008,3008,5,3021,3021,5,3076,3076,5,3146,3149,5,3202,3203,7,3264,3265,7,3271,3272,7,3298,3299,5,3390,3390,5,3402,3404,7,3426,3427,5,3535,3535,5,3544,3550,7,3635,3635,7,3763,3763,7,3893,3893,5,3953,3966,5,3981,3991,5,4145,4145,7,4157,4158,5,4209,4212,5,4237,4237,5,4520,4607,10,5970,5971,5,6071,6077,5,6089,6099,5,6277,6278,5,6439,6440,5,6451,6456,7,6683,6683,5,6744,6750,5,6765,6770,7,6846,6846,5,6964,6964,5,6972,6972,5,7019,7027,5,7074,7077,5,7083,7085,5,7146,7148,7,7154,7155,7,7222,7223,5,7394,7400,5,7416,7417,5,8204,8204,5,8233,8233,4,8288,8292,4,8413,8416,5,8482,8482,14,8986,8987,14,9193,9203,14,9654,9654,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9775,14,9792,9792,14,9800,9811,14,9825,9826,14,9831,9831,14,9852,9853,14,9872,9873,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9936,9936,14,9941,9960,14,9974,9974,14,9982,9985,14,9992,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10145,10145,14,11013,11015,14,11503,11505,5,12334,12335,5,12951,12951,14,42612,42621,5,43014,43014,5,43047,43047,7,43204,43205,5,43335,43345,5,43395,43395,7,43450,43451,7,43561,43566,5,43573,43574,5,43644,43644,5,43710,43711,5,43758,43759,7,44005,44005,5,44012,44012,7,44060,44060,11,44116,44116,11,44172,44172,11,44228,44228,11,44284,44284,11,44340,44340,11,44396,44396,11,44452,44452,11,44508,44508,11,44564,44564,11,44620,44620,11,44676,44676,11,44732,44732,11,44788,44788,11,44844,44844,11,44900,44900,11,44956,44956,11,45012,45012,11,45068,45068,11,45124,45124,11,45180,45180,11,45236,45236,11,45292,45292,11,45348,45348,11,45404,45404,11,45460,45460,11,45516,45516,11,45572,45572,11,45628,45628,11,45684,45684,11,45740,45740,11,45796,45796,11,45852,45852,11,45908,45908,11,45964,45964,11,46020,46020,11,46076,46076,11,46132,46132,11,46188,46188,11,46244,46244,11,46300,46300,11,46356,46356,11,46412,46412,11,46468,46468,11,46524,46524,11,46580,46580,11,46636,46636,11,46692,46692,11,46748,46748,11,46804,46804,11,46860,46860,11,46916,46916,11,46972,46972,11,47028,47028,11,47084,47084,11,47140,47140,11,47196,47196,11,47252,47252,11,47308,47308,11,47364,47364,11,47420,47420,11,47476,47476,11,47532,47532,11,47588,47588,11,47644,47644,11,47700,47700,11,47756,47756,11,47812,47812,11,47868,47868,11,47924,47924,11,47980,47980,11,48036,48036,11,48092,48092,11,48148,48148,11,48204,48204,11,48260,48260,11,48316,48316,11,48372,48372,11,48428,48428,11,48484,48484,11,48540,48540,11,48596,48596,11,48652,48652,11,48708,48708,11,48764,48764,11,48820,48820,11,48876,48876,11,48932,48932,11,48988,48988,11,49044,49044,11,49100,49100,11,49156,49156,11,49212,49212,11,49268,49268,11,49324,49324,11,49380,49380,11,49436,49436,11,49492,49492,11,49548,49548,11,49604,49604,11,49660,49660,11,49716,49716,11,49772,49772,11,49828,49828,11,49884,49884,11,49940,49940,11,49996,49996,11,50052,50052,11,50108,50108,11,50164,50164,11,50220,50220,11,50276,50276,11,50332,50332,11,50388,50388,11,50444,50444,11,50500,50500,11,50556,50556,11,50612,50612,11,50668,50668,11,50724,50724,11,50780,50780,11,50836,50836,11,50892,50892,11,50948,50948,11,51004,51004,11,51060,51060,11,51116,51116,11,51172,51172,11,51228,51228,11,51284,51284,11,51340,51340,11,51396,51396,11,51452,51452,11,51508,51508,11,51564,51564,11,51620,51620,11,51676,51676,11,51732,51732,11,51788,51788,11,51844,51844,11,51900,51900,11,51956,51956,11,52012,52012,11,52068,52068,11,52124,52124,11,52180,52180,11,52236,52236,11,52292,52292,11,52348,52348,11,52404,52404,11,52460,52460,11,52516,52516,11,52572,52572,11,52628,52628,11,52684,52684,11,52740,52740,11,52796,52796,11,52852,52852,11,52908,52908,11,52964,52964,11,53020,53020,11,53076,53076,11,53132,53132,11,53188,53188,11,53244,53244,11,53300,53300,11,53356,53356,11,53412,53412,11,53468,53468,11,53524,53524,11,53580,53580,11,53636,53636,11,53692,53692,11,53748,53748,11,53804,53804,11,53860,53860,11,53916,53916,11,53972,53972,11,54028,54028,11,54084,54084,11,54140,54140,11,54196,54196,11,54252,54252,11,54308,54308,11,54364,54364,11,54420,54420,11,54476,54476,11,54532,54532,11,54588,54588,11,54644,54644,11,54700,54700,11,54756,54756,11,54812,54812,11,54868,54868,11,54924,54924,11,54980,54980,11,55036,55036,11,55092,55092,11,55148,55148,11,55216,55238,9,65056,65071,5,65529,65531,4,68097,68099,5,68159,68159,5,69446,69456,5,69688,69702,5,69808,69810,7,69815,69816,7,69821,69821,1,69888,69890,5,69932,69932,7,69957,69958,7,70016,70017,5,70067,70069,7,70079,70080,7,70089,70092,5,70095,70095,5,70191,70193,5,70196,70196,5,70198,70199,5,70367,70367,5,70371,70378,5,70402,70403,7,70462,70462,5,70464,70464,5,70471,70472,7,70487,70487,5,70502,70508,5,70709,70711,7,70720,70721,7,70725,70725,7,70750,70750,5,70833,70834,7,70841,70841,7,70843,70844,7,70846,70846,7,70849,70849,7,71087,71087,5,71090,71093,5,71100,71101,5,71103,71104,5,71216,71218,7,71227,71228,7,71230,71230,7,71339,71339,5,71341,71341,5,71344,71349,5,71351,71351,5,71456,71457,7,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123628,123631,5,125252,125258,5,126980,126980,14,127183,127183,14,127245,127247,14,127340,127343,14,127358,127359,14,127377,127386,14,127462,127487,6,127491,127503,14,127535,127535,14,127548,127551,14,127568,127569,14,127744,127777,14,127780,127891,14,127894,127895,14,127897,127899,14,127902,127984,14,127987,127989,14,127991,127994,14,128000,128253,14,128255,128317,14,128329,128334,14,128336,128359,14,128367,128368,14,128371,128377,14,128379,128390,14,128392,128393,14,128398,128399,14,128401,128404,14,128407,128419,14,128421,128421,14,128424,128424,14,128433,128434,14,128444,128444,14,128450,128452,14,128465,128467,14,128476,128478,14,128481,128481,14,128483,128483,14,128488,128488,14,128495,128495,14,128499,128499,14,128506,128591,14,128710,128714,14,128721,128722,14,128725,128725,14,128728,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129664,129666,14,129671,129679,14,129686,129704,14,129712,129718,14,129728,129730,14,129744,129750,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2259,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3134,3136,5,3142,3144,5,3157,3158,5,3201,3201,5,3260,3260,5,3263,3263,5,3266,3266,5,3270,3270,5,3274,3275,7,3285,3286,5,3328,3329,5,3387,3388,5,3391,3392,7,3398,3400,7,3405,3405,5,3415,3415,5,3457,3457,5,3530,3530,5,3536,3537,7,3542,3542,5,3551,3551,5,3633,3633,5,3636,3642,5,3761,3761,5,3764,3772,5,3864,3865,5,3895,3895,5,3902,3903,7,3967,3967,7,3974,3975,5,3993,4028,5,4141,4144,5,4146,4151,5,4155,4156,7,4182,4183,7,4190,4192,5,4226,4226,5,4229,4230,5,4253,4253,5,4448,4519,9,4957,4959,5,5938,5940,5,6002,6003,5,6070,6070,7,6078,6085,7,6087,6088,7,6109,6109,5,6158,6158,4,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6848,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7673,5,8203,8203,4,8205,8205,13,8232,8232,4,8234,8238,4,8265,8265,14,8293,8293,4,8400,8412,5,8417,8417,5,8421,8432,5,8505,8505,14,8617,8618,14,9000,9000,14,9167,9167,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9776,9783,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9935,14,9937,9937,14,9939,9940,14,9961,9962,14,9968,9973,14,9975,9978,14,9981,9981,14,9986,9986,14,9989,9989,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10084,14,10133,10135,14,10160,10160,14,10548,10549,14,11035,11036,14,11093,11093,14,11647,11647,5,12330,12333,5,12336,12336,14,12441,12442,5,12953,12953,14,42608,42610,5,42654,42655,5,43010,43010,5,43019,43019,5,43045,43046,5,43052,43052,5,43188,43203,7,43232,43249,5,43302,43309,5,43346,43347,7,43392,43394,5,43443,43443,5,43446,43449,5,43452,43453,5,43493,43493,5,43567,43568,7,43571,43572,7,43587,43587,5,43597,43597,7,43696,43696,5,43703,43704,5,43713,43713,5,43756,43757,5,43765,43765,7,44003,44004,7,44006,44007,7,44009,44010,7,44013,44013,5,44033,44059,12,44061,44087,12,44089,44115,12,44117,44143,12,44145,44171,12,44173,44199,12,44201,44227,12,44229,44255,12,44257,44283,12,44285,44311,12,44313,44339,12,44341,44367,12,44369,44395,12,44397,44423,12,44425,44451,12,44453,44479,12,44481,44507,12,44509,44535,12,44537,44563,12,44565,44591,12,44593,44619,12,44621,44647,12,44649,44675,12,44677,44703,12,44705,44731,12,44733,44759,12,44761,44787,12,44789,44815,12,44817,44843,12,44845,44871,12,44873,44899,12,44901,44927,12,44929,44955,12,44957,44983,12,44985,45011,12,45013,45039,12,45041,45067,12,45069,45095,12,45097,45123,12,45125,45151,12,45153,45179,12,45181,45207,12,45209,45235,12,45237,45263,12,45265,45291,12,45293,45319,12,45321,45347,12,45349,45375,12,45377,45403,12,45405,45431,12,45433,45459,12,45461,45487,12,45489,45515,12,45517,45543,12,45545,45571,12,45573,45599,12,45601,45627,12,45629,45655,12,45657,45683,12,45685,45711,12,45713,45739,12,45741,45767,12,45769,45795,12,45797,45823,12,45825,45851,12,45853,45879,12,45881,45907,12,45909,45935,12,45937,45963,12,45965,45991,12,45993,46019,12,46021,46047,12,46049,46075,12,46077,46103,12,46105,46131,12,46133,46159,12,46161,46187,12,46189,46215,12,46217,46243,12,46245,46271,12,46273,46299,12,46301,46327,12,46329,46355,12,46357,46383,12,46385,46411,12,46413,46439,12,46441,46467,12,46469,46495,12,46497,46523,12,46525,46551,12,46553,46579,12,46581,46607,12,46609,46635,12,46637,46663,12,46665,46691,12,46693,46719,12,46721,46747,12,46749,46775,12,46777,46803,12,46805,46831,12,46833,46859,12,46861,46887,12,46889,46915,12,46917,46943,12,46945,46971,12,46973,46999,12,47001,47027,12,47029,47055,12,47057,47083,12,47085,47111,12,47113,47139,12,47141,47167,12,47169,47195,12,47197,47223,12,47225,47251,12,47253,47279,12,47281,47307,12,47309,47335,12,47337,47363,12,47365,47391,12,47393,47419,12,47421,47447,12,47449,47475,12,47477,47503,12,47505,47531,12,47533,47559,12,47561,47587,12,47589,47615,12,47617,47643,12,47645,47671,12,47673,47699,12,47701,47727,12,47729,47755,12,47757,47783,12,47785,47811,12,47813,47839,12,47841,47867,12,47869,47895,12,47897,47923,12,47925,47951,12,47953,47979,12,47981,48007,12,48009,48035,12,48037,48063,12,48065,48091,12,48093,48119,12,48121,48147,12,48149,48175,12,48177,48203,12,48205,48231,12,48233,48259,12,48261,48287,12,48289,48315,12,48317,48343,12,48345,48371,12,48373,48399,12,48401,48427,12,48429,48455,12,48457,48483,12,48485,48511,12,48513,48539,12,48541,48567,12,48569,48595,12,48597,48623,12,48625,48651,12,48653,48679,12,48681,48707,12,48709,48735,12,48737,48763,12,48765,48791,12,48793,48819,12,48821,48847,12,48849,48875,12,48877,48903,12,48905,48931,12,48933,48959,12,48961,48987,12,48989,49015,12,49017,49043,12,49045,49071,12,49073,49099,12,49101,49127,12,49129,49155,12,49157,49183,12,49185,49211,12,49213,49239,12,49241,49267,12,49269,49295,12,49297,49323,12,49325,49351,12,49353,49379,12,49381,49407,12,49409,49435,12,49437,49463,12,49465,49491,12,49493,49519,12,49521,49547,12,49549,49575,12,49577,49603,12,49605,49631,12,49633,49659,12,49661,49687,12,49689,49715,12,49717,49743,12,49745,49771,12,49773,49799,12,49801,49827,12,49829,49855,12,49857,49883,12,49885,49911,12,49913,49939,12,49941,49967,12,49969,49995,12,49997,50023,12,50025,50051,12,50053,50079,12,50081,50107,12,50109,50135,12,50137,50163,12,50165,50191,12,50193,50219,12,50221,50247,12,50249,50275,12,50277,50303,12,50305,50331,12,50333,50359,12,50361,50387,12,50389,50415,12,50417,50443,12,50445,50471,12,50473,50499,12,50501,50527,12,50529,50555,12,50557,50583,12,50585,50611,12,50613,50639,12,50641,50667,12,50669,50695,12,50697,50723,12,50725,50751,12,50753,50779,12,50781,50807,12,50809,50835,12,50837,50863,12,50865,50891,12,50893,50919,12,50921,50947,12,50949,50975,12,50977,51003,12,51005,51031,12,51033,51059,12,51061,51087,12,51089,51115,12,51117,51143,12,51145,51171,12,51173,51199,12,51201,51227,12,51229,51255,12,51257,51283,12,51285,51311,12,51313,51339,12,51341,51367,12,51369,51395,12,51397,51423,12,51425,51451,12,51453,51479,12,51481,51507,12,51509,51535,12,51537,51563,12,51565,51591,12,51593,51619,12,51621,51647,12,51649,51675,12,51677,51703,12,51705,51731,12,51733,51759,12,51761,51787,12,51789,51815,12,51817,51843,12,51845,51871,12,51873,51899,12,51901,51927,12,51929,51955,12,51957,51983,12,51985,52011,12,52013,52039,12,52041,52067,12,52069,52095,12,52097,52123,12,52125,52151,12,52153,52179,12,52181,52207,12,52209,52235,12,52237,52263,12,52265,52291,12,52293,52319,12,52321,52347,12,52349,52375,12,52377,52403,12,52405,52431,12,52433,52459,12,52461,52487,12,52489,52515,12,52517,52543,12,52545,52571,12,52573,52599,12,52601,52627,12,52629,52655,12,52657,52683,12,52685,52711,12,52713,52739,12,52741,52767,12,52769,52795,12,52797,52823,12,52825,52851,12,52853,52879,12,52881,52907,12,52909,52935,12,52937,52963,12,52965,52991,12,52993,53019,12,53021,53047,12,53049,53075,12,53077,53103,12,53105,53131,12,53133,53159,12,53161,53187,12,53189,53215,12,53217,53243,12,53245,53271,12,53273,53299,12,53301,53327,12,53329,53355,12,53357,53383,12,53385,53411,12,53413,53439,12,53441,53467,12,53469,53495,12,53497,53523,12,53525,53551,12,53553,53579,12,53581,53607,12,53609,53635,12,53637,53663,12,53665,53691,12,53693,53719,12,53721,53747,12,53749,53775,12,53777,53803,12,53805,53831,12,53833,53859,12,53861,53887,12,53889,53915,12,53917,53943,12,53945,53971,12,53973,53999,12,54001,54027,12,54029,54055,12,54057,54083,12,54085,54111,12,54113,54139,12,54141,54167,12,54169,54195,12,54197,54223,12,54225,54251,12,54253,54279,12,54281,54307,12,54309,54335,12,54337,54363,12,54365,54391,12,54393,54419,12,54421,54447,12,54449,54475,12,54477,54503,12,54505,54531,12,54533,54559,12,54561,54587,12,54589,54615,12,54617,54643,12,54645,54671,12,54673,54699,12,54701,54727,12,54729,54755,12,54757,54783,12,54785,54811,12,54813,54839,12,54841,54867,12,54869,54895,12,54897,54923,12,54925,54951,12,54953,54979,12,54981,55007,12,55009,55035,12,55037,55063,12,55065,55091,12,55093,55119,12,55121,55147,12,55149,55175,12,55177,55203,12,55243,55291,10,65024,65039,5,65279,65279,4,65520,65528,4,66045,66045,5,66422,66426,5,68101,68102,5,68152,68154,5,68325,68326,5,69291,69292,5,69632,69632,7,69634,69634,7,69759,69761,5]');\n}\n//#endregion\n/**\n * Computes the offset after performing a left delete on the given string,\n * while considering unicode grapheme/emoji rules.\n*/\nexport function getLeftDeleteOffset(offset, str) {\n    if (offset === 0) {\n        return 0;\n    }\n    // Try to delete emoji part.\n    const emojiOffset = getOffsetBeforeLastEmojiComponent(offset, str);\n    if (emojiOffset !== undefined) {\n        return emojiOffset;\n    }\n    // Otherwise, just skip a single code point.\n    const codePoint = getPrevCodePoint(str, offset);\n    offset -= getUTF16Length(codePoint);\n    return offset;\n}\nfunction getOffsetBeforeLastEmojiComponent(offset, str) {\n    // See https://www.unicode.org/reports/tr51/tr51-14.html#EBNF_and_Regex for the\n    // structure of emojis.\n    let codePoint = getPrevCodePoint(str, offset);\n    offset -= getUTF16Length(codePoint);\n    // Skip modifiers\n    while ((isEmojiModifier(codePoint) || codePoint === 65039 /* emojiVariantSelector */ || codePoint === 8419 /* enclosingKeyCap */)) {\n        if (offset === 0) {\n            // Cannot skip modifier, no preceding emoji base.\n            return undefined;\n        }\n        codePoint = getPrevCodePoint(str, offset);\n        offset -= getUTF16Length(codePoint);\n    }\n    // Expect base emoji\n    if (!isEmojiImprecise(codePoint)) {\n        // Unexpected code point, not a valid emoji.\n        return undefined;\n    }\n    if (offset >= 0) {\n        // Skip optional ZWJ code points that combine multiple emojis.\n        // In theory, we should check if that ZWJ actually combines multiple emojis\n        // to prevent deleting ZWJs in situations we didn't account for.\n        const optionalZwjCodePoint = getPrevCodePoint(str, offset);\n        if (optionalZwjCodePoint === 8205 /* zwj */) {\n            offset -= getUTF16Length(optionalZwjCodePoint);\n        }\n    }\n    return offset;\n}\nfunction getUTF16Length(codePoint) {\n    return codePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1;\n}\nfunction isEmojiModifier(codePoint) {\n    return 0x1F3FB <= codePoint && codePoint <= 0x1F3FF;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { transformErrorForSerialization } from '../errors.js';\nimport { Emitter } from '../event.js';\nimport { Disposable } from '../lifecycle.js';\nimport { globals, isWeb } from '../platform.js';\nimport * as types from '../types.js';\nimport * as strings from '../strings.js';\nconst INITIALIZE = '$initialize';\nlet webWorkerWarningLogged = false;\nexport function logOnceWebWorkerWarning(err) {\n    if (!isWeb) {\n        // running tests\n        return;\n    }\n    if (!webWorkerWarningLogged) {\n        webWorkerWarningLogged = true;\n        console.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/microsoft/monaco-editor#faq');\n    }\n    console.warn(err.message);\n}\nclass RequestMessage {\n    constructor(vsWorker, req, method, args) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.method = method;\n        this.args = args;\n        this.type = 0 /* Request */;\n    }\n}\nclass ReplyMessage {\n    constructor(vsWorker, seq, res, err) {\n        this.vsWorker = vsWorker;\n        this.seq = seq;\n        this.res = res;\n        this.err = err;\n        this.type = 1 /* Reply */;\n    }\n}\nclass SubscribeEventMessage {\n    constructor(vsWorker, req, eventName, arg) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.eventName = eventName;\n        this.arg = arg;\n        this.type = 2 /* SubscribeEvent */;\n    }\n}\nclass EventMessage {\n    constructor(vsWorker, req, event) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.event = event;\n        this.type = 3 /* Event */;\n    }\n}\nclass UnsubscribeEventMessage {\n    constructor(vsWorker, req) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.type = 4 /* UnsubscribeEvent */;\n    }\n}\nclass SimpleWorkerProtocol {\n    constructor(handler) {\n        this._workerId = -1;\n        this._handler = handler;\n        this._lastSentReq = 0;\n        this._pendingReplies = Object.create(null);\n        this._pendingEmitters = new Map();\n        this._pendingEvents = new Map();\n    }\n    setWorkerId(workerId) {\n        this._workerId = workerId;\n    }\n    sendMessage(method, args) {\n        const req = String(++this._lastSentReq);\n        return new Promise((resolve, reject) => {\n            this._pendingReplies[req] = {\n                resolve: resolve,\n                reject: reject\n            };\n            this._send(new RequestMessage(this._workerId, req, method, args));\n        });\n    }\n    listen(eventName, arg) {\n        let req = null;\n        const emitter = new Emitter({\n            onFirstListenerAdd: () => {\n                req = String(++this._lastSentReq);\n                this._pendingEmitters.set(req, emitter);\n                this._send(new SubscribeEventMessage(this._workerId, req, eventName, arg));\n            },\n            onLastListenerRemove: () => {\n                this._pendingEmitters.delete(req);\n                this._send(new UnsubscribeEventMessage(this._workerId, req));\n                req = null;\n            }\n        });\n        return emitter.event;\n    }\n    handleMessage(message) {\n        if (!message || !message.vsWorker) {\n            return;\n        }\n        if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n            return;\n        }\n        this._handleMessage(message);\n    }\n    _handleMessage(msg) {\n        switch (msg.type) {\n            case 1 /* Reply */:\n                return this._handleReplyMessage(msg);\n            case 0 /* Request */:\n                return this._handleRequestMessage(msg);\n            case 2 /* SubscribeEvent */:\n                return this._handleSubscribeEventMessage(msg);\n            case 3 /* Event */:\n                return this._handleEventMessage(msg);\n            case 4 /* UnsubscribeEvent */:\n                return this._handleUnsubscribeEventMessage(msg);\n        }\n    }\n    _handleReplyMessage(replyMessage) {\n        if (!this._pendingReplies[replyMessage.seq]) {\n            console.warn('Got reply to unknown seq');\n            return;\n        }\n        let reply = this._pendingReplies[replyMessage.seq];\n        delete this._pendingReplies[replyMessage.seq];\n        if (replyMessage.err) {\n            let err = replyMessage.err;\n            if (replyMessage.err.$isError) {\n                err = new Error();\n                err.name = replyMessage.err.name;\n                err.message = replyMessage.err.message;\n                err.stack = replyMessage.err.stack;\n            }\n            reply.reject(err);\n            return;\n        }\n        reply.resolve(replyMessage.res);\n    }\n    _handleRequestMessage(requestMessage) {\n        let req = requestMessage.req;\n        let result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\n        result.then((r) => {\n            this._send(new ReplyMessage(this._workerId, req, r, undefined));\n        }, (e) => {\n            if (e.detail instanceof Error) {\n                // Loading errors have a detail property that points to the actual error\n                e.detail = transformErrorForSerialization(e.detail);\n            }\n            this._send(new ReplyMessage(this._workerId, req, undefined, transformErrorForSerialization(e)));\n        });\n    }\n    _handleSubscribeEventMessage(msg) {\n        const req = msg.req;\n        const disposable = this._handler.handleEvent(msg.eventName, msg.arg)((event) => {\n            this._send(new EventMessage(this._workerId, req, event));\n        });\n        this._pendingEvents.set(req, disposable);\n    }\n    _handleEventMessage(msg) {\n        if (!this._pendingEmitters.has(msg.req)) {\n            console.warn('Got event for unknown req');\n            return;\n        }\n        this._pendingEmitters.get(msg.req).fire(msg.event);\n    }\n    _handleUnsubscribeEventMessage(msg) {\n        if (!this._pendingEvents.has(msg.req)) {\n            console.warn('Got unsubscribe for unknown req');\n            return;\n        }\n        this._pendingEvents.get(msg.req).dispose();\n        this._pendingEvents.delete(msg.req);\n    }\n    _send(msg) {\n        let transfer = [];\n        if (msg.type === 0 /* Request */) {\n            for (let i = 0; i < msg.args.length; i++) {\n                if (msg.args[i] instanceof ArrayBuffer) {\n                    transfer.push(msg.args[i]);\n                }\n            }\n        }\n        else if (msg.type === 1 /* Reply */) {\n            if (msg.res instanceof ArrayBuffer) {\n                transfer.push(msg.res);\n            }\n        }\n        this._handler.sendMessage(msg, transfer);\n    }\n}\n/**\n * Main thread side\n */\nexport class SimpleWorkerClient extends Disposable {\n    constructor(workerFactory, moduleId, host) {\n        super();\n        let lazyProxyReject = null;\n        this._worker = this._register(workerFactory.create('vs/base/common/worker/simpleWorker', (msg) => {\n            this._protocol.handleMessage(msg);\n        }, (err) => {\n            // in Firefox, web workers fail lazily :(\n            // we will reject the proxy\n            if (lazyProxyReject) {\n                lazyProxyReject(err);\n            }\n        }));\n        this._protocol = new SimpleWorkerProtocol({\n            sendMessage: (msg, transfer) => {\n                this._worker.postMessage(msg, transfer);\n            },\n            handleMessage: (method, args) => {\n                if (typeof host[method] !== 'function') {\n                    return Promise.reject(new Error('Missing method ' + method + ' on main thread host.'));\n                }\n                try {\n                    return Promise.resolve(host[method].apply(host, args));\n                }\n                catch (e) {\n                    return Promise.reject(e);\n                }\n            },\n            handleEvent: (eventName, arg) => {\n                if (propertyIsDynamicEvent(eventName)) {\n                    const event = host[eventName].call(host, arg);\n                    if (typeof event !== 'function') {\n                        throw new Error(`Missing dynamic event ${eventName} on main thread host.`);\n                    }\n                    return event;\n                }\n                if (propertyIsEvent(eventName)) {\n                    const event = host[eventName];\n                    if (typeof event !== 'function') {\n                        throw new Error(`Missing event ${eventName} on main thread host.`);\n                    }\n                    return event;\n                }\n                throw new Error(`Malformed event name ${eventName}`);\n            }\n        });\n        this._protocol.setWorkerId(this._worker.getId());\n        // Gather loader configuration\n        let loaderConfiguration = null;\n        if (typeof globals.require !== 'undefined' && typeof globals.require.getConfig === 'function') {\n            // Get the configuration from the Monaco AMD Loader\n            loaderConfiguration = globals.require.getConfig();\n        }\n        else if (typeof globals.requirejs !== 'undefined') {\n            // Get the configuration from requirejs\n            loaderConfiguration = globals.requirejs.s.contexts._.config;\n        }\n        const hostMethods = types.getAllMethodNames(host);\n        // Send initialize message\n        this._onModuleLoaded = this._protocol.sendMessage(INITIALIZE, [\n            this._worker.getId(),\n            JSON.parse(JSON.stringify(loaderConfiguration)),\n            moduleId,\n            hostMethods,\n        ]);\n        // Create proxy to loaded code\n        const proxyMethodRequest = (method, args) => {\n            return this._request(method, args);\n        };\n        const proxyListen = (eventName, arg) => {\n            return this._protocol.listen(eventName, arg);\n        };\n        this._lazyProxy = new Promise((resolve, reject) => {\n            lazyProxyReject = reject;\n            this._onModuleLoaded.then((availableMethods) => {\n                resolve(createProxyObject(availableMethods, proxyMethodRequest, proxyListen));\n            }, (e) => {\n                reject(e);\n                this._onError('Worker failed to load ' + moduleId, e);\n            });\n        });\n    }\n    getProxyObject() {\n        return this._lazyProxy;\n    }\n    _request(method, args) {\n        return new Promise((resolve, reject) => {\n            this._onModuleLoaded.then(() => {\n                this._protocol.sendMessage(method, args).then(resolve, reject);\n            }, reject);\n        });\n    }\n    _onError(message, error) {\n        console.error(message);\n        console.info(error);\n    }\n}\nfunction propertyIsEvent(name) {\n    // Assume a property is an event if it has a form of \"onSomething\"\n    return name[0] === 'o' && name[1] === 'n' && strings.isUpperAsciiLetter(name.charCodeAt(2));\n}\nfunction propertyIsDynamicEvent(name) {\n    // Assume a property is a dynamic event (a method that returns an event) if it has a form of \"onDynamicSomething\"\n    return /^onDynamic/.test(name) && strings.isUpperAsciiLetter(name.charCodeAt(9));\n}\nfunction createProxyObject(methodNames, invoke, proxyListen) {\n    const createProxyMethod = (method) => {\n        return function () {\n            const args = Array.prototype.slice.call(arguments, 0);\n            return invoke(method, args);\n        };\n    };\n    const createProxyDynamicEvent = (eventName) => {\n        return function (arg) {\n            return proxyListen(eventName, arg);\n        };\n    };\n    let result = {};\n    for (const methodName of methodNames) {\n        if (propertyIsDynamicEvent(methodName)) {\n            result[methodName] = createProxyDynamicEvent(methodName);\n            continue;\n        }\n        if (propertyIsEvent(methodName)) {\n            result[methodName] = proxyListen(methodName, undefined);\n            continue;\n        }\n        result[methodName] = createProxyMethod(methodName);\n    }\n    return result;\n}\n/**\n * Worker side\n */\nexport class SimpleWorkerServer {\n    constructor(postMessage, requestHandlerFactory) {\n        this._requestHandlerFactory = requestHandlerFactory;\n        this._requestHandler = null;\n        this._protocol = new SimpleWorkerProtocol({\n            sendMessage: (msg, transfer) => {\n                postMessage(msg, transfer);\n            },\n            handleMessage: (method, args) => this._handleMessage(method, args),\n            handleEvent: (eventName, arg) => this._handleEvent(eventName, arg)\n        });\n    }\n    onmessage(msg) {\n        this._protocol.handleMessage(msg);\n    }\n    _handleMessage(method, args) {\n        if (method === INITIALIZE) {\n            return this.initialize(args[0], args[1], args[2], args[3]);\n        }\n        if (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return Promise.resolve(this._requestHandler[method].apply(this._requestHandler, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n    _handleEvent(eventName, arg) {\n        if (!this._requestHandler) {\n            throw new Error(`Missing requestHandler`);\n        }\n        if (propertyIsDynamicEvent(eventName)) {\n            const event = this._requestHandler[eventName].call(this._requestHandler, arg);\n            if (typeof event !== 'function') {\n                throw new Error(`Missing dynamic event ${eventName} on request handler.`);\n            }\n            return event;\n        }\n        if (propertyIsEvent(eventName)) {\n            const event = this._requestHandler[eventName];\n            if (typeof event !== 'function') {\n                throw new Error(`Missing event ${eventName} on request handler.`);\n            }\n            return event;\n        }\n        throw new Error(`Malformed event name ${eventName}`);\n    }\n    initialize(workerId, loaderConfig, moduleId, hostMethods) {\n        this._protocol.setWorkerId(workerId);\n        const proxyMethodRequest = (method, args) => {\n            return this._protocol.sendMessage(method, args);\n        };\n        const proxyListen = (eventName, arg) => {\n            return this._protocol.listen(eventName, arg);\n        };\n        const hostProxy = createProxyObject(hostMethods, proxyMethodRequest, proxyListen);\n        if (this._requestHandlerFactory) {\n            // static request handler\n            this._requestHandler = this._requestHandlerFactory(hostProxy);\n            return Promise.resolve(types.getAllMethodNames(this._requestHandler));\n        }\n        if (loaderConfig) {\n            // Remove 'baseUrl', handling it is beyond scope for now\n            if (typeof loaderConfig.baseUrl !== 'undefined') {\n                delete loaderConfig['baseUrl'];\n            }\n            if (typeof loaderConfig.paths !== 'undefined') {\n                if (typeof loaderConfig.paths.vs !== 'undefined') {\n                    delete loaderConfig.paths['vs'];\n                }\n            }\n            if (typeof loaderConfig.trustedTypesPolicy !== undefined) {\n                // don't use, it has been destroyed during serialize\n                delete loaderConfig['trustedTypesPolicy'];\n            }\n            // Since this is in a web worker, enable catching errors\n            loaderConfig.catchError = true;\n            globals.require.config(loaderConfig);\n        }\n        return new Promise((resolve, reject) => {\n            // Use the global require to be sure to get the global config\n            // ESM-comment-begin\n            // \t\t\tconst req = (globals.require || require);\n            // ESM-comment-end\n            // ESM-uncomment-begin\n            const req = globals.require;\n            // ESM-uncomment-end\n            req([moduleId], (module) => {\n                this._requestHandler = module.create(hostProxy);\n                if (!this._requestHandler) {\n                    reject(new Error(`No RequestHandler!`));\n                    return;\n                }\n                resolve(types.getAllMethodNames(this._requestHandler));\n            }, reject);\n        });\n    }\n}\n/**\n * Called on the worker side\n */\nexport function create(postMessage) {\n    return new SimpleWorkerServer(postMessage, null);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Represents information about a specific difference between two sequences.\n */\nexport class DiffChange {\n    /**\n     * Constructs a new DiffChange with the given sequence information\n     * and content.\n     */\n    constructor(originalStart, originalLength, modifiedStart, modifiedLength) {\n        //Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\n        this.originalStart = originalStart;\n        this.originalLength = originalLength;\n        this.modifiedStart = modifiedStart;\n        this.modifiedLength = modifiedLength;\n    }\n    /**\n     * The end point (exclusive) of the change in the original sequence.\n     */\n    getOriginalEnd() {\n        return this.originalStart + this.originalLength;\n    }\n    /**\n     * The end point (exclusive) of the change in the modified sequence.\n     */\n    getModifiedEnd() {\n        return this.modifiedStart + this.modifiedLength;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\n/**\n * Return a hash value for an object.\n */\nexport function hash(obj) {\n    return doHash(obj, 0);\n}\nexport function doHash(obj, hashVal) {\n    switch (typeof obj) {\n        case 'object':\n            if (obj === null) {\n                return numberHash(349, hashVal);\n            }\n            else if (Array.isArray(obj)) {\n                return arrayHash(obj, hashVal);\n            }\n            return objectHash(obj, hashVal);\n        case 'string':\n            return stringHash(obj, hashVal);\n        case 'boolean':\n            return booleanHash(obj, hashVal);\n        case 'number':\n            return numberHash(obj, hashVal);\n        case 'undefined':\n            return numberHash(937, hashVal);\n        default:\n            return numberHash(617, hashVal);\n    }\n}\nexport function numberHash(val, initialHashVal) {\n    return (((initialHashVal << 5) - initialHashVal) + val) | 0; // hashVal * 31 + ch, keep as int32\n}\nfunction booleanHash(b, initialHashVal) {\n    return numberHash(b ? 433 : 863, initialHashVal);\n}\nexport function stringHash(s, hashVal) {\n    hashVal = numberHash(149417, hashVal);\n    for (let i = 0, length = s.length; i < length; i++) {\n        hashVal = numberHash(s.charCodeAt(i), hashVal);\n    }\n    return hashVal;\n}\nfunction arrayHash(arr, initialHashVal) {\n    initialHashVal = numberHash(104579, initialHashVal);\n    return arr.reduce((hashVal, item) => doHash(item, hashVal), initialHashVal);\n}\nfunction objectHash(obj, initialHashVal) {\n    initialHashVal = numberHash(181387, initialHashVal);\n    return Object.keys(obj).sort().reduce((hashVal, key) => {\n        hashVal = stringHash(key, hashVal);\n        return doHash(obj[key], hashVal);\n    }, initialHashVal);\n}\nfunction leftRotate(value, bits, totalBits = 32) {\n    // delta + bits = totalBits\n    const delta = totalBits - bits;\n    // All ones, expect `delta` zeros aligned to the right\n    const mask = ~((1 << delta) - 1);\n    // Join (value left-shifted `bits` bits) with (masked value right-shifted `delta` bits)\n    return ((value << bits) | ((mask & value) >>> delta)) >>> 0;\n}\nfunction fill(dest, index = 0, count = dest.byteLength, value = 0) {\n    for (let i = 0; i < count; i++) {\n        dest[index + i] = value;\n    }\n}\nfunction leftPad(value, length, char = '0') {\n    while (value.length < length) {\n        value = char + value;\n    }\n    return value;\n}\nexport function toHexString(bufferOrValue, bitsize = 32) {\n    if (bufferOrValue instanceof ArrayBuffer) {\n        return Array.from(new Uint8Array(bufferOrValue)).map(b => b.toString(16).padStart(2, '0')).join('');\n    }\n    return leftPad((bufferOrValue >>> 0).toString(16), bitsize / 4);\n}\n/**\n * A SHA1 implementation that works with strings and does not allocate.\n */\nexport class StringSHA1 {\n    constructor() {\n        this._h0 = 0x67452301;\n        this._h1 = 0xEFCDAB89;\n        this._h2 = 0x98BADCFE;\n        this._h3 = 0x10325476;\n        this._h4 = 0xC3D2E1F0;\n        this._buff = new Uint8Array(64 /* BLOCK_SIZE */ + 3 /* to fit any utf-8 */);\n        this._buffDV = new DataView(this._buff.buffer);\n        this._buffLen = 0;\n        this._totalLen = 0;\n        this._leftoverHighSurrogate = 0;\n        this._finished = false;\n    }\n    update(str) {\n        const strLen = str.length;\n        if (strLen === 0) {\n            return;\n        }\n        const buff = this._buff;\n        let buffLen = this._buffLen;\n        let leftoverHighSurrogate = this._leftoverHighSurrogate;\n        let charCode;\n        let offset;\n        if (leftoverHighSurrogate !== 0) {\n            charCode = leftoverHighSurrogate;\n            offset = -1;\n            leftoverHighSurrogate = 0;\n        }\n        else {\n            charCode = str.charCodeAt(0);\n            offset = 0;\n        }\n        while (true) {\n            let codePoint = charCode;\n            if (strings.isHighSurrogate(charCode)) {\n                if (offset + 1 < strLen) {\n                    const nextCharCode = str.charCodeAt(offset + 1);\n                    if (strings.isLowSurrogate(nextCharCode)) {\n                        offset++;\n                        codePoint = strings.computeCodePoint(charCode, nextCharCode);\n                    }\n                    else {\n                        // illegal => unicode replacement character\n                        codePoint = 65533 /* UNICODE_REPLACEMENT */;\n                    }\n                }\n                else {\n                    // last character is a surrogate pair\n                    leftoverHighSurrogate = charCode;\n                    break;\n                }\n            }\n            else if (strings.isLowSurrogate(charCode)) {\n                // illegal => unicode replacement character\n                codePoint = 65533 /* UNICODE_REPLACEMENT */;\n            }\n            buffLen = this._push(buff, buffLen, codePoint);\n            offset++;\n            if (offset < strLen) {\n                charCode = str.charCodeAt(offset);\n            }\n            else {\n                break;\n            }\n        }\n        this._buffLen = buffLen;\n        this._leftoverHighSurrogate = leftoverHighSurrogate;\n    }\n    _push(buff, buffLen, codePoint) {\n        if (codePoint < 0x0080) {\n            buff[buffLen++] = codePoint;\n        }\n        else if (codePoint < 0x0800) {\n            buff[buffLen++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        else if (codePoint < 0x10000) {\n            buff[buffLen++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        else {\n            buff[buffLen++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        if (buffLen >= 64 /* BLOCK_SIZE */) {\n            this._step();\n            buffLen -= 64 /* BLOCK_SIZE */;\n            this._totalLen += 64 /* BLOCK_SIZE */;\n            // take last 3 in case of UTF8 overflow\n            buff[0] = buff[64 /* BLOCK_SIZE */ + 0];\n            buff[1] = buff[64 /* BLOCK_SIZE */ + 1];\n            buff[2] = buff[64 /* BLOCK_SIZE */ + 2];\n        }\n        return buffLen;\n    }\n    digest() {\n        if (!this._finished) {\n            this._finished = true;\n            if (this._leftoverHighSurrogate) {\n                // illegal => unicode replacement character\n                this._leftoverHighSurrogate = 0;\n                this._buffLen = this._push(this._buff, this._buffLen, 65533 /* UNICODE_REPLACEMENT */);\n            }\n            this._totalLen += this._buffLen;\n            this._wrapUp();\n        }\n        return toHexString(this._h0) + toHexString(this._h1) + toHexString(this._h2) + toHexString(this._h3) + toHexString(this._h4);\n    }\n    _wrapUp() {\n        this._buff[this._buffLen++] = 0x80;\n        fill(this._buff, this._buffLen);\n        if (this._buffLen > 56) {\n            this._step();\n            fill(this._buff);\n        }\n        // this will fit because the mantissa can cover up to 52 bits\n        const ml = 8 * this._totalLen;\n        this._buffDV.setUint32(56, Math.floor(ml / 4294967296), false);\n        this._buffDV.setUint32(60, ml % 4294967296, false);\n        this._step();\n    }\n    _step() {\n        const bigBlock32 = StringSHA1._bigBlock32;\n        const data = this._buffDV;\n        for (let j = 0; j < 64 /* 16*4 */; j += 4) {\n            bigBlock32.setUint32(j, data.getUint32(j, false), false);\n        }\n        for (let j = 64; j < 320 /* 80*4 */; j += 4) {\n            bigBlock32.setUint32(j, leftRotate((bigBlock32.getUint32(j - 12, false) ^ bigBlock32.getUint32(j - 32, false) ^ bigBlock32.getUint32(j - 56, false) ^ bigBlock32.getUint32(j - 64, false)), 1), false);\n        }\n        let a = this._h0;\n        let b = this._h1;\n        let c = this._h2;\n        let d = this._h3;\n        let e = this._h4;\n        let f, k;\n        let temp;\n        for (let j = 0; j < 80; j++) {\n            if (j < 20) {\n                f = (b & c) | ((~b) & d);\n                k = 0x5A827999;\n            }\n            else if (j < 40) {\n                f = b ^ c ^ d;\n                k = 0x6ED9EBA1;\n            }\n            else if (j < 60) {\n                f = (b & c) | (b & d) | (c & d);\n                k = 0x8F1BBCDC;\n            }\n            else {\n                f = b ^ c ^ d;\n                k = 0xCA62C1D6;\n            }\n            temp = (leftRotate(a, 5) + f + e + k + bigBlock32.getUint32(j * 4, false)) & 0xffffffff;\n            e = d;\n            d = c;\n            c = leftRotate(b, 30);\n            b = a;\n            a = temp;\n        }\n        this._h0 = (this._h0 + a) & 0xffffffff;\n        this._h1 = (this._h1 + b) & 0xffffffff;\n        this._h2 = (this._h2 + c) & 0xffffffff;\n        this._h3 = (this._h3 + d) & 0xffffffff;\n        this._h4 = (this._h4 + e) & 0xffffffff;\n    }\n}\nStringSHA1._bigBlock32 = new DataView(new ArrayBuffer(320)); // 80 * 4 = 320\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { DiffChange } from './diffChange.js';\nimport { stringHash } from '../hash.js';\nexport class StringDiffSequence {\n    constructor(source) {\n        this.source = source;\n    }\n    getElements() {\n        const source = this.source;\n        const characters = new Int32Array(source.length);\n        for (let i = 0, len = source.length; i < len; i++) {\n            characters[i] = source.charCodeAt(i);\n        }\n        return characters;\n    }\n}\nexport function stringDiff(original, modified, pretty) {\n    return new LcsDiff(new StringDiffSequence(original), new StringDiffSequence(modified)).ComputeDiff(pretty).changes;\n}\n//\n// The code below has been ported from a C# implementation in VS\n//\nexport class Debug {\n    static Assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n}\nexport class MyArray {\n    /**\n     * Copies a range of elements from an Array starting at the specified source index and pastes\n     * them to another Array starting at the specified destination index. The length and the indexes\n     * are specified as 64-bit integers.\n     * sourceArray:\n     *\t\tThe Array that contains the data to copy.\n     * sourceIndex:\n     *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\n     * destinationArray:\n     *\t\tThe Array that receives the data.\n     * destinationIndex:\n     *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\n     * length:\n     *\t\tA 64-bit integer that represents the number of elements to copy.\n     */\n    static Copy(sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (let i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    }\n    static Copy2(sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (let i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    }\n}\n/**\n * A utility class which helps to create the set of DiffChanges from\n * a difference operation. This class accepts original DiffElements and\n * modified DiffElements that are involved in a particular change. The\n * MarkNextChange() method can be called to mark the separation between\n * distinct changes. At the end, the Changes property can be called to retrieve\n * the constructed changes.\n */\nclass DiffChangeHelper {\n    /**\n     * Constructs a new DiffChangeHelper for the given DiffSequences.\n     */\n    constructor() {\n        this.m_changes = [];\n        this.m_originalStart = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\n        this.m_modifiedStart = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n    }\n    /**\n     * Marks the beginning of the next change in the set of differences.\n     */\n    MarkNextChange() {\n        // Only add to the list if there is something to add\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Add the new change to our list\n            this.m_changes.push(new DiffChange(this.m_originalStart, this.m_originalCount, this.m_modifiedStart, this.m_modifiedCount));\n        }\n        // Reset for the next change\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n        this.m_originalStart = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\n        this.m_modifiedStart = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\n    }\n    /**\n     * Adds the original element at the given position to the elements\n     * affected by the current change. The modified index gives context\n     * to the change position with respect to the original sequence.\n     * @param originalIndex The index of the original element to add.\n     * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\n     */\n    AddOriginalElement(originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_originalCount++;\n    }\n    /**\n     * Adds the modified element at the given position to the elements\n     * affected by the current change. The original index gives context\n     * to the change position with respect to the modified sequence.\n     * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\n     * @param modifiedIndex The index of the modified element to add.\n     */\n    AddModifiedElement(originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_modifiedCount++;\n    }\n    /**\n     * Retrieves all of the changes marked by the class.\n     */\n    getChanges() {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        return this.m_changes;\n    }\n    /**\n     * Retrieves all of the changes marked by the class in the reverse order\n     */\n    getReverseChanges() {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        this.m_changes.reverse();\n        return this.m_changes;\n    }\n}\n/**\n * An implementation of the difference algorithm described in\n * \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n */\nexport class LcsDiff {\n    /**\n     * Constructs the DiffFinder\n     */\n    constructor(originalSequence, modifiedSequence, continueProcessingPredicate = null) {\n        this.ContinueProcessingPredicate = continueProcessingPredicate;\n        this._originalSequence = originalSequence;\n        this._modifiedSequence = modifiedSequence;\n        const [originalStringElements, originalElementsOrHash, originalHasStrings] = LcsDiff._getElements(originalSequence);\n        const [modifiedStringElements, modifiedElementsOrHash, modifiedHasStrings] = LcsDiff._getElements(modifiedSequence);\n        this._hasStrings = (originalHasStrings && modifiedHasStrings);\n        this._originalStringElements = originalStringElements;\n        this._originalElementsOrHash = originalElementsOrHash;\n        this._modifiedStringElements = modifiedStringElements;\n        this._modifiedElementsOrHash = modifiedElementsOrHash;\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n    }\n    static _isStringArray(arr) {\n        return (arr.length > 0 && typeof arr[0] === 'string');\n    }\n    static _getElements(sequence) {\n        const elements = sequence.getElements();\n        if (LcsDiff._isStringArray(elements)) {\n            const hashes = new Int32Array(elements.length);\n            for (let i = 0, len = elements.length; i < len; i++) {\n                hashes[i] = stringHash(elements[i], 0);\n            }\n            return [elements, hashes, true];\n        }\n        if (elements instanceof Int32Array) {\n            return [[], elements, false];\n        }\n        return [[], new Int32Array(elements), false];\n    }\n    ElementsAreEqual(originalIndex, newIndex) {\n        if (this._originalElementsOrHash[originalIndex] !== this._modifiedElementsOrHash[newIndex]) {\n            return false;\n        }\n        return (this._hasStrings ? this._originalStringElements[originalIndex] === this._modifiedStringElements[newIndex] : true);\n    }\n    ElementsAreStrictEqual(originalIndex, newIndex) {\n        if (!this.ElementsAreEqual(originalIndex, newIndex)) {\n            return false;\n        }\n        const originalElement = LcsDiff._getStrictElement(this._originalSequence, originalIndex);\n        const modifiedElement = LcsDiff._getStrictElement(this._modifiedSequence, newIndex);\n        return (originalElement === modifiedElement);\n    }\n    static _getStrictElement(sequence, index) {\n        if (typeof sequence.getStrictElement === 'function') {\n            return sequence.getStrictElement(index);\n        }\n        return null;\n    }\n    OriginalElementsAreEqual(index1, index2) {\n        if (this._originalElementsOrHash[index1] !== this._originalElementsOrHash[index2]) {\n            return false;\n        }\n        return (this._hasStrings ? this._originalStringElements[index1] === this._originalStringElements[index2] : true);\n    }\n    ModifiedElementsAreEqual(index1, index2) {\n        if (this._modifiedElementsOrHash[index1] !== this._modifiedElementsOrHash[index2]) {\n            return false;\n        }\n        return (this._hasStrings ? this._modifiedStringElements[index1] === this._modifiedStringElements[index2] : true);\n    }\n    ComputeDiff(pretty) {\n        return this._ComputeDiff(0, this._originalElementsOrHash.length - 1, 0, this._modifiedElementsOrHash.length - 1, pretty);\n    }\n    /**\n     * Computes the differences between the original and modified input\n     * sequences on the bounded range.\n     * @returns An array of the differences between the two input sequences.\n     */\n    _ComputeDiff(originalStart, originalEnd, modifiedStart, modifiedEnd, pretty) {\n        const quitEarlyArr = [false];\n        let changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n        if (pretty) {\n            // We have to clean up the computed diff to be more intuitive\n            // but it turns out this cannot be done correctly until the entire set\n            // of diffs have been computed\n            changes = this.PrettifyChanges(changes);\n        }\n        return {\n            quitEarly: quitEarlyArr[0],\n            changes: changes\n        };\n    }\n    /**\n     * Private helper method which computes the differences on the bounded range\n     * recursively.\n     * @returns An array of the differences between the two input sequences.\n     */\n    ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr) {\n        quitEarlyArr[0] = false;\n        // Find the start of the differences\n        while (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n            originalStart++;\n            modifiedStart++;\n        }\n        // Find the end of the differences\n        while (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n            originalEnd--;\n            modifiedEnd--;\n        }\n        // In the special case where we either have all insertions or all deletions or the sequences are identical\n        if (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n            let changes;\n            if (modifiedStart <= modifiedEnd) {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                // All insertions\n                changes = [\n                    new DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)\n                ];\n            }\n            else if (originalStart <= originalEnd) {\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // All deletions\n                changes = [\n                    new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0)\n                ];\n            }\n            else {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // Identical sequences - No differences\n                changes = [];\n            }\n            return changes;\n        }\n        // This problem can be solved using the Divide-And-Conquer technique.\n        const midOriginalArr = [0];\n        const midModifiedArr = [0];\n        const result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n        const midOriginal = midOriginalArr[0];\n        const midModified = midModifiedArr[0];\n        if (result !== null) {\n            // Result is not-null when there was enough memory to compute the changes while\n            // searching for the recursion point\n            return result;\n        }\n        else if (!quitEarlyArr[0]) {\n            // We can break the problem down recursively by finding the changes in the\n            // First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\n            // Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\n            // NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\n            const leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n            let rightChanges = [];\n            if (!quitEarlyArr[0]) {\n                rightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n            }\n            else {\n                // We didn't have time to finish the first half, so we don't have time to compute this half.\n                // Consider the entire rest of the sequence different.\n                rightChanges = [\n                    new DiffChange(midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)\n                ];\n            }\n            return this.ConcatenateChanges(leftChanges, rightChanges);\n        }\n        // If we hit here, we quit early, and so can't return anything meaningful\n        return [\n            new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n        ];\n    }\n    WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr) {\n        let forwardChanges = null;\n        let reverseChanges = null;\n        // First, walk backward through the forward diagonals history\n        let changeHelper = new DiffChangeHelper();\n        let diagonalMin = diagonalForwardStart;\n        let diagonalMax = diagonalForwardEnd;\n        let diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\n        let lastOriginalIndex = -1073741824 /* MIN_SAFE_SMALL_INTEGER */;\n        let historyIndex = this.m_forwardHistory.length - 1;\n        do {\n            // Get the diagonal index from the relative diagonal number\n            const diagonal = diagonalRelative + diagonalForwardBase;\n            // Figure out where we came from\n            if (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                // Vertical line (the element is an insert)\n                originalIndex = forwardPoints[diagonal + 1];\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex;\n                changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n                diagonalRelative = (diagonal + 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            else {\n                // Horizontal line (the element is a deletion)\n                originalIndex = forwardPoints[diagonal - 1] + 1;\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex - 1;\n                changeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n                diagonalRelative = (diagonal - 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            if (historyIndex >= 0) {\n                forwardPoints = this.m_forwardHistory[historyIndex];\n                diagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\n                diagonalMin = 1;\n                diagonalMax = forwardPoints.length - 1;\n            }\n        } while (--historyIndex >= -1);\n        // Ironically, we get the forward changes as the reverse of the\n        // order we added them since we technically added them backwards\n        forwardChanges = changeHelper.getReverseChanges();\n        if (quitEarlyArr[0]) {\n            // TODO: Calculate a partial from the reverse diagonals.\n            //       For now, just assume everything after the midOriginal/midModified point is a diff\n            let originalStartPoint = midOriginalArr[0] + 1;\n            let modifiedStartPoint = midModifiedArr[0] + 1;\n            if (forwardChanges !== null && forwardChanges.length > 0) {\n                const lastForwardChange = forwardChanges[forwardChanges.length - 1];\n                originalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n                modifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n            }\n            reverseChanges = [\n                new DiffChange(originalStartPoint, originalEnd - originalStartPoint + 1, modifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)\n            ];\n        }\n        else {\n            // Now walk backward through the reverse diagonals history\n            changeHelper = new DiffChangeHelper();\n            diagonalMin = diagonalReverseStart;\n            diagonalMax = diagonalReverseEnd;\n            diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\n            lastOriginalIndex = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\n            historyIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n            do {\n                // Get the diagonal index from the relative diagonal number\n                const diagonal = diagonalRelative + diagonalReverseBase;\n                // Figure out where we came from\n                if (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    // Horizontal line (the element is a deletion))\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex + 1;\n                    changeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal + 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                else {\n                    // Vertical line (the element is an insertion)\n                    originalIndex = reversePoints[diagonal - 1];\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex;\n                    changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal - 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                if (historyIndex >= 0) {\n                    reversePoints = this.m_reverseHistory[historyIndex];\n                    diagonalReverseBase = reversePoints[0]; //We stored this in the first spot\n                    diagonalMin = 1;\n                    diagonalMax = reversePoints.length - 1;\n                }\n            } while (--historyIndex >= -1);\n            // There are cases where the reverse history will find diffs that\n            // are correct, but not intuitive, so we need shift them.\n            reverseChanges = changeHelper.getChanges();\n        }\n        return this.ConcatenateChanges(forwardChanges, reverseChanges);\n    }\n    /**\n     * Given the range to compute the diff on, this method finds the point:\n     * (midOriginal, midModified)\n     * that exists in the middle of the LCS of the two sequences and\n     * is the point at which the LCS problem may be broken down recursively.\n     * This method will try to keep the LCS trace in memory. If the LCS recursion\n     * point is calculated and the full trace is available in memory, then this method\n     * will return the change list.\n     * @param originalStart The start bound of the original sequence range\n     * @param originalEnd The end bound of the original sequence range\n     * @param modifiedStart The start bound of the modified sequence range\n     * @param modifiedEnd The end bound of the modified sequence range\n     * @param midOriginal The middle point of the original sequence range\n     * @param midModified The middle point of the modified sequence range\n     * @returns The diff changes, if available, otherwise null\n     */\n    ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr) {\n        let originalIndex = 0, modifiedIndex = 0;\n        let diagonalForwardStart = 0, diagonalForwardEnd = 0;\n        let diagonalReverseStart = 0, diagonalReverseEnd = 0;\n        // To traverse the edit graph and produce the proper LCS, our actual\n        // start position is just outside the given boundary\n        originalStart--;\n        modifiedStart--;\n        // We set these up to make the compiler happy, but they will\n        // be replaced before we return with the actual recursion point\n        midOriginalArr[0] = 0;\n        midModifiedArr[0] = 0;\n        // Clear out the history\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n        // Each cell in the two arrays corresponds to a diagonal in the edit graph.\n        // The integer value in the cell represents the originalIndex of the furthest\n        // reaching point found so far that ends in that diagonal.\n        // The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\n        const maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\n        const numDiagonals = maxDifferences + 1;\n        const forwardPoints = new Int32Array(numDiagonals);\n        const reversePoints = new Int32Array(numDiagonals);\n        // diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\n        // diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\n        const diagonalForwardBase = (modifiedEnd - modifiedStart);\n        const diagonalReverseBase = (originalEnd - originalStart);\n        // diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalForwardBase)\n        // diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalReverseBase)\n        const diagonalForwardOffset = (originalStart - modifiedStart);\n        const diagonalReverseOffset = (originalEnd - modifiedEnd);\n        // delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\n        //   relative to the start diagonal with diagonal numbers relative to the end diagonal.\n        // The Even/Oddn-ness of this delta is important for determining when we should check for overlap\n        const delta = diagonalReverseBase - diagonalForwardBase;\n        const deltaIsEven = (delta % 2 === 0);\n        // Here we set up the start and end points as the furthest points found so far\n        // in both the forward and reverse directions, respectively\n        forwardPoints[diagonalForwardBase] = originalStart;\n        reversePoints[diagonalReverseBase] = originalEnd;\n        // Remember if we quit early, and thus need to do a best-effort result instead of a real result.\n        quitEarlyArr[0] = false;\n        // A couple of points:\n        // --With this method, we iterate on the number of differences between the two sequences.\n        //   The more differences there actually are, the longer this will take.\n        // --Also, as the number of differences increases, we have to search on diagonals further\n        //   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\n        // --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\n        //   is even and odd diagonals only when numDifferences is odd.\n        for (let numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\n            let furthestOriginalIndex = 0;\n            let furthestModifiedIndex = 0;\n            // Run the algorithm in the forward direction\n            diagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            diagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            for (let diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalStart, modifiedStart)\n                if (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                    originalIndex = forwardPoints[diagonal + 1];\n                }\n                else {\n                    originalIndex = forwardPoints[diagonal - 1] + 1;\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\n                // Save the current originalIndex so we can test for false overlap in step 3\n                const tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // so long as the elements are equal.\n                while (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n                    originalIndex++;\n                    modifiedIndex++;\n                }\n                forwardPoints[diagonal] = originalIndex;\n                if (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n                    furthestOriginalIndex = originalIndex;\n                    furthestModifiedIndex = modifiedIndex;\n                }\n                // STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\n                // and diagonal is in the range of reverse diagonals computed for numDifferences-1\n                // (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\n                // then check for overlap.\n                if (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\n                    if (originalIndex >= reversePoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex <= reversePoints[diagonal] && 1447 /* MaxDifferencesHistory */ > 0 && numDifferences <= (1447 /* MaxDifferencesHistory */ + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Check to see if we should be quitting early, before moving on to the next iteration.\n            const matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n            if (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, matchLengthOfLongest)) {\n                // We can't finish, so skip ahead to generating a result from what we have.\n                quitEarlyArr[0] = true;\n                // Use the furthest distance we got in the forward direction.\n                midOriginalArr[0] = furthestOriginalIndex;\n                midModifiedArr[0] = furthestModifiedIndex;\n                if (matchLengthOfLongest > 0 && 1447 /* MaxDifferencesHistory */ > 0 && numDifferences <= (1447 /* MaxDifferencesHistory */ + 1)) {\n                    // Enough of the history is in memory to walk it backwards\n                    return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                }\n                else {\n                    // We didn't actually remember enough of the history.\n                    //Since we are quitting the diff early, we need to shift back the originalStart and modified start\n                    //back into the boundary limits since we decremented their value above beyond the boundary limit.\n                    originalStart++;\n                    modifiedStart++;\n                    return [\n                        new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n                    ];\n                }\n            }\n            // Run the algorithm in the reverse direction\n            diagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            diagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            for (let diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalEnd, modifiedEnd)\n                if (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                }\n                else {\n                    originalIndex = reversePoints[diagonal - 1];\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\n                // Save the current originalIndex so we can test for false overlap\n                const tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // as long as the elements are equal.\n                while (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n                    originalIndex--;\n                    modifiedIndex--;\n                }\n                reversePoints[diagonal] = originalIndex;\n                // STEP 4: If delta is even (overlap first happens on reverse when delta is even)\n                // and diagonal is in the range of forward diagonals computed for numDifferences\n                // then check for overlap.\n                if (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n                    if (originalIndex <= forwardPoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex >= forwardPoints[diagonal] && 1447 /* MaxDifferencesHistory */ > 0 && numDifferences <= (1447 /* MaxDifferencesHistory */ + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Save current vectors to history before the next iteration\n            if (numDifferences <= 1447 /* MaxDifferencesHistory */) {\n                // We are allocating space for one extra int, which we fill with\n                // the index of the diagonal base index\n                let temp = new Int32Array(diagonalForwardEnd - diagonalForwardStart + 2);\n                temp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n                MyArray.Copy2(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n                this.m_forwardHistory.push(temp);\n                temp = new Int32Array(diagonalReverseEnd - diagonalReverseStart + 2);\n                temp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n                MyArray.Copy2(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n                this.m_reverseHistory.push(temp);\n            }\n        }\n        // If we got here, then we have the full trace in history. We just have to convert it to a change list\n        // NOTE: This part is a bit messy\n        return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n    }\n    /**\n     * Shifts the given changes to provide a more intuitive diff.\n     * While the first element in a diff matches the first element after the diff,\n     * we shift the diff down.\n     *\n     * @param changes The list of changes to shift\n     * @returns The shifted changes\n     */\n    PrettifyChanges(changes) {\n        // Shift all the changes down first\n        for (let i = 0; i < changes.length; i++) {\n            const change = changes[i];\n            const originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this._originalElementsOrHash.length;\n            const modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this._modifiedElementsOrHash.length;\n            const checkOriginal = change.originalLength > 0;\n            const checkModified = change.modifiedLength > 0;\n            while (change.originalStart + change.originalLength < originalStop\n                && change.modifiedStart + change.modifiedLength < modifiedStop\n                && (!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength))\n                && (!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\n                const startStrictEqual = this.ElementsAreStrictEqual(change.originalStart, change.modifiedStart);\n                const endStrictEqual = this.ElementsAreStrictEqual(change.originalStart + change.originalLength, change.modifiedStart + change.modifiedLength);\n                if (endStrictEqual && !startStrictEqual) {\n                    // moving the change down would create an equal change, but the elements are not strict equal\n                    break;\n                }\n                change.originalStart++;\n                change.modifiedStart++;\n            }\n            let mergedChangeArr = [null];\n            if (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\n                changes[i] = mergedChangeArr[0];\n                changes.splice(i + 1, 1);\n                i--;\n                continue;\n            }\n        }\n        // Shift changes back up until we hit empty or whitespace-only lines\n        for (let i = changes.length - 1; i >= 0; i--) {\n            const change = changes[i];\n            let originalStop = 0;\n            let modifiedStop = 0;\n            if (i > 0) {\n                const prevChange = changes[i - 1];\n                originalStop = prevChange.originalStart + prevChange.originalLength;\n                modifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\n            }\n            const checkOriginal = change.originalLength > 0;\n            const checkModified = change.modifiedLength > 0;\n            let bestDelta = 0;\n            let bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\n            for (let delta = 1;; delta++) {\n                const originalStart = change.originalStart - delta;\n                const modifiedStart = change.modifiedStart - delta;\n                if (originalStart < originalStop || modifiedStart < modifiedStop) {\n                    break;\n                }\n                if (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\n                    break;\n                }\n                if (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\n                    break;\n                }\n                const touchingPreviousChange = (originalStart === originalStop && modifiedStart === modifiedStop);\n                const score = ((touchingPreviousChange ? 5 : 0)\n                    + this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength));\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestDelta = delta;\n                }\n            }\n            change.originalStart -= bestDelta;\n            change.modifiedStart -= bestDelta;\n            const mergedChangeArr = [null];\n            if (i > 0 && this.ChangesOverlap(changes[i - 1], changes[i], mergedChangeArr)) {\n                changes[i - 1] = mergedChangeArr[0];\n                changes.splice(i, 1);\n                i++;\n                continue;\n            }\n        }\n        // There could be multiple longest common substrings.\n        // Give preference to the ones containing longer lines\n        if (this._hasStrings) {\n            for (let i = 1, len = changes.length; i < len; i++) {\n                const aChange = changes[i - 1];\n                const bChange = changes[i];\n                const matchedLength = bChange.originalStart - aChange.originalStart - aChange.originalLength;\n                const aOriginalStart = aChange.originalStart;\n                const bOriginalEnd = bChange.originalStart + bChange.originalLength;\n                const abOriginalLength = bOriginalEnd - aOriginalStart;\n                const aModifiedStart = aChange.modifiedStart;\n                const bModifiedEnd = bChange.modifiedStart + bChange.modifiedLength;\n                const abModifiedLength = bModifiedEnd - aModifiedStart;\n                // Avoid wasting a lot of time with these searches\n                if (matchedLength < 5 && abOriginalLength < 20 && abModifiedLength < 20) {\n                    const t = this._findBetterContiguousSequence(aOriginalStart, abOriginalLength, aModifiedStart, abModifiedLength, matchedLength);\n                    if (t) {\n                        const [originalMatchStart, modifiedMatchStart] = t;\n                        if (originalMatchStart !== aChange.originalStart + aChange.originalLength || modifiedMatchStart !== aChange.modifiedStart + aChange.modifiedLength) {\n                            // switch to another sequence that has a better score\n                            aChange.originalLength = originalMatchStart - aChange.originalStart;\n                            aChange.modifiedLength = modifiedMatchStart - aChange.modifiedStart;\n                            bChange.originalStart = originalMatchStart + matchedLength;\n                            bChange.modifiedStart = modifiedMatchStart + matchedLength;\n                            bChange.originalLength = bOriginalEnd - bChange.originalStart;\n                            bChange.modifiedLength = bModifiedEnd - bChange.modifiedStart;\n                        }\n                    }\n                }\n            }\n        }\n        return changes;\n    }\n    _findBetterContiguousSequence(originalStart, originalLength, modifiedStart, modifiedLength, desiredLength) {\n        if (originalLength < desiredLength || modifiedLength < desiredLength) {\n            return null;\n        }\n        const originalMax = originalStart + originalLength - desiredLength + 1;\n        const modifiedMax = modifiedStart + modifiedLength - desiredLength + 1;\n        let bestScore = 0;\n        let bestOriginalStart = 0;\n        let bestModifiedStart = 0;\n        for (let i = originalStart; i < originalMax; i++) {\n            for (let j = modifiedStart; j < modifiedMax; j++) {\n                const score = this._contiguousSequenceScore(i, j, desiredLength);\n                if (score > 0 && score > bestScore) {\n                    bestScore = score;\n                    bestOriginalStart = i;\n                    bestModifiedStart = j;\n                }\n            }\n        }\n        if (bestScore > 0) {\n            return [bestOriginalStart, bestModifiedStart];\n        }\n        return null;\n    }\n    _contiguousSequenceScore(originalStart, modifiedStart, length) {\n        let score = 0;\n        for (let l = 0; l < length; l++) {\n            if (!this.ElementsAreEqual(originalStart + l, modifiedStart + l)) {\n                return 0;\n            }\n            score += this._originalStringElements[originalStart + l].length;\n        }\n        return score;\n    }\n    _OriginalIsBoundary(index) {\n        if (index <= 0 || index >= this._originalElementsOrHash.length - 1) {\n            return true;\n        }\n        return (this._hasStrings && /^\\s*$/.test(this._originalStringElements[index]));\n    }\n    _OriginalRegionIsBoundary(originalStart, originalLength) {\n        if (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\n            return true;\n        }\n        if (originalLength > 0) {\n            const originalEnd = originalStart + originalLength;\n            if (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    _ModifiedIsBoundary(index) {\n        if (index <= 0 || index >= this._modifiedElementsOrHash.length - 1) {\n            return true;\n        }\n        return (this._hasStrings && /^\\s*$/.test(this._modifiedStringElements[index]));\n    }\n    _ModifiedRegionIsBoundary(modifiedStart, modifiedLength) {\n        if (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\n            return true;\n        }\n        if (modifiedLength > 0) {\n            const modifiedEnd = modifiedStart + modifiedLength;\n            if (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    _boundaryScore(originalStart, originalLength, modifiedStart, modifiedLength) {\n        const originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\n        const modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\n        return (originalScore + modifiedScore);\n    }\n    /**\n     * Concatenates the two input DiffChange lists and returns the resulting\n     * list.\n     * @param The left changes\n     * @param The right changes\n     * @returns The concatenated list\n     */\n    ConcatenateChanges(left, right) {\n        let mergedChangeArr = [];\n        if (left.length === 0 || right.length === 0) {\n            return (right.length > 0) ? right : left;\n        }\n        else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n            // Since we break the problem down recursively, it is possible that we\n            // might recurse in the middle of a change thereby splitting it into\n            // two changes. Here in the combining stage, we detect and fuse those\n            // changes back together\n            const result = new Array(left.length + right.length - 1);\n            MyArray.Copy(left, 0, result, 0, left.length - 1);\n            result[left.length - 1] = mergedChangeArr[0];\n            MyArray.Copy(right, 1, result, left.length, right.length - 1);\n            return result;\n        }\n        else {\n            const result = new Array(left.length + right.length);\n            MyArray.Copy(left, 0, result, 0, left.length);\n            MyArray.Copy(right, 0, result, left.length, right.length);\n            return result;\n        }\n    }\n    /**\n     * Returns true if the two changes overlap and can be merged into a single\n     * change\n     * @param left The left change\n     * @param right The right change\n     * @param mergedChange The merged change if the two overlap, null otherwise\n     * @returns True if the two changes overlap\n     */\n    ChangesOverlap(left, right, mergedChangeArr) {\n        Debug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n        Debug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n        if (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n            const originalStart = left.originalStart;\n            let originalLength = left.originalLength;\n            const modifiedStart = left.modifiedStart;\n            let modifiedLength = left.modifiedLength;\n            if (left.originalStart + left.originalLength >= right.originalStart) {\n                originalLength = right.originalStart + right.originalLength - left.originalStart;\n            }\n            if (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n                modifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n            }\n            mergedChangeArr[0] = new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength);\n            return true;\n        }\n        else {\n            mergedChangeArr[0] = null;\n            return false;\n        }\n    }\n    /**\n     * Helper method used to clip a diagonal index to the range of valid\n     * diagonals. This also decides whether or not the diagonal index,\n     * if it exceeds the boundary, should be clipped to the boundary or clipped\n     * one inside the boundary depending on the Even/Odd status of the boundary\n     * and numDifferences.\n     * @param diagonal The index of the diagonal to clip.\n     * @param numDifferences The current number of differences being iterated upon.\n     * @param diagonalBaseIndex The base reference diagonal.\n     * @param numDiagonals The total number of diagonals.\n     * @returns The clipped diagonal index.\n     */\n    ClipDiagonalBound(diagonal, numDifferences, diagonalBaseIndex, numDiagonals) {\n        if (diagonal >= 0 && diagonal < numDiagonals) {\n            // Nothing to clip, its in range\n            return diagonal;\n        }\n        // diagonalsBelow: The number of diagonals below the reference diagonal\n        // diagonalsAbove: The number of diagonals above the reference diagonal\n        const diagonalsBelow = diagonalBaseIndex;\n        const diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n        const diffEven = (numDifferences % 2 === 0);\n        if (diagonal < 0) {\n            const lowerBoundEven = (diagonalsBelow % 2 === 0);\n            return (diffEven === lowerBoundEven) ? 0 : 1;\n        }\n        else {\n            const upperBoundEven = (diagonalsAbove % 2 === 0);\n            return (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { globals, isMacintosh, isWindows, setImmediate } from './platform.js';\nlet safeProcess;\n// Native sandbox environment\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n    const sandboxProcess = globals.vscode.process;\n    safeProcess = {\n        get platform() { return sandboxProcess.platform; },\n        get arch() { return sandboxProcess.arch; },\n        get env() { return sandboxProcess.env; },\n        cwd() { return sandboxProcess.cwd(); },\n        nextTick(callback) { return setImmediate(callback); }\n    };\n}\n// Native node.js environment\nelse if (typeof process !== 'undefined') {\n    safeProcess = {\n        get platform() { return process.platform; },\n        get arch() { return process.arch; },\n        get env() { return process.env; },\n        cwd() { return process.env['VSCODE_CWD'] || process.cwd(); },\n        nextTick(callback) { return process.nextTick(callback); }\n    };\n}\n// Web environment\nelse {\n    safeProcess = {\n        // Supported\n        get platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n        get arch() { return undefined; /* arch is undefined in web */ },\n        nextTick(callback) { return setImmediate(callback); },\n        // Unsupported\n        get env() { return {}; },\n        cwd() { return '/'; }\n    };\n}\n/**\n * Provides safe access to the `cwd` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `/`.\n */\nexport const cwd = safeProcess.cwd;\n/**\n * Provides safe access to the `env` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `{}`.\n */\nexport const env = safeProcess.env;\n/**\n * Provides safe access to the `platform` property in node.js, sandboxed or web\n * environments.\n */\nexport const platform = safeProcess.platform;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/blob/v14.16.0/lib/path.js\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nimport * as process from './process.js';\nconst CHAR_UPPERCASE_A = 65; /* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\nclass ErrorInvalidArgType extends Error {\n    constructor(name, expected, actual) {\n        // determiner: 'must be' or 'must not be'\n        let determiner;\n        if (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n            determiner = 'must not be';\n            expected = expected.replace(/^not /, '');\n        }\n        else {\n            determiner = 'must be';\n        }\n        const type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n        let msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n        msg += `. Received type ${typeof actual}`;\n        super(msg);\n        this.code = 'ERR_INVALID_ARG_TYPE';\n    }\n}\nfunction validateString(value, name) {\n    if (typeof value !== 'string') {\n        throw new ErrorInvalidArgType(name, 'string', value);\n    }\n}\nfunction isPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\nfunction isPosixPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH;\n}\nfunction isWindowsDeviceRoot(code) {\n    return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n        (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\n}\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path, allowAboveRoot, separator, isPathSeparator) {\n    let res = '';\n    let lastSegmentLength = 0;\n    let lastSlash = -1;\n    let dots = 0;\n    let code = 0;\n    for (let i = 0; i <= path.length; ++i) {\n        if (i < path.length) {\n            code = path.charCodeAt(i);\n        }\n        else if (isPathSeparator(code)) {\n            break;\n        }\n        else {\n            code = CHAR_FORWARD_SLASH;\n        }\n        if (isPathSeparator(code)) {\n            if (lastSlash === i - 1 || dots === 1) {\n                // NOOP\n            }\n            else if (dots === 2) {\n                if (res.length < 2 || lastSegmentLength !== 2 ||\n                    res.charCodeAt(res.length - 1) !== CHAR_DOT ||\n                    res.charCodeAt(res.length - 2) !== CHAR_DOT) {\n                    if (res.length > 2) {\n                        const lastSlashIndex = res.lastIndexOf(separator);\n                        if (lastSlashIndex === -1) {\n                            res = '';\n                            lastSegmentLength = 0;\n                        }\n                        else {\n                            res = res.slice(0, lastSlashIndex);\n                            lastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n                        }\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                    else if (res.length !== 0) {\n                        res = '';\n                        lastSegmentLength = 0;\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                }\n                if (allowAboveRoot) {\n                    res += res.length > 0 ? `${separator}..` : '..';\n                    lastSegmentLength = 2;\n                }\n            }\n            else {\n                if (res.length > 0) {\n                    res += `${separator}${path.slice(lastSlash + 1, i)}`;\n                }\n                else {\n                    res = path.slice(lastSlash + 1, i);\n                }\n                lastSegmentLength = i - lastSlash - 1;\n            }\n            lastSlash = i;\n            dots = 0;\n        }\n        else if (code === CHAR_DOT && dots !== -1) {\n            ++dots;\n        }\n        else {\n            dots = -1;\n        }\n    }\n    return res;\n}\nfunction _format(sep, pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n        throw new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n    }\n    const dir = pathObject.dir || pathObject.root;\n    const base = pathObject.base ||\n        `${pathObject.name || ''}${pathObject.ext || ''}`;\n    if (!dir) {\n        return base;\n    }\n    return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\nexport const win32 = {\n    // path.resolve([from ...], to)\n    resolve(...pathSegments) {\n        let resolvedDevice = '';\n        let resolvedTail = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1; i--) {\n            let path;\n            if (i >= 0) {\n                path = pathSegments[i];\n                validateString(path, 'path');\n                // Skip empty entries\n                if (path.length === 0) {\n                    continue;\n                }\n            }\n            else if (resolvedDevice.length === 0) {\n                path = process.cwd();\n            }\n            else {\n                // Windows has the concept of drive-specific current working\n                // directories. If we've resolved a drive letter but not yet an\n                // absolute path, get cwd for that drive, or the process cwd if\n                // the drive cwd is not available. We're sure the device is not\n                // a UNC path at this points, because UNC paths are always absolute.\n                path = process.env[`=${resolvedDevice}`] || process.cwd();\n                // Verify that a cwd was found and that it actually points\n                // to our drive. If not, default to the drive's root.\n                if (path === undefined ||\n                    (path.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n                        path.charCodeAt(2) === CHAR_BACKWARD_SLASH)) {\n                    path = `${resolvedDevice}\\\\`;\n                }\n            }\n            const len = path.length;\n            let rootEnd = 0;\n            let device = '';\n            let isAbsolute = false;\n            const code = path.charCodeAt(0);\n            // Try to match a root\n            if (len === 1) {\n                if (isPathSeparator(code)) {\n                    // `path` contains just a path separator\n                    rootEnd = 1;\n                    isAbsolute = true;\n                }\n            }\n            else if (isPathSeparator(code)) {\n                // Possible UNC root\n                // If we started with a separator, we know we at least have an\n                // absolute path of some kind (UNC or otherwise)\n                isAbsolute = true;\n                if (isPathSeparator(path.charCodeAt(1))) {\n                    // Matched double path separator at beginning\n                    let j = 2;\n                    let last = j;\n                    // Match 1 or more non-path separators\n                    while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        const firstPart = path.slice(last, j);\n                        // Matched!\n                        last = j;\n                        // Match 1 or more path separators\n                        while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j < len && j !== last) {\n                            // Matched!\n                            last = j;\n                            // Match 1 or more non-path separators\n                            while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                                j++;\n                            }\n                            if (j === len || j !== last) {\n                                // We matched a UNC root\n                                device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                                rootEnd = j;\n                            }\n                        }\n                    }\n                }\n                else {\n                    rootEnd = 1;\n                }\n            }\n            else if (isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON) {\n                // Possible device root\n                device = path.slice(0, 2);\n                rootEnd = 2;\n                if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                    // Treat separator following drive name as an absolute path\n                    // indicator\n                    isAbsolute = true;\n                    rootEnd = 3;\n                }\n            }\n            if (device.length > 0) {\n                if (resolvedDevice.length > 0) {\n                    if (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n                        // This path points to another device so it is not applicable\n                        continue;\n                    }\n                }\n                else {\n                    resolvedDevice = device;\n                }\n            }\n            if (resolvedAbsolute) {\n                if (resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n            else {\n                resolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n                resolvedAbsolute = isAbsolute;\n                if (isAbsolute && resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n        }\n        // At this point the path should be resolved to a full absolute path,\n        // but handle relative paths to be safe (might happen when process.cwd()\n        // fails)\n        // Normalize the tail path\n        resolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\', isPathSeparator);\n        return resolvedAbsolute ?\n            `${resolvedDevice}\\\\${resolvedTail}` :\n            `${resolvedDevice}${resolvedTail}` || '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = 0;\n        let device;\n        let isAbsolute = false;\n        const code = path.charCodeAt(0);\n        // Try to match a root\n        if (len === 1) {\n            // `path` contains just a single char, exit early to avoid\n            // unnecessary work\n            return isPosixPathSeparator(code) ? '\\\\' : path;\n        }\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            // If we started with a separator, we know we at least have an absolute\n            // path of some kind (UNC or otherwise)\n            isAbsolute = true;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    const firstPart = path.slice(last, j);\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            // Return the normalized version of the UNC root since there\n                            // is nothing left to process\n                            return `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n                        }\n                        if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                            rootEnd = j;\n                        }\n                    }\n                }\n            }\n            else {\n                rootEnd = 1;\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            // Possible device root\n            device = path.slice(0, 2);\n            rootEnd = 2;\n            if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                // Treat separator following drive name as an absolute path\n                // indicator\n                isAbsolute = true;\n                rootEnd = 3;\n            }\n        }\n        let tail = rootEnd < len ?\n            normalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n            '';\n        if (tail.length === 0 && !isAbsolute) {\n            tail = '.';\n        }\n        if (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n            tail += '\\\\';\n        }\n        if (device === undefined) {\n            return isAbsolute ? `\\\\${tail}` : tail;\n        }\n        return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return false;\n        }\n        const code = path.charCodeAt(0);\n        return isPathSeparator(code) ||\n            // Possible device root\n            (len > 2 &&\n                isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON &&\n                isPathSeparator(path.charCodeAt(2)));\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        let firstPart;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = firstPart = arg;\n                }\n                else {\n                    joined += `\\\\${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        // Make sure that the joined path doesn't start with two slashes, because\n        // normalize() will mistake it for a UNC path then.\n        //\n        // This step is skipped when it is very clear that the user actually\n        // intended to point at a UNC path. This is assumed when the first\n        // non-empty string arguments starts with exactly two slashes followed by\n        // at least one more non-slash character.\n        //\n        // Note that for normalize() to treat a path as a UNC path it needs to\n        // have at least 2 components, so we don't filter for that here.\n        // This means that the user can use join to construct UNC paths from\n        // a server name and a share name; for example:\n        //   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n        let needsReplace = true;\n        let slashCount = 0;\n        if (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n            ++slashCount;\n            const firstLen = firstPart.length;\n            if (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n                ++slashCount;\n                if (firstLen > 2) {\n                    if (isPathSeparator(firstPart.charCodeAt(2))) {\n                        ++slashCount;\n                    }\n                    else {\n                        // We matched a UNC path in the first part\n                        needsReplace = false;\n                    }\n                }\n            }\n        }\n        if (needsReplace) {\n            // Find any more consecutive slashes we need to replace\n            while (slashCount < joined.length &&\n                isPathSeparator(joined.charCodeAt(slashCount))) {\n                slashCount++;\n            }\n            // Replace the slashes if needed\n            if (slashCount >= 2) {\n                joined = `\\\\${joined.slice(slashCount)}`;\n            }\n        }\n        return win32.normalize(joined);\n    },\n    // It will solve the relative path from `from` to `to`, for instance:\n    //  from = 'C:\\\\orandea\\\\test\\\\aaa'\n    //  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n    // The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        const fromOrig = win32.resolve(from);\n        const toOrig = win32.resolve(to);\n        if (fromOrig === toOrig) {\n            return '';\n        }\n        from = fromOrig.toLowerCase();\n        to = toOrig.toLowerCase();\n        if (from === to) {\n            return '';\n        }\n        // Trim any leading backslashes\n        let fromStart = 0;\n        while (fromStart < from.length &&\n            from.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n            fromStart++;\n        }\n        // Trim trailing backslashes (applicable to UNC paths only)\n        let fromEnd = from.length;\n        while (fromEnd - 1 > fromStart &&\n            from.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n            fromEnd--;\n        }\n        const fromLen = fromEnd - fromStart;\n        // Trim any leading backslashes\n        let toStart = 0;\n        while (toStart < to.length &&\n            to.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            toStart++;\n        }\n        // Trim trailing backslashes (applicable to UNC paths only)\n        let toEnd = to.length;\n        while (toEnd - 1 > toStart &&\n            to.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n            toEnd--;\n        }\n        const toLen = toEnd - toStart;\n        // Compare paths to find the longest common path from root\n        const length = fromLen < toLen ? fromLen : toLen;\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_BACKWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        // We found a mismatch before the first common path separator was seen, so\n        // return the original `to`.\n        if (i !== length) {\n            if (lastCommonSep === -1) {\n                return toOrig;\n            }\n        }\n        else {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n                    // We get here if `from` is the exact base path for `to`.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n                    return toOrig.slice(toStart + i + 1);\n                }\n                if (i === 2) {\n                    // We get here if `from` is the device root.\n                    // For example: from='C:\\\\'; to='C:\\\\foo'\n                    return toOrig.slice(toStart + i);\n                }\n            }\n            if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n                    // We get here if `to` is the exact base path for `from`.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n                    lastCommonSep = i;\n                }\n                else if (i === 2) {\n                    // We get here if `to` is the device root.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n                    lastCommonSep = 3;\n                }\n            }\n            if (lastCommonSep === -1) {\n                lastCommonSep = 0;\n            }\n        }\n        let out = '';\n        // Generate the relative path based on the path difference between `to` and\n        // `from`\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n                out += out.length === 0 ? '..' : '\\\\..';\n            }\n        }\n        toStart += lastCommonSep;\n        // Lastly, append the rest of the destination (`to`) path that comes after\n        // the common path parts\n        if (out.length > 0) {\n            return `${out}${toOrig.slice(toStart, toEnd)}`;\n        }\n        if (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            ++toStart;\n        }\n        return toOrig.slice(toStart, toEnd);\n    },\n    toNamespacedPath(path) {\n        // Note: this will *probably* throw somewhere.\n        if (typeof path !== 'string') {\n            return path;\n        }\n        if (path.length === 0) {\n            return '';\n        }\n        const resolvedPath = win32.resolve(path);\n        if (resolvedPath.length <= 2) {\n            return path;\n        }\n        if (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n            // Possible UNC root\n            if (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n                const code = resolvedPath.charCodeAt(2);\n                if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n                    // Matched non-long UNC root, convert the path to a long UNC path\n                    return `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n            resolvedPath.charCodeAt(1) === CHAR_COLON &&\n            resolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n            // Matched device root, convert the path to a long UNC path\n            return `\\\\\\\\?\\\\${resolvedPath}`;\n        }\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = -1;\n        let offset = 0;\n        const code = path.charCodeAt(0);\n        if (len === 1) {\n            // `path` contains just a path separator, exit early to avoid\n            // unnecessary work or a dot.\n            return isPathSeparator(code) ? path : '.';\n        }\n        // Try to match a root\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            rootEnd = offset = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            return path;\n                        }\n                        if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            // Offset by 1 to include the separator after the UNC root to\n                            // treat it as a \"normal root\" on top of a (UNC) root\n                            rootEnd = offset = j + 1;\n                        }\n                    }\n                }\n            }\n            // Possible device root\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            rootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n            offset = rootEnd;\n        }\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = len - 1; i >= offset; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                // We saw the first non-path separator\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            if (rootEnd === -1) {\n                return '.';\n            }\n            end = rootEnd;\n        }\n        return path.slice(0, end);\n    },\n    basename(path, ext) {\n        if (ext !== undefined) {\n            validateString(ext, 'ext');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        // Check for a drive letter prefix so as not to mistake the following\n        // path separator as an extra separator at the end of the path that can be\n        // disregarded\n        if (path.length >= 2 &&\n            isWindowsDeviceRoot(path.charCodeAt(0)) &&\n            path.charCodeAt(1) === CHAR_COLON) {\n            start = 2;\n        }\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n            if (ext === path) {\n                return '';\n            }\n            let extIdx = ext.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= start; --i) {\n                const code = path.charCodeAt(i);\n                if (isPathSeparator(code)) {\n                    // If we reached a path separator that was not part of a set of path\n                    // separators at the end of the string, stop now\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        // We saw the first non-path separator, remember this index in case\n                        // we need it if the extension ends up not matching\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        // Try to match the explicit extension\n                        if (code === ext.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                // We matched the extension, so mark this as the end of our path\n                                // component\n                                end = i;\n                            }\n                        }\n                        else {\n                            // Extension does not match, so our result is the entire path\n                            // component\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= start; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // path component\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let start = 0;\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Check for a drive letter prefix so as not to mistake the following\n        // path separator as an extra separator at the end of the path that can be\n        // disregarded\n        if (path.length >= 2 &&\n            path.charCodeAt(1) === CHAR_COLON &&\n            isWindowsDeviceRoot(path.charCodeAt(0))) {\n            start = startPart = 2;\n        }\n        for (let i = path.length - 1; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            // We saw a non-dot character immediately before the dot\n            preDotState === 0 ||\n            // The (right-most) trimmed path component is exactly '..'\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '\\\\'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const len = path.length;\n        let rootEnd = 0;\n        let code = path.charCodeAt(0);\n        if (len === 1) {\n            if (isPathSeparator(code)) {\n                // `path` contains just a path separator, exit early to avoid\n                // unnecessary work\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            ret.base = ret.name = path;\n            return ret;\n        }\n        // Try to match a root\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            rootEnd = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            rootEnd = j;\n                        }\n                        else if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            rootEnd = j + 1;\n                        }\n                    }\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            // Possible device root\n            if (len <= 2) {\n                // `path` contains just a drive root, exit early to avoid\n                // unnecessary work\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            rootEnd = 2;\n            if (isPathSeparator(path.charCodeAt(2))) {\n                if (len === 3) {\n                    // `path` contains just a drive root, exit early to avoid\n                    // unnecessary work\n                    ret.root = ret.dir = path;\n                    return ret;\n                }\n                rootEnd = 3;\n            }\n        }\n        if (rootEnd > 0) {\n            ret.root = path.slice(0, rootEnd);\n        }\n        let startDot = -1;\n        let startPart = rootEnd;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Get non-dir info\n        for (; i >= rootEnd; --i) {\n            code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            if (startDot === -1 ||\n                // We saw a non-dot character immediately before the dot\n                preDotState === 0 ||\n                // The (right-most) trimmed path component is exactly '..'\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(startPart, end);\n            }\n            else {\n                ret.name = path.slice(startPart, startDot);\n                ret.base = path.slice(startPart, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        // If the directory is the root, use the entire root as the `dir` including\n        // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n        // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n        if (startPart > 0 && startPart !== rootEnd) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else {\n            ret.dir = ret.root;\n        }\n        return ret;\n    },\n    sep: '\\\\',\n    delimiter: ';',\n    win32: null,\n    posix: null\n};\nexport const posix = {\n    // path.resolve([from ...], to)\n    resolve(...pathSegments) {\n        let resolvedPath = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n            const path = i >= 0 ? pathSegments[i] : process.cwd();\n            validateString(path, 'path');\n            // Skip empty entries\n            if (path.length === 0) {\n                continue;\n            }\n            resolvedPath = `${path}/${resolvedPath}`;\n            resolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        }\n        // At this point the path should be resolved to a full absolute path, but\n        // handle relative paths to be safe (might happen when process.cwd() fails)\n        // Normalize the path\n        resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/', isPosixPathSeparator);\n        if (resolvedAbsolute) {\n            return `/${resolvedPath}`;\n        }\n        return resolvedPath.length > 0 ? resolvedPath : '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        const trailingSeparator = path.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n        // Normalize the path\n        path = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n        if (path.length === 0) {\n            if (isAbsolute) {\n                return '/';\n            }\n            return trailingSeparator ? './' : '.';\n        }\n        if (trailingSeparator) {\n            path += '/';\n        }\n        return isAbsolute ? `/${path}` : path;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        return path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = arg;\n                }\n                else {\n                    joined += `/${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        return posix.normalize(joined);\n    },\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        // Trim leading forward slashes.\n        from = posix.resolve(from);\n        to = posix.resolve(to);\n        if (from === to) {\n            return '';\n        }\n        const fromStart = 1;\n        const fromEnd = from.length;\n        const fromLen = fromEnd - fromStart;\n        const toStart = 1;\n        const toLen = to.length - toStart;\n        // Compare paths to find the longest common path from root\n        const length = (fromLen < toLen ? fromLen : toLen);\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_FORWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        if (i === length) {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n                    // We get here if `from` is the exact base path for `to`.\n                    // For example: from='/foo/bar'; to='/foo/bar/baz'\n                    return to.slice(toStart + i + 1);\n                }\n                if (i === 0) {\n                    // We get here if `from` is the root\n                    // For example: from='/'; to='/foo'\n                    return to.slice(toStart + i);\n                }\n            }\n            else if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n                    // We get here if `to` is the exact base path for `from`.\n                    // For example: from='/foo/bar/baz'; to='/foo/bar'\n                    lastCommonSep = i;\n                }\n                else if (i === 0) {\n                    // We get here if `to` is the root.\n                    // For example: from='/foo/bar'; to='/'\n                    lastCommonSep = 0;\n                }\n            }\n        }\n        let out = '';\n        // Generate the relative path based on the path difference between `to`\n        // and `from`.\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                out += out.length === 0 ? '..' : '/..';\n            }\n        }\n        // Lastly, append the rest of the destination (`to`) path that comes after\n        // the common path parts.\n        return `${out}${to.slice(toStart + lastCommonSep)}`;\n    },\n    toNamespacedPath(path) {\n        // Non-op on posix systems\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = path.length - 1; i >= 1; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                // We saw the first non-path separator\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            return hasRoot ? '/' : '.';\n        }\n        if (hasRoot && end === 1) {\n            return '//';\n        }\n        return path.slice(0, end);\n    },\n    basename(path, ext) {\n        if (ext !== undefined) {\n            validateString(ext, 'ext');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n            if (ext === path) {\n                return '';\n            }\n            let extIdx = ext.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= 0; --i) {\n                const code = path.charCodeAt(i);\n                if (code === CHAR_FORWARD_SLASH) {\n                    // If we reached a path separator that was not part of a set of path\n                    // separators at the end of the string, stop now\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        // We saw the first non-path separator, remember this index in case\n                        // we need it if the extension ends up not matching\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        // Try to match the explicit extension\n                        if (code === ext.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                // We matched the extension, so mark this as the end of our path\n                                // component\n                                end = i;\n                            }\n                        }\n                        else {\n                            // Extension does not match, so our result is the entire path\n                            // component\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= 0; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // path component\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        for (let i = path.length - 1; i >= 0; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            // We saw a non-dot character immediately before the dot\n            preDotState === 0 ||\n            // The (right-most) trimmed path component is exactly '..'\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '/'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let start;\n        if (isAbsolute) {\n            ret.root = '/';\n            start = 1;\n        }\n        else {\n            start = 0;\n        }\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Get non-dir info\n        for (; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            const start = startPart === 0 && isAbsolute ? 1 : startPart;\n            if (startDot === -1 ||\n                // We saw a non-dot character immediately before the dot\n                preDotState === 0 ||\n                // The (right-most) trimmed path component is exactly '..'\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(start, end);\n            }\n            else {\n                ret.name = path.slice(start, startDot);\n                ret.base = path.slice(start, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        if (startPart > 0) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else if (isAbsolute) {\n            ret.dir = '/';\n        }\n        return ret;\n    },\n    sep: '/',\n    delimiter: ':',\n    win32: null,\n    posix: null\n};\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\nexport const normalize = (process.platform === 'win32' ? win32.normalize : posix.normalize);\nexport const resolve = (process.platform === 'win32' ? win32.resolve : posix.resolve);\nexport const relative = (process.platform === 'win32' ? win32.relative : posix.relative);\nexport const dirname = (process.platform === 'win32' ? win32.dirname : posix.dirname);\nexport const basename = (process.platform === 'win32' ? win32.basename : posix.basename);\nexport const extname = (process.platform === 'win32' ? win32.extname : posix.extname);\nexport const sep = (process.platform === 'win32' ? win32.sep : posix.sep);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as paths from './path.js';\nimport { isWindows } from './platform.js';\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\nfunction _validateUri(ret, _strict) {\n    // scheme, must be set\n    if (!ret.scheme && _strict) {\n        throw new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n    }\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw new Error('[UriError]: Scheme contains illegal characters.');\n    }\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\n    // If a URI contains an authority component, then the path component\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\n    // does not contain an authority component, then the path cannot begin\n    // with two slash characters (\"//\").\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n            }\n        }\n    }\n}\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme, _strict) {\n    if (!scheme && !_strict) {\n        return 'file';\n    }\n    return scheme;\n}\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme, path) {\n    // the slash-character is our 'default base' as we don't\n    // support constructing URIs relative to other URIs. This\n    // also means that we alter and potentially break paths.\n    // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n    switch (scheme) {\n        case 'https':\n        case 'http':\n        case 'file':\n            if (!path) {\n                path = _slash;\n            }\n            else if (path[0] !== _slash) {\n                path = _slash + path;\n            }\n            break;\n    }\n    return path;\n}\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI {\n    /**\n     * @internal\n     */\n    constructor(schemeOrData, authority, path, query, fragment, _strict = false) {\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n            // no validation because it's this URI\n            // that creates uri components.\n            // _validateUri(this);\n        }\n        else {\n            this.scheme = _schemeFix(schemeOrData, _strict);\n            this.authority = authority || _empty;\n            this.path = _referenceResolution(this.scheme, path || _empty);\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this, _strict);\n        }\n    }\n    static isUri(thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string'\n            && typeof thing.fsPath === 'string'\n            && typeof thing.with === 'function'\n            && typeof thing.toString === 'function';\n    }\n    // ---- filesystem path -----------------------\n    /**\n     * Returns a string representing the corresponding file system path of this URI.\n     * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n     * platform specific path separator.\n     *\n     * * Will *not* validate the path for invalid characters and semantics.\n     * * Will *not* look at the scheme of this URI.\n     * * The result shall *not* be used for display purposes but for accessing a file on disk.\n     *\n     *\n     * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n     * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n     *\n     * ```ts\n        const u = URI.parse('file://server/c$/folder/file.txt')\n        u.authority === 'server'\n        u.path === '/shares/c$/file.txt'\n        u.fsPath === '\\\\server\\c$\\folder\\file.txt'\n    ```\n     *\n     * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n     * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n     * with URIs that represent files on disk (`file` scheme).\n     */\n    get fsPath() {\n        // if (this.scheme !== 'file') {\n        // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n        // }\n        return uriToFsPath(this, false);\n    }\n    // ---- modify to new -------------------------\n    with(change) {\n        if (!change) {\n            return this;\n        }\n        let { scheme, authority, path, query, fragment } = change;\n        if (scheme === undefined) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === undefined) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === undefined) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === undefined) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === undefined) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return new Uri(scheme, authority, path, query, fragment);\n    }\n    // ---- parse & validate ------------------------\n    /**\n     * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n     * `file:///usr/home`, or `scheme:with/path`.\n     *\n     * @param value A string which represents an URI (see `URI#toString`).\n     */\n    static parse(value, _strict = false) {\n        const match = _regexp.exec(value);\n        if (!match) {\n            return new Uri(_empty, _empty, _empty, _empty, _empty);\n        }\n        return new Uri(match[2] || _empty, percentDecode(match[4] || _empty), percentDecode(match[5] || _empty), percentDecode(match[7] || _empty), percentDecode(match[9] || _empty), _strict);\n    }\n    /**\n     * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n     * `/usr/home`, or `\\\\server\\share\\some\\path`.\n     *\n     * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n     * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n     * `URI.parse('file://' + path)` because the path might contain characters that are\n     * interpreted (# and ?). See the following sample:\n     * ```ts\n    const good = URI.file('/coding/c#/project1');\n    good.scheme === 'file';\n    good.path === '/coding/c#/project1';\n    good.fragment === '';\n    const bad = URI.parse('file://' + '/coding/c#/project1');\n    bad.scheme === 'file';\n    bad.path === '/coding/c'; // path is now broken\n    bad.fragment === '/project1';\n    ```\n     *\n     * @param path A file system path (see `URI#fsPath`)\n     */\n    static file(path) {\n        let authority = _empty;\n        // normalize to fwd-slashes on windows,\n        // on other systems bwd-slashes are valid\n        // filename character, eg /f\\oo/ba\\r.txt\n        if (isWindows) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        // check for authority as used in UNC shares\n        // or use the path as given\n        if (path[0] === _slash && path[1] === _slash) {\n            const idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        return new Uri('file', authority, path, _empty, _empty);\n    }\n    static from(components) {\n        const result = new Uri(components.scheme, components.authority, components.path, components.query, components.fragment);\n        _validateUri(result, true);\n        return result;\n    }\n    /**\n     * Join a URI path with path fragments and normalizes the resulting path.\n     *\n     * @param uri The input URI.\n     * @param pathFragment The path fragment to add to the URI path.\n     * @returns The resulting URI.\n     */\n    static joinPath(uri, ...pathFragment) {\n        if (!uri.path) {\n            throw new Error(`[UriError]: cannot call joinPath on URI without path`);\n        }\n        let newPath;\n        if (isWindows && uri.scheme === 'file') {\n            newPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n        }\n        else {\n            newPath = paths.posix.join(uri.path, ...pathFragment);\n        }\n        return uri.with({ path: newPath });\n    }\n    // ---- printing/externalize ---------------------------\n    /**\n     * Creates a string representation for this URI. It's guaranteed that calling\n     * `URI.parse` with the result of this function creates an URI which is equal\n     * to this URI.\n     *\n     * * The result shall *not* be used for display purposes but for externalization or transport.\n     * * The result will be encoded using the percentage encoding and encoding happens mostly\n     * ignore the scheme-specific encoding rules.\n     *\n     * @param skipEncoding Do not encode the result, default is `false`\n     */\n    toString(skipEncoding = false) {\n        return _asFormatted(this, skipEncoding);\n    }\n    toJSON() {\n        return this;\n    }\n    static revive(data) {\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            const result = new Uri(data);\n            result._formatted = data.external;\n            result._fsPath = data._sep === _pathSepMarker ? data.fsPath : null;\n            return result;\n        }\n    }\n}\nconst _pathSepMarker = isWindows ? 1 : undefined;\n// This class exists so that URI is compatible with vscode.Uri (API).\nclass Uri extends URI {\n    constructor() {\n        super(...arguments);\n        this._formatted = null;\n        this._fsPath = null;\n    }\n    get fsPath() {\n        if (!this._fsPath) {\n            this._fsPath = uriToFsPath(this, false);\n        }\n        return this._fsPath;\n    }\n    toString(skipEncoding = false) {\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            // we don't cache that\n            return _asFormatted(this, true);\n        }\n    }\n    toJSON() {\n        const res = {\n            $mid: 1 /* Uri */\n        };\n        // cached state\n        if (this._fsPath) {\n            res.fsPath = this._fsPath;\n            res._sep = _pathSepMarker;\n        }\n        if (this._formatted) {\n            res.external = this._formatted;\n        }\n        // uri components\n        if (this.path) {\n            res.path = this.path;\n        }\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    }\n}\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable = {\n    [58 /* Colon */]: '%3A',\n    [47 /* Slash */]: '%2F',\n    [63 /* QuestionMark */]: '%3F',\n    [35 /* Hash */]: '%23',\n    [91 /* OpenSquareBracket */]: '%5B',\n    [93 /* CloseSquareBracket */]: '%5D',\n    [64 /* AtSign */]: '%40',\n    [33 /* ExclamationMark */]: '%21',\n    [36 /* DollarSign */]: '%24',\n    [38 /* Ampersand */]: '%26',\n    [39 /* SingleQuote */]: '%27',\n    [40 /* OpenParen */]: '%28',\n    [41 /* CloseParen */]: '%29',\n    [42 /* Asterisk */]: '%2A',\n    [43 /* Plus */]: '%2B',\n    [44 /* Comma */]: '%2C',\n    [59 /* Semicolon */]: '%3B',\n    [61 /* Equals */]: '%3D',\n    [32 /* Space */]: '%20',\n};\nfunction encodeURIComponentFast(uriComponent, allowSlash) {\n    let res = undefined;\n    let nativeEncodePos = -1;\n    for (let pos = 0; pos < uriComponent.length; pos++) {\n        const code = uriComponent.charCodeAt(pos);\n        // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n        if ((code >= 97 /* a */ && code <= 122 /* z */)\n            || (code >= 65 /* A */ && code <= 90 /* Z */)\n            || (code >= 48 /* Digit0 */ && code <= 57 /* Digit9 */)\n            || code === 45 /* Dash */\n            || code === 46 /* Period */\n            || code === 95 /* Underline */\n            || code === 126 /* Tilde */\n            || (allowSlash && code === 47 /* Slash */)) {\n            // check if we are delaying native encode\n            if (nativeEncodePos !== -1) {\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                nativeEncodePos = -1;\n            }\n            // check if we write into a new string (by default we try to return the param)\n            if (res !== undefined) {\n                res += uriComponent.charAt(pos);\n            }\n        }\n        else {\n            // encoding needed, we need to allocate a new string\n            if (res === undefined) {\n                res = uriComponent.substr(0, pos);\n            }\n            // check with default table first\n            const escaped = encodeTable[code];\n            if (escaped !== undefined) {\n                // check if we are delaying native encode\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                // append escaped variant to result\n                res += escaped;\n            }\n            else if (nativeEncodePos === -1) {\n                // use native encode only when needed\n                nativeEncodePos = pos;\n            }\n        }\n    }\n    if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n    }\n    return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n    let res = undefined;\n    for (let pos = 0; pos < path.length; pos++) {\n        const code = path.charCodeAt(pos);\n        if (code === 35 /* Hash */ || code === 63 /* QuestionMark */) {\n            if (res === undefined) {\n                res = path.substr(0, pos);\n            }\n            res += encodeTable[code];\n        }\n        else {\n            if (res !== undefined) {\n                res += path[pos];\n            }\n        }\n    }\n    return res !== undefined ? res : path;\n}\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri, keepDriveLetterCasing) {\n    let value;\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n        // unc path: file://shares/c$/far/boo\n        value = `//${uri.authority}${uri.path}`;\n    }\n    else if (uri.path.charCodeAt(0) === 47 /* Slash */\n        && (uri.path.charCodeAt(1) >= 65 /* A */ && uri.path.charCodeAt(1) <= 90 /* Z */ || uri.path.charCodeAt(1) >= 97 /* a */ && uri.path.charCodeAt(1) <= 122 /* z */)\n        && uri.path.charCodeAt(2) === 58 /* Colon */) {\n        if (!keepDriveLetterCasing) {\n            // windows drive letter: file:///c:/far/boo\n            value = uri.path[1].toLowerCase() + uri.path.substr(2);\n        }\n        else {\n            value = uri.path.substr(1);\n        }\n    }\n    else {\n        // other path\n        value = uri.path;\n    }\n    if (isWindows) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri, skipEncoding) {\n    const encoder = !skipEncoding\n        ? encodeURIComponentFast\n        : encodeURIComponentMinimal;\n    let res = '';\n    let { scheme, authority, path, query, fragment } = uri;\n    if (scheme) {\n        res += scheme;\n        res += ':';\n    }\n    if (authority || scheme === 'file') {\n        res += _slash;\n        res += _slash;\n    }\n    if (authority) {\n        let idx = authority.indexOf('@');\n        if (idx !== -1) {\n            // <user>@<auth>\n            const userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.indexOf(':');\n            if (idx === -1) {\n                res += encoder(userinfo, false);\n            }\n            else {\n                // <user>:<pass>@<auth>\n                res += encoder(userinfo.substr(0, idx), false);\n                res += ':';\n                res += encoder(userinfo.substr(idx + 1), false);\n            }\n            res += '@';\n        }\n        authority = authority.toLowerCase();\n        idx = authority.indexOf(':');\n        if (idx === -1) {\n            res += encoder(authority, false);\n        }\n        else {\n            // <auth>:<port>\n            res += encoder(authority.substr(0, idx), false);\n            res += authority.substr(idx);\n        }\n    }\n    if (path) {\n        // lower-case windows drive letters in /C:/fff or C:/fff\n        if (path.length >= 3 && path.charCodeAt(0) === 47 /* Slash */ && path.charCodeAt(2) === 58 /* Colon */) {\n            const code = path.charCodeAt(1);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n            }\n        }\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 /* Colon */) {\n            const code = path.charCodeAt(0);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n            }\n        }\n        // encode the rest of the path\n        res += encoder(path, true);\n    }\n    if (query) {\n        res += '?';\n        res += encoder(query, false);\n    }\n    if (fragment) {\n        res += '#';\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n    }\n    return res;\n}\n// --- decode\nfunction decodeURIComponentGraceful(str) {\n    try {\n        return decodeURIComponent(str);\n    }\n    catch (_a) {\n        if (str.length > 3) {\n            return str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n        }\n        else {\n            return str;\n        }\n    }\n}\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\nfunction percentDecode(str) {\n    if (!str.match(_rEncodedAsHex)) {\n        return str;\n    }\n    return str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * A position in the editor.\n */\nexport class Position {\n    constructor(lineNumber, column) {\n        this.lineNumber = lineNumber;\n        this.column = column;\n    }\n    /**\n     * Create a new position from this position.\n     *\n     * @param newLineNumber new line number\n     * @param newColumn new column\n     */\n    with(newLineNumber = this.lineNumber, newColumn = this.column) {\n        if (newLineNumber === this.lineNumber && newColumn === this.column) {\n            return this;\n        }\n        else {\n            return new Position(newLineNumber, newColumn);\n        }\n    }\n    /**\n     * Derive a new position from this position.\n     *\n     * @param deltaLineNumber line number delta\n     * @param deltaColumn column delta\n     */\n    delta(deltaLineNumber = 0, deltaColumn = 0) {\n        return this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\n    }\n    /**\n     * Test if this position equals other position\n     */\n    equals(other) {\n        return Position.equals(this, other);\n    }\n    /**\n     * Test if position `a` equals position `b`\n     */\n    static equals(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        return (!!a &&\n            !!b &&\n            a.lineNumber === b.lineNumber &&\n            a.column === b.column);\n    }\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be false.\n     */\n    isBefore(other) {\n        return Position.isBefore(this, other);\n    }\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be false.\n     */\n    static isBefore(a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column < b.column;\n    }\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be true.\n     */\n    isBeforeOrEqual(other) {\n        return Position.isBeforeOrEqual(this, other);\n    }\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be true.\n     */\n    static isBeforeOrEqual(a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column <= b.column;\n    }\n    /**\n     * A function that compares positions, useful for sorting\n     */\n    static compare(a, b) {\n        let aLineNumber = a.lineNumber | 0;\n        let bLineNumber = b.lineNumber | 0;\n        if (aLineNumber === bLineNumber) {\n            let aColumn = a.column | 0;\n            let bColumn = b.column | 0;\n            return aColumn - bColumn;\n        }\n        return aLineNumber - bLineNumber;\n    }\n    /**\n     * Clone this position.\n     */\n    clone() {\n        return new Position(this.lineNumber, this.column);\n    }\n    /**\n     * Convert to a human-readable representation.\n     */\n    toString() {\n        return '(' + this.lineNumber + ',' + this.column + ')';\n    }\n    // ---\n    /**\n     * Create a `Position` from an `IPosition`.\n     */\n    static lift(pos) {\n        return new Position(pos.lineNumber, pos.column);\n    }\n    /**\n     * Test if `obj` is an `IPosition`.\n     */\n    static isIPosition(obj) {\n        return (obj\n            && (typeof obj.lineNumber === 'number')\n            && (typeof obj.column === 'number'));\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\nexport class Range {\n    constructor(startLineNumber, startColumn, endLineNumber, endColumn) {\n        if ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n            this.startLineNumber = endLineNumber;\n            this.startColumn = endColumn;\n            this.endLineNumber = startLineNumber;\n            this.endColumn = startColumn;\n        }\n        else {\n            this.startLineNumber = startLineNumber;\n            this.startColumn = startColumn;\n            this.endLineNumber = endLineNumber;\n            this.endColumn = endColumn;\n        }\n    }\n    /**\n     * Test if this range is empty.\n     */\n    isEmpty() {\n        return Range.isEmpty(this);\n    }\n    /**\n     * Test if `range` is empty.\n     */\n    static isEmpty(range) {\n        return (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n    }\n    /**\n     * Test if position is in this range. If the position is at the edges, will return true.\n     */\n    containsPosition(position) {\n        return Range.containsPosition(this, position);\n    }\n    /**\n     * Test if `position` is in `range`. If the position is at the edges, will return true.\n     */\n    static containsPosition(range, position) {\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n            return false;\n        }\n        if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Test if range is in this range. If the range is equal to this range, will return true.\n     */\n    containsRange(range) {\n        return Range.containsRange(this, range);\n    }\n    /**\n     * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n     */\n    static containsRange(range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Test if `range` is strictly in this range. `range` must start after and end before this range for the result to be true.\n     */\n    strictContainsRange(range) {\n        return Range.strictContainsRange(this, range);\n    }\n    /**\n     * Test if `otherRange` is strictly in `range` (must start after, and end before). If the ranges are equal, will return false.\n     */\n    static strictContainsRange(range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn <= range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn >= range.endColumn) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    plusRange(range) {\n        return Range.plusRange(this, range);\n    }\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    static plusRange(a, b) {\n        let startLineNumber;\n        let startColumn;\n        let endLineNumber;\n        let endColumn;\n        if (b.startLineNumber < a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = b.startColumn;\n        }\n        else if (b.startLineNumber === a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = Math.min(b.startColumn, a.startColumn);\n        }\n        else {\n            startLineNumber = a.startLineNumber;\n            startColumn = a.startColumn;\n        }\n        if (b.endLineNumber > a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = b.endColumn;\n        }\n        else if (b.endLineNumber === a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = Math.max(b.endColumn, a.endColumn);\n        }\n        else {\n            endLineNumber = a.endLineNumber;\n            endColumn = a.endColumn;\n        }\n        return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n    }\n    /**\n     * A intersection of the two ranges.\n     */\n    intersectRanges(range) {\n        return Range.intersectRanges(this, range);\n    }\n    /**\n     * A intersection of the two ranges.\n     */\n    static intersectRanges(a, b) {\n        let resultStartLineNumber = a.startLineNumber;\n        let resultStartColumn = a.startColumn;\n        let resultEndLineNumber = a.endLineNumber;\n        let resultEndColumn = a.endColumn;\n        let otherStartLineNumber = b.startLineNumber;\n        let otherStartColumn = b.startColumn;\n        let otherEndLineNumber = b.endLineNumber;\n        let otherEndColumn = b.endColumn;\n        if (resultStartLineNumber < otherStartLineNumber) {\n            resultStartLineNumber = otherStartLineNumber;\n            resultStartColumn = otherStartColumn;\n        }\n        else if (resultStartLineNumber === otherStartLineNumber) {\n            resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n        }\n        if (resultEndLineNumber > otherEndLineNumber) {\n            resultEndLineNumber = otherEndLineNumber;\n            resultEndColumn = otherEndColumn;\n        }\n        else if (resultEndLineNumber === otherEndLineNumber) {\n            resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n        }\n        // Check if selection is now empty\n        if (resultStartLineNumber > resultEndLineNumber) {\n            return null;\n        }\n        if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n            return null;\n        }\n        return new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n    }\n    /**\n     * Test if this range equals other.\n     */\n    equalsRange(other) {\n        return Range.equalsRange(this, other);\n    }\n    /**\n     * Test if range `a` equals `b`.\n     */\n    static equalsRange(a, b) {\n        return (!!a &&\n            !!b &&\n            a.startLineNumber === b.startLineNumber &&\n            a.startColumn === b.startColumn &&\n            a.endLineNumber === b.endLineNumber &&\n            a.endColumn === b.endColumn);\n    }\n    /**\n     * Return the end position (which will be after or equal to the start position)\n     */\n    getEndPosition() {\n        return Range.getEndPosition(this);\n    }\n    /**\n     * Return the end position (which will be after or equal to the start position)\n     */\n    static getEndPosition(range) {\n        return new Position(range.endLineNumber, range.endColumn);\n    }\n    /**\n     * Return the start position (which will be before or equal to the end position)\n     */\n    getStartPosition() {\n        return Range.getStartPosition(this);\n    }\n    /**\n     * Return the start position (which will be before or equal to the end position)\n     */\n    static getStartPosition(range) {\n        return new Position(range.startLineNumber, range.startColumn);\n    }\n    /**\n     * Transform to a user presentable string representation.\n     */\n    toString() {\n        return '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n    }\n    /**\n     * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n     */\n    setEndPosition(endLineNumber, endColumn) {\n        return new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n    }\n    /**\n     * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n     */\n    setStartPosition(startLineNumber, startColumn) {\n        return new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n    }\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    collapseToStart() {\n        return Range.collapseToStart(this);\n    }\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    static collapseToStart(range) {\n        return new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n    }\n    // ---\n    static fromPositions(start, end = start) {\n        return new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n    }\n    static lift(range) {\n        if (!range) {\n            return null;\n        }\n        return new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n    }\n    /**\n     * Test if `obj` is an `IRange`.\n     */\n    static isIRange(obj) {\n        return (obj\n            && (typeof obj.startLineNumber === 'number')\n            && (typeof obj.startColumn === 'number')\n            && (typeof obj.endLineNumber === 'number')\n            && (typeof obj.endColumn === 'number'));\n    }\n    /**\n     * Test if the two ranges are touching in any way.\n     */\n    static areIntersectingOrTouching(a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    }\n    /**\n     * Test if the two ranges are intersecting. If the ranges are touching it returns true.\n     */\n    static areIntersecting(a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    }\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the startPosition and then on the endPosition\n     */\n    static compareRangesUsingStarts(a, b) {\n        if (a && b) {\n            const aStartLineNumber = a.startLineNumber | 0;\n            const bStartLineNumber = b.startLineNumber | 0;\n            if (aStartLineNumber === bStartLineNumber) {\n                const aStartColumn = a.startColumn | 0;\n                const bStartColumn = b.startColumn | 0;\n                if (aStartColumn === bStartColumn) {\n                    const aEndLineNumber = a.endLineNumber | 0;\n                    const bEndLineNumber = b.endLineNumber | 0;\n                    if (aEndLineNumber === bEndLineNumber) {\n                        const aEndColumn = a.endColumn | 0;\n                        const bEndColumn = b.endColumn | 0;\n                        return aEndColumn - bEndColumn;\n                    }\n                    return aEndLineNumber - bEndLineNumber;\n                }\n                return aStartColumn - bStartColumn;\n            }\n            return aStartLineNumber - bStartLineNumber;\n        }\n        const aExists = (a ? 1 : 0);\n        const bExists = (b ? 1 : 0);\n        return aExists - bExists;\n    }\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the endPosition and then on the startPosition\n     */\n    static compareRangesUsingEnds(a, b) {\n        if (a.endLineNumber === b.endLineNumber) {\n            if (a.endColumn === b.endColumn) {\n                if (a.startLineNumber === b.startLineNumber) {\n                    return a.startColumn - b.startColumn;\n                }\n                return a.startLineNumber - b.startLineNumber;\n            }\n            return a.endColumn - b.endColumn;\n        }\n        return a.endLineNumber - b.endLineNumber;\n    }\n    /**\n     * Test if the range spans multiple lines.\n     */\n    static spansMultipleLines(range) {\n        return range.endLineNumber > range.startLineNumber;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LcsDiff } from '../../../base/common/diff/diff.js';\nimport * as strings from '../../../base/common/strings.js';\nconst MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\nfunction computeDiff(originalSequence, modifiedSequence, continueProcessingPredicate, pretty) {\n    const diffAlgo = new LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate);\n    return diffAlgo.ComputeDiff(pretty);\n}\nclass LineSequence {\n    constructor(lines) {\n        const startColumns = [];\n        const endColumns = [];\n        for (let i = 0, length = lines.length; i < length; i++) {\n            startColumns[i] = getFirstNonBlankColumn(lines[i], 1);\n            endColumns[i] = getLastNonBlankColumn(lines[i], 1);\n        }\n        this.lines = lines;\n        this._startColumns = startColumns;\n        this._endColumns = endColumns;\n    }\n    getElements() {\n        const elements = [];\n        for (let i = 0, len = this.lines.length; i < len; i++) {\n            elements[i] = this.lines[i].substring(this._startColumns[i] - 1, this._endColumns[i] - 1);\n        }\n        return elements;\n    }\n    getStrictElement(index) {\n        return this.lines[index];\n    }\n    getStartLineNumber(i) {\n        return i + 1;\n    }\n    getEndLineNumber(i) {\n        return i + 1;\n    }\n    createCharSequence(shouldIgnoreTrimWhitespace, startIndex, endIndex) {\n        const charCodes = [];\n        const lineNumbers = [];\n        const columns = [];\n        let len = 0;\n        for (let index = startIndex; index <= endIndex; index++) {\n            const lineContent = this.lines[index];\n            const startColumn = (shouldIgnoreTrimWhitespace ? this._startColumns[index] : 1);\n            const endColumn = (shouldIgnoreTrimWhitespace ? this._endColumns[index] : lineContent.length + 1);\n            for (let col = startColumn; col < endColumn; col++) {\n                charCodes[len] = lineContent.charCodeAt(col - 1);\n                lineNumbers[len] = index + 1;\n                columns[len] = col;\n                len++;\n            }\n        }\n        return new CharSequence(charCodes, lineNumbers, columns);\n    }\n}\nclass CharSequence {\n    constructor(charCodes, lineNumbers, columns) {\n        this._charCodes = charCodes;\n        this._lineNumbers = lineNumbers;\n        this._columns = columns;\n    }\n    getElements() {\n        return this._charCodes;\n    }\n    getStartLineNumber(i) {\n        return this._lineNumbers[i];\n    }\n    getStartColumn(i) {\n        return this._columns[i];\n    }\n    getEndLineNumber(i) {\n        return this._lineNumbers[i];\n    }\n    getEndColumn(i) {\n        return this._columns[i] + 1;\n    }\n}\nclass CharChange {\n    constructor(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalStartColumn = originalStartColumn;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.originalEndColumn = originalEndColumn;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedStartColumn = modifiedStartColumn;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.modifiedEndColumn = modifiedEndColumn;\n    }\n    static createFromDiffChange(diffChange, originalCharSequence, modifiedCharSequence) {\n        let originalStartLineNumber;\n        let originalStartColumn;\n        let originalEndLineNumber;\n        let originalEndColumn;\n        let modifiedStartLineNumber;\n        let modifiedStartColumn;\n        let modifiedEndLineNumber;\n        let modifiedEndColumn;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = 0;\n            originalStartColumn = 0;\n            originalEndLineNumber = 0;\n            originalEndColumn = 0;\n        }\n        else {\n            originalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\n            originalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\n            originalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n            originalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = 0;\n            modifiedStartColumn = 0;\n            modifiedEndLineNumber = 0;\n            modifiedEndColumn = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            modifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        return new CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn);\n    }\n}\nfunction postProcessCharChanges(rawChanges) {\n    if (rawChanges.length <= 1) {\n        return rawChanges;\n    }\n    const result = [rawChanges[0]];\n    let prevChange = result[0];\n    for (let i = 1, len = rawChanges.length; i < len; i++) {\n        const currChange = rawChanges[i];\n        const originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\n        const modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\n        // Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\n        const matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\n        if (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\n            // Merge the current change into the previous one\n            prevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\n            prevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\n        }\n        else {\n            // Add the current change\n            result.push(currChange);\n            prevChange = currChange;\n        }\n    }\n    return result;\n}\nclass LineChange {\n    constructor(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.charChanges = charChanges;\n    }\n    static createFromDiffResult(shouldIgnoreTrimWhitespace, diffChange, originalLineSequence, modifiedLineSequence, continueCharDiff, shouldComputeCharChanges, shouldPostProcessCharChanges) {\n        let originalStartLineNumber;\n        let originalEndLineNumber;\n        let modifiedStartLineNumber;\n        let modifiedEndLineNumber;\n        let charChanges = undefined;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\n            originalEndLineNumber = 0;\n        }\n        else {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\n            originalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\n            modifiedEndLineNumber = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        if (shouldComputeCharChanges && diffChange.originalLength > 0 && diffChange.originalLength < 20 && diffChange.modifiedLength > 0 && diffChange.modifiedLength < 20 && continueCharDiff()) {\n            // Compute character changes for diff chunks of at most 20 lines...\n            const originalCharSequence = originalLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\n            const modifiedCharSequence = modifiedLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            let rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueCharDiff, true).changes;\n            if (shouldPostProcessCharChanges) {\n                rawChanges = postProcessCharChanges(rawChanges);\n            }\n            charChanges = [];\n            for (let i = 0, length = rawChanges.length; i < length; i++) {\n                charChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\n            }\n        }\n        return new LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges);\n    }\n}\nexport class DiffComputer {\n    constructor(originalLines, modifiedLines, opts) {\n        this.shouldComputeCharChanges = opts.shouldComputeCharChanges;\n        this.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\n        this.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\n        this.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\n        this.originalLines = originalLines;\n        this.modifiedLines = modifiedLines;\n        this.original = new LineSequence(originalLines);\n        this.modified = new LineSequence(modifiedLines);\n        this.continueLineDiff = createContinueProcessingPredicate(opts.maxComputationTime);\n        this.continueCharDiff = createContinueProcessingPredicate(opts.maxComputationTime === 0 ? 0 : Math.min(opts.maxComputationTime, 5000)); // never run after 5s for character changes...\n    }\n    computeDiff() {\n        if (this.original.lines.length === 1 && this.original.lines[0].length === 0) {\n            // empty original => fast path\n            if (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\n                return {\n                    quitEarly: false,\n                    changes: []\n                };\n            }\n            return {\n                quitEarly: false,\n                changes: [{\n                        originalStartLineNumber: 1,\n                        originalEndLineNumber: 1,\n                        modifiedStartLineNumber: 1,\n                        modifiedEndLineNumber: this.modified.lines.length,\n                        charChanges: [{\n                                modifiedEndColumn: 0,\n                                modifiedEndLineNumber: 0,\n                                modifiedStartColumn: 0,\n                                modifiedStartLineNumber: 0,\n                                originalEndColumn: 0,\n                                originalEndLineNumber: 0,\n                                originalStartColumn: 0,\n                                originalStartLineNumber: 0\n                            }]\n                    }]\n            };\n        }\n        if (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\n            // empty modified => fast path\n            return {\n                quitEarly: false,\n                changes: [{\n                        originalStartLineNumber: 1,\n                        originalEndLineNumber: this.original.lines.length,\n                        modifiedStartLineNumber: 1,\n                        modifiedEndLineNumber: 1,\n                        charChanges: [{\n                                modifiedEndColumn: 0,\n                                modifiedEndLineNumber: 0,\n                                modifiedStartColumn: 0,\n                                modifiedStartLineNumber: 0,\n                                originalEndColumn: 0,\n                                originalEndLineNumber: 0,\n                                originalStartColumn: 0,\n                                originalStartLineNumber: 0\n                            }]\n                    }]\n            };\n        }\n        const diffResult = computeDiff(this.original, this.modified, this.continueLineDiff, this.shouldMakePrettyDiff);\n        const rawChanges = diffResult.changes;\n        const quitEarly = diffResult.quitEarly;\n        // The diff is always computed with ignoring trim whitespace\n        // This ensures we get the prettiest diff\n        if (this.shouldIgnoreTrimWhitespace) {\n            const lineChanges = [];\n            for (let i = 0, length = rawChanges.length; i < length; i++) {\n                lineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, rawChanges[i], this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n            }\n            return {\n                quitEarly: quitEarly,\n                changes: lineChanges\n            };\n        }\n        // Need to post-process and introduce changes where the trim whitespace is different\n        // Note that we are looping starting at -1 to also cover the lines before the first change\n        const result = [];\n        let originalLineIndex = 0;\n        let modifiedLineIndex = 0;\n        for (let i = -1 /* !!!! */, len = rawChanges.length; i < len; i++) {\n            const nextChange = (i + 1 < len ? rawChanges[i + 1] : null);\n            const originalStop = (nextChange ? nextChange.originalStart : this.originalLines.length);\n            const modifiedStop = (nextChange ? nextChange.modifiedStart : this.modifiedLines.length);\n            while (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\n                const originalLine = this.originalLines[originalLineIndex];\n                const modifiedLine = this.modifiedLines[modifiedLineIndex];\n                if (originalLine !== modifiedLine) {\n                    // These lines differ only in trim whitespace\n                    // Check the leading whitespace\n                    {\n                        let originalStartColumn = getFirstNonBlankColumn(originalLine, 1);\n                        let modifiedStartColumn = getFirstNonBlankColumn(modifiedLine, 1);\n                        while (originalStartColumn > 1 && modifiedStartColumn > 1) {\n                            const originalChar = originalLine.charCodeAt(originalStartColumn - 2);\n                            const modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalStartColumn--;\n                            modifiedStartColumn--;\n                        }\n                        if (originalStartColumn > 1 || modifiedStartColumn > 1) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, 1, originalStartColumn, modifiedLineIndex + 1, 1, modifiedStartColumn);\n                        }\n                    }\n                    // Check the trailing whitespace\n                    {\n                        let originalEndColumn = getLastNonBlankColumn(originalLine, 1);\n                        let modifiedEndColumn = getLastNonBlankColumn(modifiedLine, 1);\n                        const originalMaxColumn = originalLine.length + 1;\n                        const modifiedMaxColumn = modifiedLine.length + 1;\n                        while (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\n                            const originalChar = originalLine.charCodeAt(originalEndColumn - 1);\n                            const modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalEndColumn++;\n                            modifiedEndColumn++;\n                        }\n                        if (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, originalEndColumn, originalMaxColumn, modifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn);\n                        }\n                    }\n                }\n                originalLineIndex++;\n                modifiedLineIndex++;\n            }\n            if (nextChange) {\n                // Emit the actual change\n                result.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, nextChange, this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n                originalLineIndex += nextChange.originalLength;\n                modifiedLineIndex += nextChange.modifiedLength;\n            }\n        }\n        return {\n            quitEarly: quitEarly,\n            changes: result\n        };\n    }\n    _pushTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        if (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\n            // Merged into previous\n            return;\n        }\n        let charChanges = undefined;\n        if (this.shouldComputeCharChanges) {\n            charChanges = [new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn)];\n        }\n        result.push(new LineChange(originalLineNumber, originalLineNumber, modifiedLineNumber, modifiedLineNumber, charChanges));\n    }\n    _mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        const len = result.length;\n        if (len === 0) {\n            return false;\n        }\n        const prevChange = result[len - 1];\n        if (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\n            // Don't merge with inserts/deletes\n            return false;\n        }\n        if (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\n            prevChange.originalEndLineNumber = originalLineNumber;\n            prevChange.modifiedEndLineNumber = modifiedLineNumber;\n            if (this.shouldComputeCharChanges && prevChange.charChanges) {\n                prevChange.charChanges.push(new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn));\n            }\n            return true;\n        }\n        return false;\n    }\n}\nfunction getFirstNonBlankColumn(txt, defaultValue) {\n    const r = strings.firstNonWhitespaceIndex(txt);\n    if (r === -1) {\n        return defaultValue;\n    }\n    return r + 1;\n}\nfunction getLastNonBlankColumn(txt, defaultValue) {\n    const r = strings.lastNonWhitespaceIndex(txt);\n    if (r === -1) {\n        return defaultValue;\n    }\n    return r + 2;\n}\nfunction createContinueProcessingPredicate(maximumRuntime) {\n    if (maximumRuntime === 0) {\n        return () => true;\n    }\n    const startTime = Date.now();\n    return () => {\n        return Date.now() - startTime < maximumRuntime;\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function toUint8(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 255 /* MAX_UINT_8 */) {\n        return 255 /* MAX_UINT_8 */;\n    }\n    return v | 0;\n}\nexport function toUint32(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 4294967295 /* MAX_UINT_32 */) {\n        return 4294967295 /* MAX_UINT_32 */;\n    }\n    return v | 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { toUint32 } from '../../../base/common/uint.js';\nexport class PrefixSumIndexOfResult {\n    constructor(index, remainder) {\n        this._prefixSumIndexOfResultBrand = undefined;\n        this.index = index;\n        this.remainder = remainder;\n    }\n}\nexport class PrefixSumComputer {\n    constructor(values) {\n        this.values = values;\n        this.prefixSum = new Uint32Array(values.length);\n        this.prefixSumValidIndex = new Int32Array(1);\n        this.prefixSumValidIndex[0] = -1;\n    }\n    insertValues(insertIndex, insertValues) {\n        insertIndex = toUint32(insertIndex);\n        const oldValues = this.values;\n        const oldPrefixSum = this.prefixSum;\n        const insertValuesLen = insertValues.length;\n        if (insertValuesLen === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length + insertValuesLen);\n        this.values.set(oldValues.subarray(0, insertIndex), 0);\n        this.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n        this.values.set(insertValues, insertIndex);\n        if (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = insertIndex - 1;\n        }\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    }\n    changeValue(index, value) {\n        index = toUint32(index);\n        value = toUint32(value);\n        if (this.values[index] === value) {\n            return false;\n        }\n        this.values[index] = value;\n        if (index - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = index - 1;\n        }\n        return true;\n    }\n    removeValues(startIndex, count) {\n        startIndex = toUint32(startIndex);\n        count = toUint32(count);\n        const oldValues = this.values;\n        const oldPrefixSum = this.prefixSum;\n        if (startIndex >= oldValues.length) {\n            return false;\n        }\n        let maxCount = oldValues.length - startIndex;\n        if (count >= maxCount) {\n            count = maxCount;\n        }\n        if (count === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length - count);\n        this.values.set(oldValues.subarray(0, startIndex), 0);\n        this.values.set(oldValues.subarray(startIndex + count), startIndex);\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (startIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = startIndex - 1;\n        }\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    }\n    getTotalSum() {\n        if (this.values.length === 0) {\n            return 0;\n        }\n        return this._getPrefixSum(this.values.length - 1);\n    }\n    getPrefixSum(index) {\n        if (index < 0) {\n            return 0;\n        }\n        index = toUint32(index);\n        return this._getPrefixSum(index);\n    }\n    _getPrefixSum(index) {\n        if (index <= this.prefixSumValidIndex[0]) {\n            return this.prefixSum[index];\n        }\n        let startIndex = this.prefixSumValidIndex[0] + 1;\n        if (startIndex === 0) {\n            this.prefixSum[0] = this.values[0];\n            startIndex++;\n        }\n        if (index >= this.values.length) {\n            index = this.values.length - 1;\n        }\n        for (let i = startIndex; i <= index; i++) {\n            this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n        }\n        this.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n        return this.prefixSum[index];\n    }\n    getIndexOf(sum) {\n        sum = Math.floor(sum); //@perf\n        // Compute all sums (to get a fully valid prefixSum)\n        this.getTotalSum();\n        let low = 0;\n        let high = this.values.length - 1;\n        let mid = 0;\n        let midStop = 0;\n        let midStart = 0;\n        while (low <= high) {\n            mid = low + ((high - low) / 2) | 0;\n            midStop = this.prefixSum[mid];\n            midStart = midStop - this.values[mid];\n            if (sum < midStart) {\n                high = mid - 1;\n            }\n            else if (sum >= midStop) {\n                low = mid + 1;\n            }\n            else {\n                break;\n            }\n        }\n        return new PrefixSumIndexOfResult(mid, sum - midStart);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { splitLines } from '../../../base/common/strings.js';\nimport { Position } from '../core/position.js';\nimport { PrefixSumComputer } from '../viewModel/prefixSumComputer.js';\nexport class MirrorTextModel {\n    constructor(uri, lines, eol, versionId) {\n        this._uri = uri;\n        this._lines = lines;\n        this._eol = eol;\n        this._versionId = versionId;\n        this._lineStarts = null;\n        this._cachedTextValue = null;\n    }\n    dispose() {\n        this._lines.length = 0;\n    }\n    get version() {\n        return this._versionId;\n    }\n    getText() {\n        if (this._cachedTextValue === null) {\n            this._cachedTextValue = this._lines.join(this._eol);\n        }\n        return this._cachedTextValue;\n    }\n    onEvents(e) {\n        if (e.eol && e.eol !== this._eol) {\n            this._eol = e.eol;\n            this._lineStarts = null;\n        }\n        // Update my lines\n        const changes = e.changes;\n        for (const change of changes) {\n            this._acceptDeleteRange(change.range);\n            this._acceptInsertText(new Position(change.range.startLineNumber, change.range.startColumn), change.text);\n        }\n        this._versionId = e.versionId;\n        this._cachedTextValue = null;\n    }\n    _ensureLineStarts() {\n        if (!this._lineStarts) {\n            const eolLength = this._eol.length;\n            const linesLength = this._lines.length;\n            const lineStartValues = new Uint32Array(linesLength);\n            for (let i = 0; i < linesLength; i++) {\n                lineStartValues[i] = this._lines[i].length + eolLength;\n            }\n            this._lineStarts = new PrefixSumComputer(lineStartValues);\n        }\n    }\n    /**\n     * All changes to a line's text go through this method\n     */\n    _setLineText(lineIndex, newValue) {\n        this._lines[lineIndex] = newValue;\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n        }\n    }\n    _acceptDeleteRange(range) {\n        if (range.startLineNumber === range.endLineNumber) {\n            if (range.startColumn === range.endColumn) {\n                // Nothing to delete\n                return;\n            }\n            // Delete text on the affected line\n            this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n                + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\n            return;\n        }\n        // Take remaining text on last line and append it to remaining text on first line\n        this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n            + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\n        // Delete middle lines\n        this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        }\n    }\n    _acceptInsertText(position, insertText) {\n        if (insertText.length === 0) {\n            // Nothing to insert\n            return;\n        }\n        let insertLines = splitLines(insertText);\n        if (insertLines.length === 1) {\n            // Inserting text on one line\n            this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n                + insertLines[0]\n                + this._lines[position.lineNumber - 1].substring(position.column - 1));\n            return;\n        }\n        // Append overflowing text from first line to the end of text to insert\n        insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n        // Delete overflowing text from first line and insert text on first line\n        this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n            + insertLines[0]);\n        // Insert new lines & store lengths\n        let newLengths = new Uint32Array(insertLines.length - 1);\n        for (let i = 1; i < insertLines.length; i++) {\n            this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n            newLengths[i - 1] = insertLines[i].length + this._eol.length;\n        }\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.insertValues(position.lineNumber, newLengths);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport const USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n/**\n * Create a word definition regular expression based on default word separators.\n * Optionally provide allowed separators that should be included in words.\n *\n * The default would look like this:\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n */\nfunction createWordRegExp(allowInWords = '') {\n    let source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n    for (const sep of USUAL_WORD_SEPARATORS) {\n        if (allowInWords.indexOf(sep) >= 0) {\n            continue;\n        }\n        source += '\\\\' + sep;\n    }\n    source += '\\\\s]+)';\n    return new RegExp(source, 'g');\n}\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\nexport const DEFAULT_WORD_REGEXP = createWordRegExp();\nexport function ensureValidWordDefinition(wordDefinition) {\n    let result = DEFAULT_WORD_REGEXP;\n    if (wordDefinition && (wordDefinition instanceof RegExp)) {\n        if (!wordDefinition.global) {\n            let flags = 'g';\n            if (wordDefinition.ignoreCase) {\n                flags += 'i';\n            }\n            if (wordDefinition.multiline) {\n                flags += 'm';\n            }\n            if (wordDefinition.unicode) {\n                flags += 'u';\n            }\n            result = new RegExp(wordDefinition.source, flags);\n        }\n        else {\n            result = wordDefinition;\n        }\n    }\n    result.lastIndex = 0;\n    return result;\n}\nconst _defaultConfig = {\n    maxLen: 1000,\n    windowSize: 15,\n    timeBudget: 150\n};\nexport function getWordAtText(column, wordDefinition, text, textOffset, config = _defaultConfig) {\n    if (text.length > config.maxLen) {\n        // don't throw strings that long at the regexp\n        // but use a sub-string in which a word must occur\n        let start = column - config.maxLen / 2;\n        if (start < 0) {\n            start = 0;\n        }\n        else {\n            textOffset += start;\n        }\n        text = text.substring(start, column + config.maxLen / 2);\n        return getWordAtText(column, wordDefinition, text, textOffset, config);\n    }\n    const t1 = Date.now();\n    const pos = column - 1 - textOffset;\n    let prevRegexIndex = -1;\n    let match = null;\n    for (let i = 1;; i++) {\n        // check time budget\n        if (Date.now() - t1 >= config.timeBudget) {\n            break;\n        }\n        // reset the index at which the regexp should start matching, also know where it\n        // should stop so that subsequent search don't repeat previous searches\n        const regexIndex = pos - config.windowSize * i;\n        wordDefinition.lastIndex = Math.max(0, regexIndex);\n        const thisMatch = _findRegexMatchEnclosingPosition(wordDefinition, text, pos, prevRegexIndex);\n        if (!thisMatch && match) {\n            // stop: we have something\n            break;\n        }\n        match = thisMatch;\n        // stop: searched at start\n        if (regexIndex <= 0) {\n            break;\n        }\n        prevRegexIndex = regexIndex;\n    }\n    if (match) {\n        let result = {\n            word: match[0],\n            startColumn: textOffset + 1 + match.index,\n            endColumn: textOffset + 1 + match.index + match[0].length\n        };\n        wordDefinition.lastIndex = 0;\n        return result;\n    }\n    return null;\n}\nfunction _findRegexMatchEnclosingPosition(wordDefinition, text, pos, stopPos) {\n    let match;\n    while (match = wordDefinition.exec(text)) {\n        const matchIndex = match.index || 0;\n        if (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\n            return match;\n        }\n        else if (stopPos > 0 && matchIndex > stopPos) {\n            return null;\n        }\n    }\n    return null;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { toUint8 } from '../../../base/common/uint.js';\n/**\n * A fast character classifier that uses a compact array for ASCII values.\n */\nexport class CharacterClassifier {\n    constructor(_defaultValue) {\n        let defaultValue = toUint8(_defaultValue);\n        this._defaultValue = defaultValue;\n        this._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n        this._map = new Map();\n    }\n    static _createAsciiMap(defaultValue) {\n        let asciiMap = new Uint8Array(256);\n        for (let i = 0; i < 256; i++) {\n            asciiMap[i] = defaultValue;\n        }\n        return asciiMap;\n    }\n    set(charCode, _value) {\n        let value = toUint8(_value);\n        if (charCode >= 0 && charCode < 256) {\n            this._asciiMap[charCode] = value;\n        }\n        else {\n            this._map.set(charCode, value);\n        }\n    }\n    get(charCode) {\n        if (charCode >= 0 && charCode < 256) {\n            return this._asciiMap[charCode];\n        }\n        else {\n            return (this._map.get(charCode) || this._defaultValue);\n        }\n    }\n}\nexport class CharacterSet {\n    constructor() {\n        this._actual = new CharacterClassifier(0 /* False */);\n    }\n    add(charCode) {\n        this._actual.set(charCode, 1 /* True */);\n    }\n    has(charCode) {\n        return (this._actual.get(charCode) === 1 /* True */);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CharacterClassifier } from '../core/characterClassifier.js';\nexport class Uint8Matrix {\n    constructor(rows, cols, defaultValue) {\n        const data = new Uint8Array(rows * cols);\n        for (let i = 0, len = rows * cols; i < len; i++) {\n            data[i] = defaultValue;\n        }\n        this._data = data;\n        this.rows = rows;\n        this.cols = cols;\n    }\n    get(row, col) {\n        return this._data[row * this.cols + col];\n    }\n    set(row, col, value) {\n        this._data[row * this.cols + col] = value;\n    }\n}\nexport class StateMachine {\n    constructor(edges) {\n        let maxCharCode = 0;\n        let maxState = 0 /* Invalid */;\n        for (let i = 0, len = edges.length; i < len; i++) {\n            let [from, chCode, to] = edges[i];\n            if (chCode > maxCharCode) {\n                maxCharCode = chCode;\n            }\n            if (from > maxState) {\n                maxState = from;\n            }\n            if (to > maxState) {\n                maxState = to;\n            }\n        }\n        maxCharCode++;\n        maxState++;\n        let states = new Uint8Matrix(maxState, maxCharCode, 0 /* Invalid */);\n        for (let i = 0, len = edges.length; i < len; i++) {\n            let [from, chCode, to] = edges[i];\n            states.set(from, chCode, to);\n        }\n        this._states = states;\n        this._maxCharCode = maxCharCode;\n    }\n    nextState(currentState, chCode) {\n        if (chCode < 0 || chCode >= this._maxCharCode) {\n            return 0 /* Invalid */;\n        }\n        return this._states.get(currentState, chCode);\n    }\n}\n// State machine for http:// or https:// or file://\nlet _stateMachine = null;\nfunction getStateMachine() {\n    if (_stateMachine === null) {\n        _stateMachine = new StateMachine([\n            [1 /* Start */, 104 /* h */, 2 /* H */],\n            [1 /* Start */, 72 /* H */, 2 /* H */],\n            [1 /* Start */, 102 /* f */, 6 /* F */],\n            [1 /* Start */, 70 /* F */, 6 /* F */],\n            [2 /* H */, 116 /* t */, 3 /* HT */],\n            [2 /* H */, 84 /* T */, 3 /* HT */],\n            [3 /* HT */, 116 /* t */, 4 /* HTT */],\n            [3 /* HT */, 84 /* T */, 4 /* HTT */],\n            [4 /* HTT */, 112 /* p */, 5 /* HTTP */],\n            [4 /* HTT */, 80 /* P */, 5 /* HTTP */],\n            [5 /* HTTP */, 115 /* s */, 9 /* BeforeColon */],\n            [5 /* HTTP */, 83 /* S */, 9 /* BeforeColon */],\n            [5 /* HTTP */, 58 /* Colon */, 10 /* AfterColon */],\n            [6 /* F */, 105 /* i */, 7 /* FI */],\n            [6 /* F */, 73 /* I */, 7 /* FI */],\n            [7 /* FI */, 108 /* l */, 8 /* FIL */],\n            [7 /* FI */, 76 /* L */, 8 /* FIL */],\n            [8 /* FIL */, 101 /* e */, 9 /* BeforeColon */],\n            [8 /* FIL */, 69 /* E */, 9 /* BeforeColon */],\n            [9 /* BeforeColon */, 58 /* Colon */, 10 /* AfterColon */],\n            [10 /* AfterColon */, 47 /* Slash */, 11 /* AlmostThere */],\n            [11 /* AlmostThere */, 47 /* Slash */, 12 /* End */],\n        ]);\n    }\n    return _stateMachine;\n}\nlet _classifier = null;\nfunction getClassifier() {\n    if (_classifier === null) {\n        _classifier = new CharacterClassifier(0 /* None */);\n        const FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；‘〈「『〔（［｛｢｣｝］）〕』」〉’｀～…';\n        for (let i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n            _classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), 1 /* ForceTermination */);\n        }\n        const CANNOT_END_WITH_CHARACTERS = '.,;';\n        for (let i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n            _classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), 2 /* CannotEndIn */);\n        }\n    }\n    return _classifier;\n}\nexport class LinkComputer {\n    static _createLink(classifier, line, lineNumber, linkBeginIndex, linkEndIndex) {\n        // Do not allow to end link in certain characters...\n        let lastIncludedCharIndex = linkEndIndex - 1;\n        do {\n            const chCode = line.charCodeAt(lastIncludedCharIndex);\n            const chClass = classifier.get(chCode);\n            if (chClass !== 2 /* CannotEndIn */) {\n                break;\n            }\n            lastIncludedCharIndex--;\n        } while (lastIncludedCharIndex > linkBeginIndex);\n        // Handle links enclosed in parens, square brackets and curlys.\n        if (linkBeginIndex > 0) {\n            const charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n            const lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n            if ((charCodeBeforeLink === 40 /* OpenParen */ && lastCharCodeInLink === 41 /* CloseParen */)\n                || (charCodeBeforeLink === 91 /* OpenSquareBracket */ && lastCharCodeInLink === 93 /* CloseSquareBracket */)\n                || (charCodeBeforeLink === 123 /* OpenCurlyBrace */ && lastCharCodeInLink === 125 /* CloseCurlyBrace */)) {\n                // Do not end in ) if ( is before the link start\n                // Do not end in ] if [ is before the link start\n                // Do not end in } if { is before the link start\n                lastIncludedCharIndex--;\n            }\n        }\n        return {\n            range: {\n                startLineNumber: lineNumber,\n                startColumn: linkBeginIndex + 1,\n                endLineNumber: lineNumber,\n                endColumn: lastIncludedCharIndex + 2\n            },\n            url: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n        };\n    }\n    static computeLinks(model, stateMachine = getStateMachine()) {\n        const classifier = getClassifier();\n        let result = [];\n        for (let i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n            const line = model.getLineContent(i);\n            const len = line.length;\n            let j = 0;\n            let linkBeginIndex = 0;\n            let linkBeginChCode = 0;\n            let state = 1 /* Start */;\n            let hasOpenParens = false;\n            let hasOpenSquareBracket = false;\n            let inSquareBrackets = false;\n            let hasOpenCurlyBracket = false;\n            while (j < len) {\n                let resetStateMachine = false;\n                const chCode = line.charCodeAt(j);\n                if (state === 13 /* Accept */) {\n                    let chClass;\n                    switch (chCode) {\n                        case 40 /* OpenParen */:\n                            hasOpenParens = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 41 /* CloseParen */:\n                            chClass = (hasOpenParens ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        case 91 /* OpenSquareBracket */:\n                            inSquareBrackets = true;\n                            hasOpenSquareBracket = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 93 /* CloseSquareBracket */:\n                            inSquareBrackets = false;\n                            chClass = (hasOpenSquareBracket ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        case 123 /* OpenCurlyBrace */:\n                            hasOpenCurlyBracket = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 125 /* CloseCurlyBrace */:\n                            chClass = (hasOpenCurlyBracket ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        /* The following three rules make it that ' or \" or ` are allowed inside links if the link began with a different one */\n                        case 39 /* SingleQuote */:\n                            chClass = (linkBeginChCode === 34 /* DoubleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 34 /* DoubleQuote */:\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 96 /* BackTick */:\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 34 /* DoubleQuote */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 42 /* Asterisk */:\n                            // `*` terminates a link if the link began with `*`\n                            chClass = (linkBeginChCode === 42 /* Asterisk */) ? 1 /* ForceTermination */ : 0 /* None */;\n                            break;\n                        case 124 /* Pipe */:\n                            // `|` terminates a link if the link began with `|`\n                            chClass = (linkBeginChCode === 124 /* Pipe */) ? 1 /* ForceTermination */ : 0 /* None */;\n                            break;\n                        case 32 /* Space */:\n                            // ` ` allow space in between [ and ]\n                            chClass = (inSquareBrackets ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        default:\n                            chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* ForceTermination */) {\n                        result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n                        resetStateMachine = true;\n                    }\n                }\n                else if (state === 12 /* End */) {\n                    let chClass;\n                    if (chCode === 91 /* OpenSquareBracket */) {\n                        // Allow for the authority part to contain ipv6 addresses which contain [ and ]\n                        hasOpenSquareBracket = true;\n                        chClass = 0 /* None */;\n                    }\n                    else {\n                        chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* ForceTermination */) {\n                        resetStateMachine = true;\n                    }\n                    else {\n                        state = 13 /* Accept */;\n                    }\n                }\n                else {\n                    state = stateMachine.nextState(state, chCode);\n                    if (state === 0 /* Invalid */) {\n                        resetStateMachine = true;\n                    }\n                }\n                if (resetStateMachine) {\n                    state = 1 /* Start */;\n                    hasOpenParens = false;\n                    hasOpenSquareBracket = false;\n                    hasOpenCurlyBracket = false;\n                    // Record where the link started\n                    linkBeginIndex = j + 1;\n                    linkBeginChCode = chCode;\n                }\n                j++;\n            }\n            if (state === 13 /* Accept */) {\n                result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n            }\n        }\n        return result;\n    }\n}\n/**\n * Returns an array of all links contains in the provided\n * document. *Note* that this operation is computational\n * expensive and should not run in the UI thread.\n */\nexport function computeLinks(model) {\n    if (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n        // Unknown caller!\n        return [];\n    }\n    return LinkComputer.computeLinks(model);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class BasicInplaceReplace {\n    constructor() {\n        this._defaultValueSet = [\n            ['true', 'false'],\n            ['True', 'False'],\n            ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\n            ['public', 'protected', 'private'],\n        ];\n    }\n    navigateValueSet(range1, text1, range2, text2, up) {\n        if (range1 && text1) {\n            let result = this.doNavigateValueSet(text1, up);\n            if (result) {\n                return {\n                    range: range1,\n                    value: result\n                };\n            }\n        }\n        if (range2 && text2) {\n            let result = this.doNavigateValueSet(text2, up);\n            if (result) {\n                return {\n                    range: range2,\n                    value: result\n                };\n            }\n        }\n        return null;\n    }\n    doNavigateValueSet(text, up) {\n        let numberResult = this.numberReplace(text, up);\n        if (numberResult !== null) {\n            return numberResult;\n        }\n        return this.textReplace(text, up);\n    }\n    numberReplace(value, up) {\n        let precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\n        let n1 = Number(value);\n        let n2 = parseFloat(value);\n        if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n            if (n1 === 0 && !up) {\n                return null; // don't do negative\n                //\t\t\t} else if(n1 === 9 && up) {\n                //\t\t\t\treturn null; // don't insert 10 into a number\n            }\n            else {\n                n1 = Math.floor(n1 * precision);\n                n1 += up ? precision : -precision;\n                return String(n1 / precision);\n            }\n        }\n        return null;\n    }\n    textReplace(value, up) {\n        return this.valueSetsReplace(this._defaultValueSet, value, up);\n    }\n    valueSetsReplace(valueSets, value, up) {\n        let result = null;\n        for (let i = 0, len = valueSets.length; result === null && i < len; i++) {\n            result = this.valueSetReplace(valueSets[i], value, up);\n        }\n        return result;\n    }\n    valueSetReplace(valueSet, value, up) {\n        let idx = valueSet.indexOf(value);\n        if (idx >= 0) {\n            idx += up ? +1 : -1;\n            if (idx < 0) {\n                idx = valueSet.length - 1;\n            }\n            else {\n                idx %= valueSet.length;\n            }\n            return valueSet[idx];\n        }\n        return null;\n    }\n}\nBasicInplaceReplace.INSTANCE = new BasicInplaceReplace();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter, Event } from './event.js';\nconst shortcutEvent = Object.freeze(function (callback, context) {\n    const handle = setTimeout(callback.bind(context), 0);\n    return { dispose() { clearTimeout(handle); } };\n});\nexport var CancellationToken;\n(function (CancellationToken) {\n    function isCancellationToken(thing) {\n        if (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n            return true;\n        }\n        if (thing instanceof MutableToken) {\n            return true;\n        }\n        if (!thing || typeof thing !== 'object') {\n            return false;\n        }\n        return typeof thing.isCancellationRequested === 'boolean'\n            && typeof thing.onCancellationRequested === 'function';\n    }\n    CancellationToken.isCancellationToken = isCancellationToken;\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: shortcutEvent\n    });\n})(CancellationToken || (CancellationToken = {}));\nclass MutableToken {\n    constructor() {\n        this._isCancelled = false;\n        this._emitter = null;\n    }\n    cancel() {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    }\n    get isCancellationRequested() {\n        return this._isCancelled;\n    }\n    get onCancellationRequested() {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = new Emitter();\n        }\n        return this._emitter.event;\n    }\n    dispose() {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = null;\n        }\n    }\n}\nexport class CancellationTokenSource {\n    constructor(parent) {\n        this._token = undefined;\n        this._parentListener = undefined;\n        this._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n    }\n    get token() {\n        if (!this._token) {\n            // be lazy and create the token only when\n            // actually needed\n            this._token = new MutableToken();\n        }\n        return this._token;\n    }\n    cancel() {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually cancel\n            this._token.cancel();\n        }\n    }\n    dispose(cancel = false) {\n        if (cancel) {\n            this.cancel();\n        }\n        if (this._parentListener) {\n            this._parentListener.dispose();\n        }\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nclass KeyCodeStrMap {\n    constructor() {\n        this._keyCodeToStr = [];\n        this._strToKeyCode = Object.create(null);\n    }\n    define(keyCode, str) {\n        this._keyCodeToStr[keyCode] = str;\n        this._strToKeyCode[str.toLowerCase()] = keyCode;\n    }\n    keyCodeToStr(keyCode) {\n        return this._keyCodeToStr[keyCode];\n    }\n    strToKeyCode(str) {\n        return this._strToKeyCode[str.toLowerCase()] || 0 /* Unknown */;\n    }\n}\nconst uiMap = new KeyCodeStrMap();\nconst userSettingsUSMap = new KeyCodeStrMap();\nconst userSettingsGeneralMap = new KeyCodeStrMap();\nexport const EVENT_KEY_CODE_MAP = new Array(230);\nexport const NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE = {};\nconst scanCodeIntToStr = [];\nconst scanCodeStrToInt = Object.create(null);\nconst scanCodeLowerCaseStrToInt = Object.create(null);\n/**\n * -1 if a ScanCode => KeyCode mapping depends on kb layout.\n */\nexport const IMMUTABLE_CODE_TO_KEY_CODE = [];\n/**\n * -1 if a KeyCode => ScanCode mapping depends on kb layout.\n */\nexport const IMMUTABLE_KEY_CODE_TO_CODE = [];\nfor (let i = 0; i <= 193 /* MAX_VALUE */; i++) {\n    IMMUTABLE_CODE_TO_KEY_CODE[i] = -1 /* DependsOnKbLayout */;\n}\nfor (let i = 0; i <= 126 /* MAX_VALUE */; i++) {\n    IMMUTABLE_KEY_CODE_TO_CODE[i] = -1 /* DependsOnKbLayout */;\n}\n(function () {\n    // See https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n    // See https://github.com/microsoft/node-native-keymap/blob/master/deps/chromium/keyboard_codes_win.h\n    const empty = '';\n    const mappings = [\n        // keyCodeOrd, immutable, scanCode, scanCodeStr, keyCode, keyCodeStr, eventKeyCode, vkey, usUserSettingsLabel, generalUserSettingsLabel\n        [0, 1, 0 /* None */, 'None', 0 /* Unknown */, 'unknown', 0, 'VK_UNKNOWN', empty, empty],\n        [0, 1, 1 /* Hyper */, 'Hyper', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 2 /* Super */, 'Super', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 3 /* Fn */, 'Fn', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 4 /* FnLock */, 'FnLock', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 5 /* Suspend */, 'Suspend', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 6 /* Resume */, 'Resume', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 7 /* Turbo */, 'Turbo', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 8 /* Sleep */, 'Sleep', 0 /* Unknown */, empty, 0, 'VK_SLEEP', empty, empty],\n        [0, 1, 9 /* WakeUp */, 'WakeUp', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [31, 0, 10 /* KeyA */, 'KeyA', 31 /* KeyA */, 'A', 65, 'VK_A', empty, empty],\n        [32, 0, 11 /* KeyB */, 'KeyB', 32 /* KeyB */, 'B', 66, 'VK_B', empty, empty],\n        [33, 0, 12 /* KeyC */, 'KeyC', 33 /* KeyC */, 'C', 67, 'VK_C', empty, empty],\n        [34, 0, 13 /* KeyD */, 'KeyD', 34 /* KeyD */, 'D', 68, 'VK_D', empty, empty],\n        [35, 0, 14 /* KeyE */, 'KeyE', 35 /* KeyE */, 'E', 69, 'VK_E', empty, empty],\n        [36, 0, 15 /* KeyF */, 'KeyF', 36 /* KeyF */, 'F', 70, 'VK_F', empty, empty],\n        [37, 0, 16 /* KeyG */, 'KeyG', 37 /* KeyG */, 'G', 71, 'VK_G', empty, empty],\n        [38, 0, 17 /* KeyH */, 'KeyH', 38 /* KeyH */, 'H', 72, 'VK_H', empty, empty],\n        [39, 0, 18 /* KeyI */, 'KeyI', 39 /* KeyI */, 'I', 73, 'VK_I', empty, empty],\n        [40, 0, 19 /* KeyJ */, 'KeyJ', 40 /* KeyJ */, 'J', 74, 'VK_J', empty, empty],\n        [41, 0, 20 /* KeyK */, 'KeyK', 41 /* KeyK */, 'K', 75, 'VK_K', empty, empty],\n        [42, 0, 21 /* KeyL */, 'KeyL', 42 /* KeyL */, 'L', 76, 'VK_L', empty, empty],\n        [43, 0, 22 /* KeyM */, 'KeyM', 43 /* KeyM */, 'M', 77, 'VK_M', empty, empty],\n        [44, 0, 23 /* KeyN */, 'KeyN', 44 /* KeyN */, 'N', 78, 'VK_N', empty, empty],\n        [45, 0, 24 /* KeyO */, 'KeyO', 45 /* KeyO */, 'O', 79, 'VK_O', empty, empty],\n        [46, 0, 25 /* KeyP */, 'KeyP', 46 /* KeyP */, 'P', 80, 'VK_P', empty, empty],\n        [47, 0, 26 /* KeyQ */, 'KeyQ', 47 /* KeyQ */, 'Q', 81, 'VK_Q', empty, empty],\n        [48, 0, 27 /* KeyR */, 'KeyR', 48 /* KeyR */, 'R', 82, 'VK_R', empty, empty],\n        [49, 0, 28 /* KeyS */, 'KeyS', 49 /* KeyS */, 'S', 83, 'VK_S', empty, empty],\n        [50, 0, 29 /* KeyT */, 'KeyT', 50 /* KeyT */, 'T', 84, 'VK_T', empty, empty],\n        [51, 0, 30 /* KeyU */, 'KeyU', 51 /* KeyU */, 'U', 85, 'VK_U', empty, empty],\n        [52, 0, 31 /* KeyV */, 'KeyV', 52 /* KeyV */, 'V', 86, 'VK_V', empty, empty],\n        [53, 0, 32 /* KeyW */, 'KeyW', 53 /* KeyW */, 'W', 87, 'VK_W', empty, empty],\n        [54, 0, 33 /* KeyX */, 'KeyX', 54 /* KeyX */, 'X', 88, 'VK_X', empty, empty],\n        [55, 0, 34 /* KeyY */, 'KeyY', 55 /* KeyY */, 'Y', 89, 'VK_Y', empty, empty],\n        [56, 0, 35 /* KeyZ */, 'KeyZ', 56 /* KeyZ */, 'Z', 90, 'VK_Z', empty, empty],\n        [22, 0, 36 /* Digit1 */, 'Digit1', 22 /* Digit1 */, '1', 49, 'VK_1', empty, empty],\n        [23, 0, 37 /* Digit2 */, 'Digit2', 23 /* Digit2 */, '2', 50, 'VK_2', empty, empty],\n        [24, 0, 38 /* Digit3 */, 'Digit3', 24 /* Digit3 */, '3', 51, 'VK_3', empty, empty],\n        [25, 0, 39 /* Digit4 */, 'Digit4', 25 /* Digit4 */, '4', 52, 'VK_4', empty, empty],\n        [26, 0, 40 /* Digit5 */, 'Digit5', 26 /* Digit5 */, '5', 53, 'VK_5', empty, empty],\n        [27, 0, 41 /* Digit6 */, 'Digit6', 27 /* Digit6 */, '6', 54, 'VK_6', empty, empty],\n        [28, 0, 42 /* Digit7 */, 'Digit7', 28 /* Digit7 */, '7', 55, 'VK_7', empty, empty],\n        [29, 0, 43 /* Digit8 */, 'Digit8', 29 /* Digit8 */, '8', 56, 'VK_8', empty, empty],\n        [30, 0, 44 /* Digit9 */, 'Digit9', 30 /* Digit9 */, '9', 57, 'VK_9', empty, empty],\n        [21, 0, 45 /* Digit0 */, 'Digit0', 21 /* Digit0 */, '0', 48, 'VK_0', empty, empty],\n        [3, 1, 46 /* Enter */, 'Enter', 3 /* Enter */, 'Enter', 13, 'VK_RETURN', empty, empty],\n        [9, 1, 47 /* Escape */, 'Escape', 9 /* Escape */, 'Escape', 27, 'VK_ESCAPE', empty, empty],\n        [1, 1, 48 /* Backspace */, 'Backspace', 1 /* Backspace */, 'Backspace', 8, 'VK_BACK', empty, empty],\n        [2, 1, 49 /* Tab */, 'Tab', 2 /* Tab */, 'Tab', 9, 'VK_TAB', empty, empty],\n        [10, 1, 50 /* Space */, 'Space', 10 /* Space */, 'Space', 32, 'VK_SPACE', empty, empty],\n        [83, 0, 51 /* Minus */, 'Minus', 83 /* Minus */, '-', 189, 'VK_OEM_MINUS', '-', 'OEM_MINUS'],\n        [81, 0, 52 /* Equal */, 'Equal', 81 /* Equal */, '=', 187, 'VK_OEM_PLUS', '=', 'OEM_PLUS'],\n        [87, 0, 53 /* BracketLeft */, 'BracketLeft', 87 /* BracketLeft */, '[', 219, 'VK_OEM_4', '[', 'OEM_4'],\n        [89, 0, 54 /* BracketRight */, 'BracketRight', 89 /* BracketRight */, ']', 221, 'VK_OEM_6', ']', 'OEM_6'],\n        [88, 0, 55 /* Backslash */, 'Backslash', 88 /* Backslash */, '\\\\', 220, 'VK_OEM_5', '\\\\', 'OEM_5'],\n        [0, 0, 56 /* IntlHash */, 'IntlHash', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [80, 0, 57 /* Semicolon */, 'Semicolon', 80 /* Semicolon */, ';', 186, 'VK_OEM_1', ';', 'OEM_1'],\n        [90, 0, 58 /* Quote */, 'Quote', 90 /* Quote */, '\\'', 222, 'VK_OEM_7', '\\'', 'OEM_7'],\n        [86, 0, 59 /* Backquote */, 'Backquote', 86 /* Backquote */, '`', 192, 'VK_OEM_3', '`', 'OEM_3'],\n        [82, 0, 60 /* Comma */, 'Comma', 82 /* Comma */, ',', 188, 'VK_OEM_COMMA', ',', 'OEM_COMMA'],\n        [84, 0, 61 /* Period */, 'Period', 84 /* Period */, '.', 190, 'VK_OEM_PERIOD', '.', 'OEM_PERIOD'],\n        [85, 0, 62 /* Slash */, 'Slash', 85 /* Slash */, '/', 191, 'VK_OEM_2', '/', 'OEM_2'],\n        [8, 1, 63 /* CapsLock */, 'CapsLock', 8 /* CapsLock */, 'CapsLock', 20, 'VK_CAPITAL', empty, empty],\n        [59, 1, 64 /* F1 */, 'F1', 59 /* F1 */, 'F1', 112, 'VK_F1', empty, empty],\n        [60, 1, 65 /* F2 */, 'F2', 60 /* F2 */, 'F2', 113, 'VK_F2', empty, empty],\n        [61, 1, 66 /* F3 */, 'F3', 61 /* F3 */, 'F3', 114, 'VK_F3', empty, empty],\n        [62, 1, 67 /* F4 */, 'F4', 62 /* F4 */, 'F4', 115, 'VK_F4', empty, empty],\n        [63, 1, 68 /* F5 */, 'F5', 63 /* F5 */, 'F5', 116, 'VK_F5', empty, empty],\n        [64, 1, 69 /* F6 */, 'F6', 64 /* F6 */, 'F6', 117, 'VK_F6', empty, empty],\n        [65, 1, 70 /* F7 */, 'F7', 65 /* F7 */, 'F7', 118, 'VK_F7', empty, empty],\n        [66, 1, 71 /* F8 */, 'F8', 66 /* F8 */, 'F8', 119, 'VK_F8', empty, empty],\n        [67, 1, 72 /* F9 */, 'F9', 67 /* F9 */, 'F9', 120, 'VK_F9', empty, empty],\n        [68, 1, 73 /* F10 */, 'F10', 68 /* F10 */, 'F10', 121, 'VK_F10', empty, empty],\n        [69, 1, 74 /* F11 */, 'F11', 69 /* F11 */, 'F11', 122, 'VK_F11', empty, empty],\n        [70, 1, 75 /* F12 */, 'F12', 70 /* F12 */, 'F12', 123, 'VK_F12', empty, empty],\n        [0, 1, 76 /* PrintScreen */, 'PrintScreen', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [79, 1, 77 /* ScrollLock */, 'ScrollLock', 79 /* ScrollLock */, 'ScrollLock', 145, 'VK_SCROLL', empty, empty],\n        [7, 1, 78 /* Pause */, 'Pause', 7 /* PauseBreak */, 'PauseBreak', 19, 'VK_PAUSE', empty, empty],\n        [19, 1, 79 /* Insert */, 'Insert', 19 /* Insert */, 'Insert', 45, 'VK_INSERT', empty, empty],\n        [14, 1, 80 /* Home */, 'Home', 14 /* Home */, 'Home', 36, 'VK_HOME', empty, empty],\n        [11, 1, 81 /* PageUp */, 'PageUp', 11 /* PageUp */, 'PageUp', 33, 'VK_PRIOR', empty, empty],\n        [20, 1, 82 /* Delete */, 'Delete', 20 /* Delete */, 'Delete', 46, 'VK_DELETE', empty, empty],\n        [13, 1, 83 /* End */, 'End', 13 /* End */, 'End', 35, 'VK_END', empty, empty],\n        [12, 1, 84 /* PageDown */, 'PageDown', 12 /* PageDown */, 'PageDown', 34, 'VK_NEXT', empty, empty],\n        [17, 1, 85 /* ArrowRight */, 'ArrowRight', 17 /* RightArrow */, 'RightArrow', 39, 'VK_RIGHT', 'Right', empty],\n        [15, 1, 86 /* ArrowLeft */, 'ArrowLeft', 15 /* LeftArrow */, 'LeftArrow', 37, 'VK_LEFT', 'Left', empty],\n        [18, 1, 87 /* ArrowDown */, 'ArrowDown', 18 /* DownArrow */, 'DownArrow', 40, 'VK_DOWN', 'Down', empty],\n        [16, 1, 88 /* ArrowUp */, 'ArrowUp', 16 /* UpArrow */, 'UpArrow', 38, 'VK_UP', 'Up', empty],\n        [78, 1, 89 /* NumLock */, 'NumLock', 78 /* NumLock */, 'NumLock', 144, 'VK_NUMLOCK', empty, empty],\n        [108, 1, 90 /* NumpadDivide */, 'NumpadDivide', 108 /* NumpadDivide */, 'NumPad_Divide', 111, 'VK_DIVIDE', empty, empty],\n        [103, 1, 91 /* NumpadMultiply */, 'NumpadMultiply', 103 /* NumpadMultiply */, 'NumPad_Multiply', 106, 'VK_MULTIPLY', empty, empty],\n        [106, 1, 92 /* NumpadSubtract */, 'NumpadSubtract', 106 /* NumpadSubtract */, 'NumPad_Subtract', 109, 'VK_SUBTRACT', empty, empty],\n        [104, 1, 93 /* NumpadAdd */, 'NumpadAdd', 104 /* NumpadAdd */, 'NumPad_Add', 107, 'VK_ADD', empty, empty],\n        [3, 1, 94 /* NumpadEnter */, 'NumpadEnter', 3 /* Enter */, empty, 0, empty, empty, empty],\n        [94, 1, 95 /* Numpad1 */, 'Numpad1', 94 /* Numpad1 */, 'NumPad1', 97, 'VK_NUMPAD1', empty, empty],\n        [95, 1, 96 /* Numpad2 */, 'Numpad2', 95 /* Numpad2 */, 'NumPad2', 98, 'VK_NUMPAD2', empty, empty],\n        [96, 1, 97 /* Numpad3 */, 'Numpad3', 96 /* Numpad3 */, 'NumPad3', 99, 'VK_NUMPAD3', empty, empty],\n        [97, 1, 98 /* Numpad4 */, 'Numpad4', 97 /* Numpad4 */, 'NumPad4', 100, 'VK_NUMPAD4', empty, empty],\n        [98, 1, 99 /* Numpad5 */, 'Numpad5', 98 /* Numpad5 */, 'NumPad5', 101, 'VK_NUMPAD5', empty, empty],\n        [99, 1, 100 /* Numpad6 */, 'Numpad6', 99 /* Numpad6 */, 'NumPad6', 102, 'VK_NUMPAD6', empty, empty],\n        [100, 1, 101 /* Numpad7 */, 'Numpad7', 100 /* Numpad7 */, 'NumPad7', 103, 'VK_NUMPAD7', empty, empty],\n        [101, 1, 102 /* Numpad8 */, 'Numpad8', 101 /* Numpad8 */, 'NumPad8', 104, 'VK_NUMPAD8', empty, empty],\n        [102, 1, 103 /* Numpad9 */, 'Numpad9', 102 /* Numpad9 */, 'NumPad9', 105, 'VK_NUMPAD9', empty, empty],\n        [93, 1, 104 /* Numpad0 */, 'Numpad0', 93 /* Numpad0 */, 'NumPad0', 96, 'VK_NUMPAD0', empty, empty],\n        [107, 1, 105 /* NumpadDecimal */, 'NumpadDecimal', 107 /* NumpadDecimal */, 'NumPad_Decimal', 110, 'VK_DECIMAL', empty, empty],\n        [92, 0, 106 /* IntlBackslash */, 'IntlBackslash', 92 /* IntlBackslash */, 'OEM_102', 226, 'VK_OEM_102', empty, empty],\n        [58, 1, 107 /* ContextMenu */, 'ContextMenu', 58 /* ContextMenu */, 'ContextMenu', 93, empty, empty, empty],\n        [0, 1, 108 /* Power */, 'Power', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 109 /* NumpadEqual */, 'NumpadEqual', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [71, 1, 110 /* F13 */, 'F13', 71 /* F13 */, 'F13', 124, 'VK_F13', empty, empty],\n        [72, 1, 111 /* F14 */, 'F14', 72 /* F14 */, 'F14', 125, 'VK_F14', empty, empty],\n        [73, 1, 112 /* F15 */, 'F15', 73 /* F15 */, 'F15', 126, 'VK_F15', empty, empty],\n        [74, 1, 113 /* F16 */, 'F16', 74 /* F16 */, 'F16', 127, 'VK_F16', empty, empty],\n        [75, 1, 114 /* F17 */, 'F17', 75 /* F17 */, 'F17', 128, 'VK_F17', empty, empty],\n        [76, 1, 115 /* F18 */, 'F18', 76 /* F18 */, 'F18', 129, 'VK_F18', empty, empty],\n        [77, 1, 116 /* F19 */, 'F19', 77 /* F19 */, 'F19', 130, 'VK_F19', empty, empty],\n        [0, 1, 117 /* F20 */, 'F20', 0 /* Unknown */, empty, 0, 'VK_F20', empty, empty],\n        [0, 1, 118 /* F21 */, 'F21', 0 /* Unknown */, empty, 0, 'VK_F21', empty, empty],\n        [0, 1, 119 /* F22 */, 'F22', 0 /* Unknown */, empty, 0, 'VK_F22', empty, empty],\n        [0, 1, 120 /* F23 */, 'F23', 0 /* Unknown */, empty, 0, 'VK_F23', empty, empty],\n        [0, 1, 121 /* F24 */, 'F24', 0 /* Unknown */, empty, 0, 'VK_F24', empty, empty],\n        [0, 1, 122 /* Open */, 'Open', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 123 /* Help */, 'Help', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 124 /* Select */, 'Select', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 125 /* Again */, 'Again', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 126 /* Undo */, 'Undo', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 127 /* Cut */, 'Cut', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 128 /* Copy */, 'Copy', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 129 /* Paste */, 'Paste', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 130 /* Find */, 'Find', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 131 /* AudioVolumeMute */, 'AudioVolumeMute', 112 /* AudioVolumeMute */, 'AudioVolumeMute', 173, 'VK_VOLUME_MUTE', empty, empty],\n        [0, 1, 132 /* AudioVolumeUp */, 'AudioVolumeUp', 113 /* AudioVolumeUp */, 'AudioVolumeUp', 175, 'VK_VOLUME_UP', empty, empty],\n        [0, 1, 133 /* AudioVolumeDown */, 'AudioVolumeDown', 114 /* AudioVolumeDown */, 'AudioVolumeDown', 174, 'VK_VOLUME_DOWN', empty, empty],\n        [105, 1, 134 /* NumpadComma */, 'NumpadComma', 105 /* NUMPAD_SEPARATOR */, 'NumPad_Separator', 108, 'VK_SEPARATOR', empty, empty],\n        [110, 0, 135 /* IntlRo */, 'IntlRo', 110 /* ABNT_C1 */, 'ABNT_C1', 193, 'VK_ABNT_C1', empty, empty],\n        [0, 1, 136 /* KanaMode */, 'KanaMode', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 0, 137 /* IntlYen */, 'IntlYen', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 138 /* Convert */, 'Convert', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 139 /* NonConvert */, 'NonConvert', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 140 /* Lang1 */, 'Lang1', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 141 /* Lang2 */, 'Lang2', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 142 /* Lang3 */, 'Lang3', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 143 /* Lang4 */, 'Lang4', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 144 /* Lang5 */, 'Lang5', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 145 /* Abort */, 'Abort', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 146 /* Props */, 'Props', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 147 /* NumpadParenLeft */, 'NumpadParenLeft', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 148 /* NumpadParenRight */, 'NumpadParenRight', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 149 /* NumpadBackspace */, 'NumpadBackspace', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 150 /* NumpadMemoryStore */, 'NumpadMemoryStore', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 151 /* NumpadMemoryRecall */, 'NumpadMemoryRecall', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 152 /* NumpadMemoryClear */, 'NumpadMemoryClear', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 153 /* NumpadMemoryAdd */, 'NumpadMemoryAdd', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 154 /* NumpadMemorySubtract */, 'NumpadMemorySubtract', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 155 /* NumpadClear */, 'NumpadClear', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 156 /* NumpadClearEntry */, 'NumpadClearEntry', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [5, 1, 0 /* None */, empty, 5 /* Ctrl */, 'Ctrl', 17, 'VK_CONTROL', empty, empty],\n        [4, 1, 0 /* None */, empty, 4 /* Shift */, 'Shift', 16, 'VK_SHIFT', empty, empty],\n        [6, 1, 0 /* None */, empty, 6 /* Alt */, 'Alt', 18, 'VK_MENU', empty, empty],\n        [57, 1, 0 /* None */, empty, 57 /* Meta */, 'Meta', 0, 'VK_COMMAND', empty, empty],\n        [5, 1, 157 /* ControlLeft */, 'ControlLeft', 5 /* Ctrl */, empty, 0, 'VK_LCONTROL', empty, empty],\n        [4, 1, 158 /* ShiftLeft */, 'ShiftLeft', 4 /* Shift */, empty, 0, 'VK_LSHIFT', empty, empty],\n        [6, 1, 159 /* AltLeft */, 'AltLeft', 6 /* Alt */, empty, 0, 'VK_LMENU', empty, empty],\n        [57, 1, 160 /* MetaLeft */, 'MetaLeft', 57 /* Meta */, empty, 0, 'VK_LWIN', empty, empty],\n        [5, 1, 161 /* ControlRight */, 'ControlRight', 5 /* Ctrl */, empty, 0, 'VK_RCONTROL', empty, empty],\n        [4, 1, 162 /* ShiftRight */, 'ShiftRight', 4 /* Shift */, empty, 0, 'VK_RSHIFT', empty, empty],\n        [6, 1, 163 /* AltRight */, 'AltRight', 6 /* Alt */, empty, 0, 'VK_RMENU', empty, empty],\n        [57, 1, 164 /* MetaRight */, 'MetaRight', 57 /* Meta */, empty, 0, 'VK_RWIN', empty, empty],\n        [0, 1, 165 /* BrightnessUp */, 'BrightnessUp', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 166 /* BrightnessDown */, 'BrightnessDown', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 167 /* MediaPlay */, 'MediaPlay', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 168 /* MediaRecord */, 'MediaRecord', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 169 /* MediaFastForward */, 'MediaFastForward', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 170 /* MediaRewind */, 'MediaRewind', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [114, 1, 171 /* MediaTrackNext */, 'MediaTrackNext', 119 /* MediaTrackNext */, 'MediaTrackNext', 176, 'VK_MEDIA_NEXT_TRACK', empty, empty],\n        [115, 1, 172 /* MediaTrackPrevious */, 'MediaTrackPrevious', 120 /* MediaTrackPrevious */, 'MediaTrackPrevious', 177, 'VK_MEDIA_PREV_TRACK', empty, empty],\n        [116, 1, 173 /* MediaStop */, 'MediaStop', 121 /* MediaStop */, 'MediaStop', 178, 'VK_MEDIA_STOP', empty, empty],\n        [0, 1, 174 /* Eject */, 'Eject', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [117, 1, 175 /* MediaPlayPause */, 'MediaPlayPause', 122 /* MediaPlayPause */, 'MediaPlayPause', 179, 'VK_MEDIA_PLAY_PAUSE', empty, empty],\n        [0, 1, 176 /* MediaSelect */, 'MediaSelect', 123 /* LaunchMediaPlayer */, 'LaunchMediaPlayer', 181, 'VK_MEDIA_LAUNCH_MEDIA_SELECT', empty, empty],\n        [0, 1, 177 /* LaunchMail */, 'LaunchMail', 124 /* LaunchMail */, 'LaunchMail', 180, 'VK_MEDIA_LAUNCH_MAIL', empty, empty],\n        [0, 1, 178 /* LaunchApp2 */, 'LaunchApp2', 125 /* LaunchApp2 */, 'LaunchApp2', 183, 'VK_MEDIA_LAUNCH_APP2', empty, empty],\n        [0, 1, 179 /* LaunchApp1 */, 'LaunchApp1', 0 /* Unknown */, empty, 0, 'VK_MEDIA_LAUNCH_APP1', empty, empty],\n        [0, 1, 180 /* SelectTask */, 'SelectTask', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 181 /* LaunchScreenSaver */, 'LaunchScreenSaver', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 182 /* BrowserSearch */, 'BrowserSearch', 115 /* BrowserSearch */, 'BrowserSearch', 170, 'VK_BROWSER_SEARCH', empty, empty],\n        [0, 1, 183 /* BrowserHome */, 'BrowserHome', 116 /* BrowserHome */, 'BrowserHome', 172, 'VK_BROWSER_HOME', empty, empty],\n        [112, 1, 184 /* BrowserBack */, 'BrowserBack', 117 /* BrowserBack */, 'BrowserBack', 166, 'VK_BROWSER_BACK', empty, empty],\n        [113, 1, 185 /* BrowserForward */, 'BrowserForward', 118 /* BrowserForward */, 'BrowserForward', 167, 'VK_BROWSER_FORWARD', empty, empty],\n        [0, 1, 186 /* BrowserStop */, 'BrowserStop', 0 /* Unknown */, empty, 0, 'VK_BROWSER_STOP', empty, empty],\n        [0, 1, 187 /* BrowserRefresh */, 'BrowserRefresh', 0 /* Unknown */, empty, 0, 'VK_BROWSER_REFRESH', empty, empty],\n        [0, 1, 188 /* BrowserFavorites */, 'BrowserFavorites', 0 /* Unknown */, empty, 0, 'VK_BROWSER_FAVORITES', empty, empty],\n        [0, 1, 189 /* ZoomToggle */, 'ZoomToggle', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 190 /* MailReply */, 'MailReply', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 191 /* MailForward */, 'MailForward', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 192 /* MailSend */, 'MailSend', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        // See https://lists.w3.org/Archives/Public/www-dom/2010JulSep/att-0182/keyCode-spec.html\n        // If an Input Method Editor is processing key input and the event is keydown, return 229.\n        [109, 1, 0 /* None */, empty, 109 /* KEY_IN_COMPOSITION */, 'KeyInComposition', 229, empty, empty, empty],\n        [111, 1, 0 /* None */, empty, 111 /* ABNT_C2 */, 'ABNT_C2', 194, 'VK_ABNT_C2', empty, empty],\n        [91, 1, 0 /* None */, empty, 91 /* OEM_8 */, 'OEM_8', 223, 'VK_OEM_8', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_CLEAR', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_KANA', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_HANGUL', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_JUNJA', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_FINAL', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_HANJA', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_KANJI', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_CONVERT', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_NONCONVERT', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_ACCEPT', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_MODECHANGE', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_SELECT', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_PRINT', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_EXECUTE', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_SNAPSHOT', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_HELP', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_APPS', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_PROCESSKEY', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_PACKET', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_DBE_SBCSCHAR', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_DBE_DBCSCHAR', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_ATTN', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_CRSEL', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_EXSEL', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_EREOF', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_PLAY', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_ZOOM', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_NONAME', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_PA1', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_OEM_CLEAR', empty, empty],\n    ];\n    let seenKeyCode = [];\n    let seenScanCode = [];\n    for (const mapping of mappings) {\n        const [_keyCodeOrd, immutable, scanCode, scanCodeStr, keyCode, keyCodeStr, eventKeyCode, vkey, usUserSettingsLabel, generalUserSettingsLabel] = mapping;\n        if (!seenScanCode[scanCode]) {\n            seenScanCode[scanCode] = true;\n            scanCodeIntToStr[scanCode] = scanCodeStr;\n            scanCodeStrToInt[scanCodeStr] = scanCode;\n            scanCodeLowerCaseStrToInt[scanCodeStr.toLowerCase()] = scanCode;\n            if (immutable) {\n                IMMUTABLE_CODE_TO_KEY_CODE[scanCode] = keyCode;\n                if ((keyCode !== 0 /* Unknown */)\n                    && (keyCode !== 3 /* Enter */)\n                    && (keyCode !== 5 /* Ctrl */)\n                    && (keyCode !== 4 /* Shift */)\n                    && (keyCode !== 6 /* Alt */)\n                    && (keyCode !== 57 /* Meta */)) {\n                    IMMUTABLE_KEY_CODE_TO_CODE[keyCode] = scanCode;\n                }\n            }\n        }\n        if (!seenKeyCode[keyCode]) {\n            seenKeyCode[keyCode] = true;\n            if (!keyCodeStr) {\n                throw new Error(`String representation missing for key code ${keyCode} around scan code ${scanCodeStr}`);\n            }\n            uiMap.define(keyCode, keyCodeStr);\n            userSettingsUSMap.define(keyCode, usUserSettingsLabel || keyCodeStr);\n            userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel || usUserSettingsLabel || keyCodeStr);\n        }\n        if (eventKeyCode) {\n            EVENT_KEY_CODE_MAP[eventKeyCode] = keyCode;\n        }\n        if (vkey) {\n            NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE[vkey] = keyCode;\n        }\n    }\n    // Manually added due to the exclusion above (due to duplication with NumpadEnter)\n    IMMUTABLE_KEY_CODE_TO_CODE[3 /* Enter */] = 46 /* Enter */;\n})();\nexport var KeyCodeUtils;\n(function (KeyCodeUtils) {\n    function toString(keyCode) {\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toString = toString;\n    function fromString(key) {\n        return uiMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromString = fromString;\n    function toUserSettingsUS(keyCode) {\n        return userSettingsUSMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\n    function toUserSettingsGeneral(keyCode) {\n        return userSettingsGeneralMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\n    function fromUserSettings(key) {\n        return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromUserSettings = fromUserSettings;\n    function toElectronAccelerator(keyCode) {\n        if (keyCode >= 93 /* Numpad0 */ && keyCode <= 108 /* NumpadDivide */) {\n            // [Electron Accelerators] Electron is able to parse numpad keys, but unfortunately it\n            // renders them just as regular keys in menus. For example, num0 is rendered as \"0\",\n            // numdiv is rendered as \"/\", numsub is rendered as \"-\".\n            //\n            // This can lead to incredible confusion, as it makes numpad based keybindings indistinguishable\n            // from keybindings based on regular keys.\n            //\n            // We therefore need to fall back to custom rendering for numpad keys.\n            return null;\n        }\n        switch (keyCode) {\n            case 16 /* UpArrow */:\n                return 'Up';\n            case 18 /* DownArrow */:\n                return 'Down';\n            case 15 /* LeftArrow */:\n                return 'Left';\n            case 17 /* RightArrow */:\n                return 'Right';\n        }\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toElectronAccelerator = toElectronAccelerator;\n})(KeyCodeUtils || (KeyCodeUtils = {}));\nexport function KeyChord(firstPart, secondPart) {\n    const chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\n    return (firstPart | chordPart) >>> 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from './position.js';\nimport { Range } from './range.js';\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nexport class Selection extends Range {\n    constructor(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\n        super(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn);\n        this.selectionStartLineNumber = selectionStartLineNumber;\n        this.selectionStartColumn = selectionStartColumn;\n        this.positionLineNumber = positionLineNumber;\n        this.positionColumn = positionColumn;\n    }\n    /**\n     * Transform to a human-readable representation.\n     */\n    toString() {\n        return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n    }\n    /**\n     * Test if equals other selection.\n     */\n    equalsSelection(other) {\n        return (Selection.selectionsEqual(this, other));\n    }\n    /**\n     * Test if the two selections are equal.\n     */\n    static selectionsEqual(a, b) {\n        return (a.selectionStartLineNumber === b.selectionStartLineNumber &&\n            a.selectionStartColumn === b.selectionStartColumn &&\n            a.positionLineNumber === b.positionLineNumber &&\n            a.positionColumn === b.positionColumn);\n    }\n    /**\n     * Get directions (LTR or RTL).\n     */\n    getDirection() {\n        if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n            return 0 /* LTR */;\n        }\n        return 1 /* RTL */;\n    }\n    /**\n     * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n     */\n    setEndPosition(endLineNumber, endColumn) {\n        if (this.getDirection() === 0 /* LTR */) {\n            return new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n    }\n    /**\n     * Get the position at `positionLineNumber` and `positionColumn`.\n     */\n    getPosition() {\n        return new Position(this.positionLineNumber, this.positionColumn);\n    }\n    /**\n     * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n     */\n    setStartPosition(startLineNumber, startColumn) {\n        if (this.getDirection() === 0 /* LTR */) {\n            return new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n        }\n        return new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n    }\n    // ----\n    /**\n     * Create a `Selection` from one or two positions\n     */\n    static fromPositions(start, end = start) {\n        return new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n    }\n    /**\n     * Create a `Selection` from an `ISelection`.\n     */\n    static liftSelection(sel) {\n        return new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n    }\n    /**\n     * `a` equals `b`.\n     */\n    static selectionsArrEqual(a, b) {\n        if (a && !b || !a && b) {\n            return false;\n        }\n        if (!a && !b) {\n            return true;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let i = 0, len = a.length; i < len; i++) {\n            if (!this.selectionsEqual(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Test if `obj` is an `ISelection`.\n     */\n    static isISelection(obj) {\n        return (obj\n            && (typeof obj.selectionStartLineNumber === 'number')\n            && (typeof obj.selectionStartColumn === 'number')\n            && (typeof obj.positionLineNumber === 'number')\n            && (typeof obj.positionColumn === 'number'));\n    }\n    /**\n     * Create with a direction.\n     */\n    static createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, direction) {\n        if (direction === 0 /* LTR */) {\n            return new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// THIS IS A GENERATED FILE. DO NOT EDIT DIRECTLY.\nexport var AccessibilitySupport;\n(function (AccessibilitySupport) {\n    /**\n     * This should be the browser case where it is not known if a screen reader is attached or no.\n     */\n    AccessibilitySupport[AccessibilitySupport[\"Unknown\"] = 0] = \"Unknown\";\n    AccessibilitySupport[AccessibilitySupport[\"Disabled\"] = 1] = \"Disabled\";\n    AccessibilitySupport[AccessibilitySupport[\"Enabled\"] = 2] = \"Enabled\";\n})(AccessibilitySupport || (AccessibilitySupport = {}));\nexport var CompletionItemInsertTextRule;\n(function (CompletionItemInsertTextRule) {\n    /**\n     * Adjust whitespace/indentation of multiline insert texts to\n     * match the current line indentation.\n     */\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"KeepWhitespace\"] = 1] = \"KeepWhitespace\";\n    /**\n     * `insertText` is a snippet.\n     */\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"InsertAsSnippet\"] = 4] = \"InsertAsSnippet\";\n})(CompletionItemInsertTextRule || (CompletionItemInsertTextRule = {}));\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind[CompletionItemKind[\"Method\"] = 0] = \"Method\";\n    CompletionItemKind[CompletionItemKind[\"Function\"] = 1] = \"Function\";\n    CompletionItemKind[CompletionItemKind[\"Constructor\"] = 2] = \"Constructor\";\n    CompletionItemKind[CompletionItemKind[\"Field\"] = 3] = \"Field\";\n    CompletionItemKind[CompletionItemKind[\"Variable\"] = 4] = \"Variable\";\n    CompletionItemKind[CompletionItemKind[\"Class\"] = 5] = \"Class\";\n    CompletionItemKind[CompletionItemKind[\"Struct\"] = 6] = \"Struct\";\n    CompletionItemKind[CompletionItemKind[\"Interface\"] = 7] = \"Interface\";\n    CompletionItemKind[CompletionItemKind[\"Module\"] = 8] = \"Module\";\n    CompletionItemKind[CompletionItemKind[\"Property\"] = 9] = \"Property\";\n    CompletionItemKind[CompletionItemKind[\"Event\"] = 10] = \"Event\";\n    CompletionItemKind[CompletionItemKind[\"Operator\"] = 11] = \"Operator\";\n    CompletionItemKind[CompletionItemKind[\"Unit\"] = 12] = \"Unit\";\n    CompletionItemKind[CompletionItemKind[\"Value\"] = 13] = \"Value\";\n    CompletionItemKind[CompletionItemKind[\"Constant\"] = 14] = \"Constant\";\n    CompletionItemKind[CompletionItemKind[\"Enum\"] = 15] = \"Enum\";\n    CompletionItemKind[CompletionItemKind[\"EnumMember\"] = 16] = \"EnumMember\";\n    CompletionItemKind[CompletionItemKind[\"Keyword\"] = 17] = \"Keyword\";\n    CompletionItemKind[CompletionItemKind[\"Text\"] = 18] = \"Text\";\n    CompletionItemKind[CompletionItemKind[\"Color\"] = 19] = \"Color\";\n    CompletionItemKind[CompletionItemKind[\"File\"] = 20] = \"File\";\n    CompletionItemKind[CompletionItemKind[\"Reference\"] = 21] = \"Reference\";\n    CompletionItemKind[CompletionItemKind[\"Customcolor\"] = 22] = \"Customcolor\";\n    CompletionItemKind[CompletionItemKind[\"Folder\"] = 23] = \"Folder\";\n    CompletionItemKind[CompletionItemKind[\"TypeParameter\"] = 24] = \"TypeParameter\";\n    CompletionItemKind[CompletionItemKind[\"User\"] = 25] = \"User\";\n    CompletionItemKind[CompletionItemKind[\"Issue\"] = 26] = \"Issue\";\n    CompletionItemKind[CompletionItemKind[\"Snippet\"] = 27] = \"Snippet\";\n})(CompletionItemKind || (CompletionItemKind = {}));\nexport var CompletionItemTag;\n(function (CompletionItemTag) {\n    CompletionItemTag[CompletionItemTag[\"Deprecated\"] = 1] = \"Deprecated\";\n})(CompletionItemTag || (CompletionItemTag = {}));\n/**\n * How a suggest provider was triggered.\n */\nexport var CompletionTriggerKind;\n(function (CompletionTriggerKind) {\n    CompletionTriggerKind[CompletionTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerCharacter\"] = 1] = \"TriggerCharacter\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerForIncompleteCompletions\"] = 2] = \"TriggerForIncompleteCompletions\";\n})(CompletionTriggerKind || (CompletionTriggerKind = {}));\n/**\n * A positioning preference for rendering content widgets.\n */\nexport var ContentWidgetPositionPreference;\n(function (ContentWidgetPositionPreference) {\n    /**\n     * Place the content widget exactly at a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"EXACT\"] = 0] = \"EXACT\";\n    /**\n     * Place the content widget above a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"ABOVE\"] = 1] = \"ABOVE\";\n    /**\n     * Place the content widget below a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"BELOW\"] = 2] = \"BELOW\";\n})(ContentWidgetPositionPreference || (ContentWidgetPositionPreference = {}));\n/**\n * Describes the reason the cursor has changed its position.\n */\nexport var CursorChangeReason;\n(function (CursorChangeReason) {\n    /**\n     * Unknown or not set.\n     */\n    CursorChangeReason[CursorChangeReason[\"NotSet\"] = 0] = \"NotSet\";\n    /**\n     * A `model.setValue()` was called.\n     */\n    CursorChangeReason[CursorChangeReason[\"ContentFlush\"] = 1] = \"ContentFlush\";\n    /**\n     * The `model` has been changed outside of this cursor and the cursor recovers its position from associated markers.\n     */\n    CursorChangeReason[CursorChangeReason[\"RecoverFromMarkers\"] = 2] = \"RecoverFromMarkers\";\n    /**\n     * There was an explicit user gesture.\n     */\n    CursorChangeReason[CursorChangeReason[\"Explicit\"] = 3] = \"Explicit\";\n    /**\n     * There was a Paste.\n     */\n    CursorChangeReason[CursorChangeReason[\"Paste\"] = 4] = \"Paste\";\n    /**\n     * There was an Undo.\n     */\n    CursorChangeReason[CursorChangeReason[\"Undo\"] = 5] = \"Undo\";\n    /**\n     * There was a Redo.\n     */\n    CursorChangeReason[CursorChangeReason[\"Redo\"] = 6] = \"Redo\";\n})(CursorChangeReason || (CursorChangeReason = {}));\n/**\n * The default end of line to use when instantiating models.\n */\nexport var DefaultEndOfLine;\n(function (DefaultEndOfLine) {\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    DefaultEndOfLine[DefaultEndOfLine[\"LF\"] = 1] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    DefaultEndOfLine[DefaultEndOfLine[\"CRLF\"] = 2] = \"CRLF\";\n})(DefaultEndOfLine || (DefaultEndOfLine = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * Configuration options for auto indentation in the editor\n */\nexport var EditorAutoIndentStrategy;\n(function (EditorAutoIndentStrategy) {\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"None\"] = 0] = \"None\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Keep\"] = 1] = \"Keep\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Brackets\"] = 2] = \"Brackets\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Advanced\"] = 3] = \"Advanced\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Full\"] = 4] = \"Full\";\n})(EditorAutoIndentStrategy || (EditorAutoIndentStrategy = {}));\nexport var EditorOption;\n(function (EditorOption) {\n    EditorOption[EditorOption[\"acceptSuggestionOnCommitCharacter\"] = 0] = \"acceptSuggestionOnCommitCharacter\";\n    EditorOption[EditorOption[\"acceptSuggestionOnEnter\"] = 1] = \"acceptSuggestionOnEnter\";\n    EditorOption[EditorOption[\"accessibilitySupport\"] = 2] = \"accessibilitySupport\";\n    EditorOption[EditorOption[\"accessibilityPageSize\"] = 3] = \"accessibilityPageSize\";\n    EditorOption[EditorOption[\"ariaLabel\"] = 4] = \"ariaLabel\";\n    EditorOption[EditorOption[\"autoClosingBrackets\"] = 5] = \"autoClosingBrackets\";\n    EditorOption[EditorOption[\"autoClosingDelete\"] = 6] = \"autoClosingDelete\";\n    EditorOption[EditorOption[\"autoClosingOvertype\"] = 7] = \"autoClosingOvertype\";\n    EditorOption[EditorOption[\"autoClosingQuotes\"] = 8] = \"autoClosingQuotes\";\n    EditorOption[EditorOption[\"autoIndent\"] = 9] = \"autoIndent\";\n    EditorOption[EditorOption[\"automaticLayout\"] = 10] = \"automaticLayout\";\n    EditorOption[EditorOption[\"autoSurround\"] = 11] = \"autoSurround\";\n    EditorOption[EditorOption[\"bracketPairColorization\"] = 12] = \"bracketPairColorization\";\n    EditorOption[EditorOption[\"guides\"] = 13] = \"guides\";\n    EditorOption[EditorOption[\"codeLens\"] = 14] = \"codeLens\";\n    EditorOption[EditorOption[\"codeLensFontFamily\"] = 15] = \"codeLensFontFamily\";\n    EditorOption[EditorOption[\"codeLensFontSize\"] = 16] = \"codeLensFontSize\";\n    EditorOption[EditorOption[\"colorDecorators\"] = 17] = \"colorDecorators\";\n    EditorOption[EditorOption[\"columnSelection\"] = 18] = \"columnSelection\";\n    EditorOption[EditorOption[\"comments\"] = 19] = \"comments\";\n    EditorOption[EditorOption[\"contextmenu\"] = 20] = \"contextmenu\";\n    EditorOption[EditorOption[\"copyWithSyntaxHighlighting\"] = 21] = \"copyWithSyntaxHighlighting\";\n    EditorOption[EditorOption[\"cursorBlinking\"] = 22] = \"cursorBlinking\";\n    EditorOption[EditorOption[\"cursorSmoothCaretAnimation\"] = 23] = \"cursorSmoothCaretAnimation\";\n    EditorOption[EditorOption[\"cursorStyle\"] = 24] = \"cursorStyle\";\n    EditorOption[EditorOption[\"cursorSurroundingLines\"] = 25] = \"cursorSurroundingLines\";\n    EditorOption[EditorOption[\"cursorSurroundingLinesStyle\"] = 26] = \"cursorSurroundingLinesStyle\";\n    EditorOption[EditorOption[\"cursorWidth\"] = 27] = \"cursorWidth\";\n    EditorOption[EditorOption[\"disableLayerHinting\"] = 28] = \"disableLayerHinting\";\n    EditorOption[EditorOption[\"disableMonospaceOptimizations\"] = 29] = \"disableMonospaceOptimizations\";\n    EditorOption[EditorOption[\"domReadOnly\"] = 30] = \"domReadOnly\";\n    EditorOption[EditorOption[\"dragAndDrop\"] = 31] = \"dragAndDrop\";\n    EditorOption[EditorOption[\"emptySelectionClipboard\"] = 32] = \"emptySelectionClipboard\";\n    EditorOption[EditorOption[\"extraEditorClassName\"] = 33] = \"extraEditorClassName\";\n    EditorOption[EditorOption[\"fastScrollSensitivity\"] = 34] = \"fastScrollSensitivity\";\n    EditorOption[EditorOption[\"find\"] = 35] = \"find\";\n    EditorOption[EditorOption[\"fixedOverflowWidgets\"] = 36] = \"fixedOverflowWidgets\";\n    EditorOption[EditorOption[\"folding\"] = 37] = \"folding\";\n    EditorOption[EditorOption[\"foldingStrategy\"] = 38] = \"foldingStrategy\";\n    EditorOption[EditorOption[\"foldingHighlight\"] = 39] = \"foldingHighlight\";\n    EditorOption[EditorOption[\"foldingImportsByDefault\"] = 40] = \"foldingImportsByDefault\";\n    EditorOption[EditorOption[\"unfoldOnClickAfterEndOfLine\"] = 41] = \"unfoldOnClickAfterEndOfLine\";\n    EditorOption[EditorOption[\"fontFamily\"] = 42] = \"fontFamily\";\n    EditorOption[EditorOption[\"fontInfo\"] = 43] = \"fontInfo\";\n    EditorOption[EditorOption[\"fontLigatures\"] = 44] = \"fontLigatures\";\n    EditorOption[EditorOption[\"fontSize\"] = 45] = \"fontSize\";\n    EditorOption[EditorOption[\"fontWeight\"] = 46] = \"fontWeight\";\n    EditorOption[EditorOption[\"formatOnPaste\"] = 47] = \"formatOnPaste\";\n    EditorOption[EditorOption[\"formatOnType\"] = 48] = \"formatOnType\";\n    EditorOption[EditorOption[\"glyphMargin\"] = 49] = \"glyphMargin\";\n    EditorOption[EditorOption[\"gotoLocation\"] = 50] = \"gotoLocation\";\n    EditorOption[EditorOption[\"hideCursorInOverviewRuler\"] = 51] = \"hideCursorInOverviewRuler\";\n    EditorOption[EditorOption[\"hover\"] = 52] = \"hover\";\n    EditorOption[EditorOption[\"inDiffEditor\"] = 53] = \"inDiffEditor\";\n    EditorOption[EditorOption[\"inlineSuggest\"] = 54] = \"inlineSuggest\";\n    EditorOption[EditorOption[\"letterSpacing\"] = 55] = \"letterSpacing\";\n    EditorOption[EditorOption[\"lightbulb\"] = 56] = \"lightbulb\";\n    EditorOption[EditorOption[\"lineDecorationsWidth\"] = 57] = \"lineDecorationsWidth\";\n    EditorOption[EditorOption[\"lineHeight\"] = 58] = \"lineHeight\";\n    EditorOption[EditorOption[\"lineNumbers\"] = 59] = \"lineNumbers\";\n    EditorOption[EditorOption[\"lineNumbersMinChars\"] = 60] = \"lineNumbersMinChars\";\n    EditorOption[EditorOption[\"linkedEditing\"] = 61] = \"linkedEditing\";\n    EditorOption[EditorOption[\"links\"] = 62] = \"links\";\n    EditorOption[EditorOption[\"matchBrackets\"] = 63] = \"matchBrackets\";\n    EditorOption[EditorOption[\"minimap\"] = 64] = \"minimap\";\n    EditorOption[EditorOption[\"mouseStyle\"] = 65] = \"mouseStyle\";\n    EditorOption[EditorOption[\"mouseWheelScrollSensitivity\"] = 66] = \"mouseWheelScrollSensitivity\";\n    EditorOption[EditorOption[\"mouseWheelZoom\"] = 67] = \"mouseWheelZoom\";\n    EditorOption[EditorOption[\"multiCursorMergeOverlapping\"] = 68] = \"multiCursorMergeOverlapping\";\n    EditorOption[EditorOption[\"multiCursorModifier\"] = 69] = \"multiCursorModifier\";\n    EditorOption[EditorOption[\"multiCursorPaste\"] = 70] = \"multiCursorPaste\";\n    EditorOption[EditorOption[\"occurrencesHighlight\"] = 71] = \"occurrencesHighlight\";\n    EditorOption[EditorOption[\"overviewRulerBorder\"] = 72] = \"overviewRulerBorder\";\n    EditorOption[EditorOption[\"overviewRulerLanes\"] = 73] = \"overviewRulerLanes\";\n    EditorOption[EditorOption[\"padding\"] = 74] = \"padding\";\n    EditorOption[EditorOption[\"parameterHints\"] = 75] = \"parameterHints\";\n    EditorOption[EditorOption[\"peekWidgetDefaultFocus\"] = 76] = \"peekWidgetDefaultFocus\";\n    EditorOption[EditorOption[\"definitionLinkOpensInPeek\"] = 77] = \"definitionLinkOpensInPeek\";\n    EditorOption[EditorOption[\"quickSuggestions\"] = 78] = \"quickSuggestions\";\n    EditorOption[EditorOption[\"quickSuggestionsDelay\"] = 79] = \"quickSuggestionsDelay\";\n    EditorOption[EditorOption[\"readOnly\"] = 80] = \"readOnly\";\n    EditorOption[EditorOption[\"renameOnType\"] = 81] = \"renameOnType\";\n    EditorOption[EditorOption[\"renderControlCharacters\"] = 82] = \"renderControlCharacters\";\n    EditorOption[EditorOption[\"renderFinalNewline\"] = 83] = \"renderFinalNewline\";\n    EditorOption[EditorOption[\"renderLineHighlight\"] = 84] = \"renderLineHighlight\";\n    EditorOption[EditorOption[\"renderLineHighlightOnlyWhenFocus\"] = 85] = \"renderLineHighlightOnlyWhenFocus\";\n    EditorOption[EditorOption[\"renderValidationDecorations\"] = 86] = \"renderValidationDecorations\";\n    EditorOption[EditorOption[\"renderWhitespace\"] = 87] = \"renderWhitespace\";\n    EditorOption[EditorOption[\"revealHorizontalRightPadding\"] = 88] = \"revealHorizontalRightPadding\";\n    EditorOption[EditorOption[\"roundedSelection\"] = 89] = \"roundedSelection\";\n    EditorOption[EditorOption[\"rulers\"] = 90] = \"rulers\";\n    EditorOption[EditorOption[\"scrollbar\"] = 91] = \"scrollbar\";\n    EditorOption[EditorOption[\"scrollBeyondLastColumn\"] = 92] = \"scrollBeyondLastColumn\";\n    EditorOption[EditorOption[\"scrollBeyondLastLine\"] = 93] = \"scrollBeyondLastLine\";\n    EditorOption[EditorOption[\"scrollPredominantAxis\"] = 94] = \"scrollPredominantAxis\";\n    EditorOption[EditorOption[\"selectionClipboard\"] = 95] = \"selectionClipboard\";\n    EditorOption[EditorOption[\"selectionHighlight\"] = 96] = \"selectionHighlight\";\n    EditorOption[EditorOption[\"selectOnLineNumbers\"] = 97] = \"selectOnLineNumbers\";\n    EditorOption[EditorOption[\"showFoldingControls\"] = 98] = \"showFoldingControls\";\n    EditorOption[EditorOption[\"showUnused\"] = 99] = \"showUnused\";\n    EditorOption[EditorOption[\"snippetSuggestions\"] = 100] = \"snippetSuggestions\";\n    EditorOption[EditorOption[\"smartSelect\"] = 101] = \"smartSelect\";\n    EditorOption[EditorOption[\"smoothScrolling\"] = 102] = \"smoothScrolling\";\n    EditorOption[EditorOption[\"stickyTabStops\"] = 103] = \"stickyTabStops\";\n    EditorOption[EditorOption[\"stopRenderingLineAfter\"] = 104] = \"stopRenderingLineAfter\";\n    EditorOption[EditorOption[\"suggest\"] = 105] = \"suggest\";\n    EditorOption[EditorOption[\"suggestFontSize\"] = 106] = \"suggestFontSize\";\n    EditorOption[EditorOption[\"suggestLineHeight\"] = 107] = \"suggestLineHeight\";\n    EditorOption[EditorOption[\"suggestOnTriggerCharacters\"] = 108] = \"suggestOnTriggerCharacters\";\n    EditorOption[EditorOption[\"suggestSelection\"] = 109] = \"suggestSelection\";\n    EditorOption[EditorOption[\"tabCompletion\"] = 110] = \"tabCompletion\";\n    EditorOption[EditorOption[\"tabIndex\"] = 111] = \"tabIndex\";\n    EditorOption[EditorOption[\"unusualLineTerminators\"] = 112] = \"unusualLineTerminators\";\n    EditorOption[EditorOption[\"useShadowDOM\"] = 113] = \"useShadowDOM\";\n    EditorOption[EditorOption[\"useTabStops\"] = 114] = \"useTabStops\";\n    EditorOption[EditorOption[\"wordSeparators\"] = 115] = \"wordSeparators\";\n    EditorOption[EditorOption[\"wordWrap\"] = 116] = \"wordWrap\";\n    EditorOption[EditorOption[\"wordWrapBreakAfterCharacters\"] = 117] = \"wordWrapBreakAfterCharacters\";\n    EditorOption[EditorOption[\"wordWrapBreakBeforeCharacters\"] = 118] = \"wordWrapBreakBeforeCharacters\";\n    EditorOption[EditorOption[\"wordWrapColumn\"] = 119] = \"wordWrapColumn\";\n    EditorOption[EditorOption[\"wordWrapOverride1\"] = 120] = \"wordWrapOverride1\";\n    EditorOption[EditorOption[\"wordWrapOverride2\"] = 121] = \"wordWrapOverride2\";\n    EditorOption[EditorOption[\"wrappingIndent\"] = 122] = \"wrappingIndent\";\n    EditorOption[EditorOption[\"wrappingStrategy\"] = 123] = \"wrappingStrategy\";\n    EditorOption[EditorOption[\"showDeprecated\"] = 124] = \"showDeprecated\";\n    EditorOption[EditorOption[\"inlayHints\"] = 125] = \"inlayHints\";\n    EditorOption[EditorOption[\"editorClassName\"] = 126] = \"editorClassName\";\n    EditorOption[EditorOption[\"pixelRatio\"] = 127] = \"pixelRatio\";\n    EditorOption[EditorOption[\"tabFocusMode\"] = 128] = \"tabFocusMode\";\n    EditorOption[EditorOption[\"layoutInfo\"] = 129] = \"layoutInfo\";\n    EditorOption[EditorOption[\"wrappingInfo\"] = 130] = \"wrappingInfo\";\n})(EditorOption || (EditorOption = {}));\n/**\n * End of line character preference.\n */\nexport var EndOfLinePreference;\n(function (EndOfLinePreference) {\n    /**\n     * Use the end of line character identified in the text buffer.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"TextDefined\"] = 0] = \"TextDefined\";\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"LF\"] = 1] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"CRLF\"] = 2] = \"CRLF\";\n})(EndOfLinePreference || (EndOfLinePreference = {}));\n/**\n * End of line character preference.\n */\nexport var EndOfLineSequence;\n(function (EndOfLineSequence) {\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    EndOfLineSequence[EndOfLineSequence[\"LF\"] = 0] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    EndOfLineSequence[EndOfLineSequence[\"CRLF\"] = 1] = \"CRLF\";\n})(EndOfLineSequence || (EndOfLineSequence = {}));\n/**\n * Describes what to do with the indentation when pressing Enter.\n */\nexport var IndentAction;\n(function (IndentAction) {\n    /**\n     * Insert new line and copy the previous line's indentation.\n     */\n    IndentAction[IndentAction[\"None\"] = 0] = \"None\";\n    /**\n     * Insert new line and indent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\n    /**\n     * Insert two new lines:\n     *  - the first one indented which will hold the cursor\n     *  - the second one at the same indentation level\n     */\n    IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\n    /**\n     * Insert new line and outdent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\n})(IndentAction || (IndentAction = {}));\nexport var InlayHintKind;\n(function (InlayHintKind) {\n    InlayHintKind[InlayHintKind[\"Other\"] = 0] = \"Other\";\n    InlayHintKind[InlayHintKind[\"Type\"] = 1] = \"Type\";\n    InlayHintKind[InlayHintKind[\"Parameter\"] = 2] = \"Parameter\";\n})(InlayHintKind || (InlayHintKind = {}));\n/**\n * How an {@link InlineCompletionsProvider inline completion provider} was triggered.\n */\nexport var InlineCompletionTriggerKind;\n(function (InlineCompletionTriggerKind) {\n    /**\n     * Completion was triggered automatically while editing.\n     * It is sufficient to return a single completion item in this case.\n     */\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Automatic\"] = 0] = \"Automatic\";\n    /**\n     * Completion was triggered explicitly by a user gesture.\n     * Return multiple completion items to enable cycling through them.\n     */\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Explicit\"] = 1] = \"Explicit\";\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nexport var KeyCode;\n(function (KeyCode) {\n    KeyCode[KeyCode[\"DependsOnKbLayout\"] = -1] = \"DependsOnKbLayout\";\n    /**\n     * Placed first to cover the 0 value of the enum.\n     */\n    KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\n    KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\n    KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\n    KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\n    KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\n    KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\n    KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\n    KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\n    KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\n    KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\n    KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\n    KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\n    KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\n    KeyCode[KeyCode[\"End\"] = 13] = \"End\";\n    KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\n    KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\n    KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\n    KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\n    KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\n    KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\n    KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\n    KeyCode[KeyCode[\"Digit0\"] = 21] = \"Digit0\";\n    KeyCode[KeyCode[\"Digit1\"] = 22] = \"Digit1\";\n    KeyCode[KeyCode[\"Digit2\"] = 23] = \"Digit2\";\n    KeyCode[KeyCode[\"Digit3\"] = 24] = \"Digit3\";\n    KeyCode[KeyCode[\"Digit4\"] = 25] = \"Digit4\";\n    KeyCode[KeyCode[\"Digit5\"] = 26] = \"Digit5\";\n    KeyCode[KeyCode[\"Digit6\"] = 27] = \"Digit6\";\n    KeyCode[KeyCode[\"Digit7\"] = 28] = \"Digit7\";\n    KeyCode[KeyCode[\"Digit8\"] = 29] = \"Digit8\";\n    KeyCode[KeyCode[\"Digit9\"] = 30] = \"Digit9\";\n    KeyCode[KeyCode[\"KeyA\"] = 31] = \"KeyA\";\n    KeyCode[KeyCode[\"KeyB\"] = 32] = \"KeyB\";\n    KeyCode[KeyCode[\"KeyC\"] = 33] = \"KeyC\";\n    KeyCode[KeyCode[\"KeyD\"] = 34] = \"KeyD\";\n    KeyCode[KeyCode[\"KeyE\"] = 35] = \"KeyE\";\n    KeyCode[KeyCode[\"KeyF\"] = 36] = \"KeyF\";\n    KeyCode[KeyCode[\"KeyG\"] = 37] = \"KeyG\";\n    KeyCode[KeyCode[\"KeyH\"] = 38] = \"KeyH\";\n    KeyCode[KeyCode[\"KeyI\"] = 39] = \"KeyI\";\n    KeyCode[KeyCode[\"KeyJ\"] = 40] = \"KeyJ\";\n    KeyCode[KeyCode[\"KeyK\"] = 41] = \"KeyK\";\n    KeyCode[KeyCode[\"KeyL\"] = 42] = \"KeyL\";\n    KeyCode[KeyCode[\"KeyM\"] = 43] = \"KeyM\";\n    KeyCode[KeyCode[\"KeyN\"] = 44] = \"KeyN\";\n    KeyCode[KeyCode[\"KeyO\"] = 45] = \"KeyO\";\n    KeyCode[KeyCode[\"KeyP\"] = 46] = \"KeyP\";\n    KeyCode[KeyCode[\"KeyQ\"] = 47] = \"KeyQ\";\n    KeyCode[KeyCode[\"KeyR\"] = 48] = \"KeyR\";\n    KeyCode[KeyCode[\"KeyS\"] = 49] = \"KeyS\";\n    KeyCode[KeyCode[\"KeyT\"] = 50] = \"KeyT\";\n    KeyCode[KeyCode[\"KeyU\"] = 51] = \"KeyU\";\n    KeyCode[KeyCode[\"KeyV\"] = 52] = \"KeyV\";\n    KeyCode[KeyCode[\"KeyW\"] = 53] = \"KeyW\";\n    KeyCode[KeyCode[\"KeyX\"] = 54] = \"KeyX\";\n    KeyCode[KeyCode[\"KeyY\"] = 55] = \"KeyY\";\n    KeyCode[KeyCode[\"KeyZ\"] = 56] = \"KeyZ\";\n    KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\n    KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\n    KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\n    KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\n    KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\n    KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\n    KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\n    KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\n    KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\n    KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\n    KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\n    KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\n    KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\n    KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\n    KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\n    KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\n    KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\n    KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\n    KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\n    KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\n    KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\n    KeyCode[KeyCode[\"NumLock\"] = 78] = \"NumLock\";\n    KeyCode[KeyCode[\"ScrollLock\"] = 79] = \"ScrollLock\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ';:' key\n     */\n    KeyCode[KeyCode[\"Semicolon\"] = 80] = \"Semicolon\";\n    /**\n     * For any country/region, the '+' key\n     * For the US standard keyboard, the '=+' key\n     */\n    KeyCode[KeyCode[\"Equal\"] = 81] = \"Equal\";\n    /**\n     * For any country/region, the ',' key\n     * For the US standard keyboard, the ',<' key\n     */\n    KeyCode[KeyCode[\"Comma\"] = 82] = \"Comma\";\n    /**\n     * For any country/region, the '-' key\n     * For the US standard keyboard, the '-_' key\n     */\n    KeyCode[KeyCode[\"Minus\"] = 83] = \"Minus\";\n    /**\n     * For any country/region, the '.' key\n     * For the US standard keyboard, the '.>' key\n     */\n    KeyCode[KeyCode[\"Period\"] = 84] = \"Period\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '/?' key\n     */\n    KeyCode[KeyCode[\"Slash\"] = 85] = \"Slash\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '`~' key\n     */\n    KeyCode[KeyCode[\"Backquote\"] = 86] = \"Backquote\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '[{' key\n     */\n    KeyCode[KeyCode[\"BracketLeft\"] = 87] = \"BracketLeft\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '\\|' key\n     */\n    KeyCode[KeyCode[\"Backslash\"] = 88] = \"Backslash\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ']}' key\n     */\n    KeyCode[KeyCode[\"BracketRight\"] = 89] = \"BracketRight\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ''\"' key\n     */\n    KeyCode[KeyCode[\"Quote\"] = 90] = \"Quote\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     */\n    KeyCode[KeyCode[\"OEM_8\"] = 91] = \"OEM_8\";\n    /**\n     * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n     */\n    KeyCode[KeyCode[\"IntlBackslash\"] = 92] = \"IntlBackslash\";\n    KeyCode[KeyCode[\"Numpad0\"] = 93] = \"Numpad0\";\n    KeyCode[KeyCode[\"Numpad1\"] = 94] = \"Numpad1\";\n    KeyCode[KeyCode[\"Numpad2\"] = 95] = \"Numpad2\";\n    KeyCode[KeyCode[\"Numpad3\"] = 96] = \"Numpad3\";\n    KeyCode[KeyCode[\"Numpad4\"] = 97] = \"Numpad4\";\n    KeyCode[KeyCode[\"Numpad5\"] = 98] = \"Numpad5\";\n    KeyCode[KeyCode[\"Numpad6\"] = 99] = \"Numpad6\";\n    KeyCode[KeyCode[\"Numpad7\"] = 100] = \"Numpad7\";\n    KeyCode[KeyCode[\"Numpad8\"] = 101] = \"Numpad8\";\n    KeyCode[KeyCode[\"Numpad9\"] = 102] = \"Numpad9\";\n    KeyCode[KeyCode[\"NumpadMultiply\"] = 103] = \"NumpadMultiply\";\n    KeyCode[KeyCode[\"NumpadAdd\"] = 104] = \"NumpadAdd\";\n    KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 105] = \"NUMPAD_SEPARATOR\";\n    KeyCode[KeyCode[\"NumpadSubtract\"] = 106] = \"NumpadSubtract\";\n    KeyCode[KeyCode[\"NumpadDecimal\"] = 107] = \"NumpadDecimal\";\n    KeyCode[KeyCode[\"NumpadDivide\"] = 108] = \"NumpadDivide\";\n    /**\n     * Cover all key codes when IME is processing input.\n     */\n    KeyCode[KeyCode[\"KEY_IN_COMPOSITION\"] = 109] = \"KEY_IN_COMPOSITION\";\n    KeyCode[KeyCode[\"ABNT_C1\"] = 110] = \"ABNT_C1\";\n    KeyCode[KeyCode[\"ABNT_C2\"] = 111] = \"ABNT_C2\";\n    KeyCode[KeyCode[\"AudioVolumeMute\"] = 112] = \"AudioVolumeMute\";\n    KeyCode[KeyCode[\"AudioVolumeUp\"] = 113] = \"AudioVolumeUp\";\n    KeyCode[KeyCode[\"AudioVolumeDown\"] = 114] = \"AudioVolumeDown\";\n    KeyCode[KeyCode[\"BrowserSearch\"] = 115] = \"BrowserSearch\";\n    KeyCode[KeyCode[\"BrowserHome\"] = 116] = \"BrowserHome\";\n    KeyCode[KeyCode[\"BrowserBack\"] = 117] = \"BrowserBack\";\n    KeyCode[KeyCode[\"BrowserForward\"] = 118] = \"BrowserForward\";\n    KeyCode[KeyCode[\"MediaTrackNext\"] = 119] = \"MediaTrackNext\";\n    KeyCode[KeyCode[\"MediaTrackPrevious\"] = 120] = \"MediaTrackPrevious\";\n    KeyCode[KeyCode[\"MediaStop\"] = 121] = \"MediaStop\";\n    KeyCode[KeyCode[\"MediaPlayPause\"] = 122] = \"MediaPlayPause\";\n    KeyCode[KeyCode[\"LaunchMediaPlayer\"] = 123] = \"LaunchMediaPlayer\";\n    KeyCode[KeyCode[\"LaunchMail\"] = 124] = \"LaunchMail\";\n    KeyCode[KeyCode[\"LaunchApp2\"] = 125] = \"LaunchApp2\";\n    /**\n     * Placed last to cover the length of the enum.\n     * Please do not depend on this value!\n     */\n    KeyCode[KeyCode[\"MAX_VALUE\"] = 126] = \"MAX_VALUE\";\n})(KeyCode || (KeyCode = {}));\nexport var MarkerSeverity;\n(function (MarkerSeverity) {\n    MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\n    MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\n    MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\n    MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\n})(MarkerSeverity || (MarkerSeverity = {}));\nexport var MarkerTag;\n(function (MarkerTag) {\n    MarkerTag[MarkerTag[\"Unnecessary\"] = 1] = \"Unnecessary\";\n    MarkerTag[MarkerTag[\"Deprecated\"] = 2] = \"Deprecated\";\n})(MarkerTag || (MarkerTag = {}));\n/**\n * Position in the minimap to render the decoration.\n */\nexport var MinimapPosition;\n(function (MinimapPosition) {\n    MinimapPosition[MinimapPosition[\"Inline\"] = 1] = \"Inline\";\n    MinimapPosition[MinimapPosition[\"Gutter\"] = 2] = \"Gutter\";\n})(MinimapPosition || (MinimapPosition = {}));\n/**\n * Type of hit element with the mouse in the editor.\n */\nexport var MouseTargetType;\n(function (MouseTargetType) {\n    /**\n     * Mouse is on top of an unknown element.\n     */\n    MouseTargetType[MouseTargetType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * Mouse is on top of the textarea used for input.\n     */\n    MouseTargetType[MouseTargetType[\"TEXTAREA\"] = 1] = \"TEXTAREA\";\n    /**\n     * Mouse is on top of the glyph margin\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_GLYPH_MARGIN\"] = 2] = \"GUTTER_GLYPH_MARGIN\";\n    /**\n     * Mouse is on top of the line numbers\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_NUMBERS\"] = 3] = \"GUTTER_LINE_NUMBERS\";\n    /**\n     * Mouse is on top of the line decorations\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_DECORATIONS\"] = 4] = \"GUTTER_LINE_DECORATIONS\";\n    /**\n     * Mouse is on top of the whitespace left in the gutter by a view zone.\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_VIEW_ZONE\"] = 5] = \"GUTTER_VIEW_ZONE\";\n    /**\n     * Mouse is on top of text in the content.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_TEXT\"] = 6] = \"CONTENT_TEXT\";\n    /**\n     * Mouse is on top of empty space in the content (e.g. after line text or below last line)\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_EMPTY\"] = 7] = \"CONTENT_EMPTY\";\n    /**\n     * Mouse is on top of a view zone in the content.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_VIEW_ZONE\"] = 8] = \"CONTENT_VIEW_ZONE\";\n    /**\n     * Mouse is on top of a content widget.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_WIDGET\"] = 9] = \"CONTENT_WIDGET\";\n    /**\n     * Mouse is on top of the decorations overview ruler.\n     */\n    MouseTargetType[MouseTargetType[\"OVERVIEW_RULER\"] = 10] = \"OVERVIEW_RULER\";\n    /**\n     * Mouse is on top of a scrollbar.\n     */\n    MouseTargetType[MouseTargetType[\"SCROLLBAR\"] = 11] = \"SCROLLBAR\";\n    /**\n     * Mouse is on top of an overlay widget.\n     */\n    MouseTargetType[MouseTargetType[\"OVERLAY_WIDGET\"] = 12] = \"OVERLAY_WIDGET\";\n    /**\n     * Mouse is outside of the editor.\n     */\n    MouseTargetType[MouseTargetType[\"OUTSIDE_EDITOR\"] = 13] = \"OUTSIDE_EDITOR\";\n})(MouseTargetType || (MouseTargetType = {}));\n/**\n * A positioning preference for rendering overlay widgets.\n */\nexport var OverlayWidgetPositionPreference;\n(function (OverlayWidgetPositionPreference) {\n    /**\n     * Position the overlay widget in the top right corner\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_RIGHT_CORNER\"] = 0] = \"TOP_RIGHT_CORNER\";\n    /**\n     * Position the overlay widget in the bottom right corner\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"BOTTOM_RIGHT_CORNER\"] = 1] = \"BOTTOM_RIGHT_CORNER\";\n    /**\n     * Position the overlay widget in the top center\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_CENTER\"] = 2] = \"TOP_CENTER\";\n})(OverlayWidgetPositionPreference || (OverlayWidgetPositionPreference = {}));\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport var OverviewRulerLane;\n(function (OverviewRulerLane) {\n    OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n    OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n    OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n    OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n})(OverviewRulerLane || (OverviewRulerLane = {}));\nexport var RenderLineNumbersType;\n(function (RenderLineNumbersType) {\n    RenderLineNumbersType[RenderLineNumbersType[\"Off\"] = 0] = \"Off\";\n    RenderLineNumbersType[RenderLineNumbersType[\"On\"] = 1] = \"On\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Relative\"] = 2] = \"Relative\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Interval\"] = 3] = \"Interval\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Custom\"] = 4] = \"Custom\";\n})(RenderLineNumbersType || (RenderLineNumbersType = {}));\nexport var RenderMinimap;\n(function (RenderMinimap) {\n    RenderMinimap[RenderMinimap[\"None\"] = 0] = \"None\";\n    RenderMinimap[RenderMinimap[\"Text\"] = 1] = \"Text\";\n    RenderMinimap[RenderMinimap[\"Blocks\"] = 2] = \"Blocks\";\n})(RenderMinimap || (RenderMinimap = {}));\nexport var ScrollType;\n(function (ScrollType) {\n    ScrollType[ScrollType[\"Smooth\"] = 0] = \"Smooth\";\n    ScrollType[ScrollType[\"Immediate\"] = 1] = \"Immediate\";\n})(ScrollType || (ScrollType = {}));\nexport var ScrollbarVisibility;\n(function (ScrollbarVisibility) {\n    ScrollbarVisibility[ScrollbarVisibility[\"Auto\"] = 1] = \"Auto\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Visible\"] = 3] = \"Visible\";\n})(ScrollbarVisibility || (ScrollbarVisibility = {}));\n/**\n * The direction of a selection.\n */\nexport var SelectionDirection;\n(function (SelectionDirection) {\n    /**\n     * The selection starts above where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"LTR\"] = 0] = \"LTR\";\n    /**\n     * The selection starts below where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"RTL\"] = 1] = \"RTL\";\n})(SelectionDirection || (SelectionDirection = {}));\nexport var SignatureHelpTriggerKind;\n(function (SignatureHelpTriggerKind) {\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"Invoke\"] = 1] = \"Invoke\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"TriggerCharacter\"] = 2] = \"TriggerCharacter\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"ContentChange\"] = 3] = \"ContentChange\";\n})(SignatureHelpTriggerKind || (SignatureHelpTriggerKind = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind[SymbolKind[\"File\"] = 0] = \"File\";\n    SymbolKind[SymbolKind[\"Module\"] = 1] = \"Module\";\n    SymbolKind[SymbolKind[\"Namespace\"] = 2] = \"Namespace\";\n    SymbolKind[SymbolKind[\"Package\"] = 3] = \"Package\";\n    SymbolKind[SymbolKind[\"Class\"] = 4] = \"Class\";\n    SymbolKind[SymbolKind[\"Method\"] = 5] = \"Method\";\n    SymbolKind[SymbolKind[\"Property\"] = 6] = \"Property\";\n    SymbolKind[SymbolKind[\"Field\"] = 7] = \"Field\";\n    SymbolKind[SymbolKind[\"Constructor\"] = 8] = \"Constructor\";\n    SymbolKind[SymbolKind[\"Enum\"] = 9] = \"Enum\";\n    SymbolKind[SymbolKind[\"Interface\"] = 10] = \"Interface\";\n    SymbolKind[SymbolKind[\"Function\"] = 11] = \"Function\";\n    SymbolKind[SymbolKind[\"Variable\"] = 12] = \"Variable\";\n    SymbolKind[SymbolKind[\"Constant\"] = 13] = \"Constant\";\n    SymbolKind[SymbolKind[\"String\"] = 14] = \"String\";\n    SymbolKind[SymbolKind[\"Number\"] = 15] = \"Number\";\n    SymbolKind[SymbolKind[\"Boolean\"] = 16] = \"Boolean\";\n    SymbolKind[SymbolKind[\"Array\"] = 17] = \"Array\";\n    SymbolKind[SymbolKind[\"Object\"] = 18] = \"Object\";\n    SymbolKind[SymbolKind[\"Key\"] = 19] = \"Key\";\n    SymbolKind[SymbolKind[\"Null\"] = 20] = \"Null\";\n    SymbolKind[SymbolKind[\"EnumMember\"] = 21] = \"EnumMember\";\n    SymbolKind[SymbolKind[\"Struct\"] = 22] = \"Struct\";\n    SymbolKind[SymbolKind[\"Event\"] = 23] = \"Event\";\n    SymbolKind[SymbolKind[\"Operator\"] = 24] = \"Operator\";\n    SymbolKind[SymbolKind[\"TypeParameter\"] = 25] = \"TypeParameter\";\n})(SymbolKind || (SymbolKind = {}));\nexport var SymbolTag;\n(function (SymbolTag) {\n    SymbolTag[SymbolTag[\"Deprecated\"] = 1] = \"Deprecated\";\n})(SymbolTag || (SymbolTag = {}));\n/**\n * The kind of animation in which the editor's cursor should be rendered.\n */\nexport var TextEditorCursorBlinkingStyle;\n(function (TextEditorCursorBlinkingStyle) {\n    /**\n     * Hidden\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Hidden\"] = 0] = \"Hidden\";\n    /**\n     * Blinking\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Blink\"] = 1] = \"Blink\";\n    /**\n     * Blinking with smooth fading\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Smooth\"] = 2] = \"Smooth\";\n    /**\n     * Blinking with prolonged filled state and smooth fading\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Phase\"] = 3] = \"Phase\";\n    /**\n     * Expand collapse animation on the y axis\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Expand\"] = 4] = \"Expand\";\n    /**\n     * No-Blinking\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Solid\"] = 5] = \"Solid\";\n})(TextEditorCursorBlinkingStyle || (TextEditorCursorBlinkingStyle = {}));\n/**\n * The style in which the editor's cursor should be rendered.\n */\nexport var TextEditorCursorStyle;\n(function (TextEditorCursorStyle) {\n    /**\n     * As a vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Line\"] = 1] = \"Line\";\n    /**\n     * As a block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Block\"] = 2] = \"Block\";\n    /**\n     * As a horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Underline\"] = 3] = \"Underline\";\n    /**\n     * As a thin vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"LineThin\"] = 4] = \"LineThin\";\n    /**\n     * As an outlined block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"BlockOutline\"] = 5] = \"BlockOutline\";\n    /**\n     * As a thin horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"UnderlineThin\"] = 6] = \"UnderlineThin\";\n})(TextEditorCursorStyle || (TextEditorCursorStyle = {}));\n/**\n * Describes the behavior of decorations when typing/editing near their edges.\n * Note: Please do not edit the values, as they very carefully match `DecorationRangeBehavior`\n */\nexport var TrackedRangeStickiness;\n(function (TrackedRangeStickiness) {\n    TrackedRangeStickiness[TrackedRangeStickiness[\"AlwaysGrowsWhenTypingAtEdges\"] = 0] = \"AlwaysGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"NeverGrowsWhenTypingAtEdges\"] = 1] = \"NeverGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingBefore\"] = 2] = \"GrowsOnlyWhenTypingBefore\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingAfter\"] = 3] = \"GrowsOnlyWhenTypingAfter\";\n})(TrackedRangeStickiness || (TrackedRangeStickiness = {}));\n/**\n * Describes how to indent wrapped lines.\n */\nexport var WrappingIndent;\n(function (WrappingIndent) {\n    /**\n     * No indentation => wrapped lines begin at column 1.\n     */\n    WrappingIndent[WrappingIndent[\"None\"] = 0] = \"None\";\n    /**\n     * Same => wrapped lines get the same indentation as the parent.\n     */\n    WrappingIndent[WrappingIndent[\"Same\"] = 1] = \"Same\";\n    /**\n     * Indent => wrapped lines get +1 indentation toward the parent.\n     */\n    WrappingIndent[WrappingIndent[\"Indent\"] = 2] = \"Indent\";\n    /**\n     * DeepIndent => wrapped lines get +2 indentation toward the parent.\n     */\n    WrappingIndent[WrappingIndent[\"DeepIndent\"] = 3] = \"DeepIndent\";\n})(WrappingIndent || (WrappingIndent = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class Token {\n    constructor(offset, type, language) {\n        this._tokenBrand = undefined;\n        this.offset = offset | 0; // @perf\n        this.type = type;\n        this.language = language;\n    }\n    toString() {\n        return '(' + this.offset + ', ' + this.type + ')';\n    }\n}\nexport class TokenizationResult {\n    constructor(tokens, endState) {\n        this._tokenizationResultBrand = undefined;\n        this.tokens = tokens;\n        this.endState = endState;\n    }\n}\nexport class TokenizationResult2 {\n    constructor(tokens, endState) {\n        this._tokenizationResult2Brand = undefined;\n        this.tokens = tokens;\n        this.endState = endState;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { KeyChord } from '../../../base/common/keyCodes.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { Selection } from '../core/selection.js';\nimport { Token } from '../core/token.js';\nimport * as standaloneEnums from './standaloneEnums.js';\nexport class KeyMod {\n    static chord(firstPart, secondPart) {\n        return KeyChord(firstPart, secondPart);\n    }\n}\nKeyMod.CtrlCmd = 2048 /* CtrlCmd */;\nKeyMod.Shift = 1024 /* Shift */;\nKeyMod.Alt = 512 /* Alt */;\nKeyMod.WinCtrl = 256 /* WinCtrl */;\nexport function createMonacoBaseAPI() {\n    return {\n        editor: undefined,\n        languages: undefined,\n        CancellationTokenSource: CancellationTokenSource,\n        Emitter: Emitter,\n        KeyCode: standaloneEnums.KeyCode,\n        KeyMod: KeyMod,\n        Position: Position,\n        Range: Range,\n        Selection: Selection,\n        SelectionDirection: standaloneEnums.SelectionDirection,\n        MarkerSeverity: standaloneEnums.MarkerSeverity,\n        MarkerTag: standaloneEnums.MarkerTag,\n        Uri: URI,\n        Token: Token\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { stringDiff } from '../../../base/common/diff/diff.js';\nimport { globals } from '../../../base/common/platform.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { DiffComputer } from '../diff/diffComputer.js';\nimport { MirrorTextModel as BaseMirrorModel } from '../model/mirrorTextModel.js';\nimport { ensureValidWordDefinition, getWordAtText } from '../model/wordHelper.js';\nimport { computeLinks } from '../modes/linkComputer.js';\nimport { BasicInplaceReplace } from '../modes/supports/inplaceReplaceSupport.js';\nimport { createMonacoBaseAPI } from '../standalone/standaloneBase.js';\nimport * as types from '../../../base/common/types.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\n/**\n * @internal\n */\nexport class MirrorModel extends BaseMirrorModel {\n    get uri() {\n        return this._uri;\n    }\n    get eol() {\n        return this._eol;\n    }\n    getValue() {\n        return this.getText();\n    }\n    getLinesContent() {\n        return this._lines.slice(0);\n    }\n    getLineCount() {\n        return this._lines.length;\n    }\n    getLineContent(lineNumber) {\n        return this._lines[lineNumber - 1];\n    }\n    getWordAtPosition(position, wordDefinition) {\n        let wordAtText = getWordAtText(position.column, ensureValidWordDefinition(wordDefinition), this._lines[position.lineNumber - 1], 0);\n        if (wordAtText) {\n            return new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n        }\n        return null;\n    }\n    words(wordDefinition) {\n        const lines = this._lines;\n        const wordenize = this._wordenize.bind(this);\n        let lineNumber = 0;\n        let lineText = '';\n        let wordRangesIdx = 0;\n        let wordRanges = [];\n        return {\n            *[Symbol.iterator]() {\n                while (true) {\n                    if (wordRangesIdx < wordRanges.length) {\n                        const value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n                        wordRangesIdx += 1;\n                        yield value;\n                    }\n                    else {\n                        if (lineNumber < lines.length) {\n                            lineText = lines[lineNumber];\n                            wordRanges = wordenize(lineText, wordDefinition);\n                            wordRangesIdx = 0;\n                            lineNumber += 1;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                }\n            }\n        };\n    }\n    getLineWords(lineNumber, wordDefinition) {\n        let content = this._lines[lineNumber - 1];\n        let ranges = this._wordenize(content, wordDefinition);\n        let words = [];\n        for (const range of ranges) {\n            words.push({\n                word: content.substring(range.start, range.end),\n                startColumn: range.start + 1,\n                endColumn: range.end + 1\n            });\n        }\n        return words;\n    }\n    _wordenize(content, wordDefinition) {\n        const result = [];\n        let match;\n        wordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n        while (match = wordDefinition.exec(content)) {\n            if (match[0].length === 0) {\n                // it did match the empty string\n                break;\n            }\n            result.push({ start: match.index, end: match.index + match[0].length });\n        }\n        return result;\n    }\n    getValueInRange(range) {\n        range = this._validateRange(range);\n        if (range.startLineNumber === range.endLineNumber) {\n            return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n        }\n        let lineEnding = this._eol;\n        let startLineIndex = range.startLineNumber - 1;\n        let endLineIndex = range.endLineNumber - 1;\n        let resultLines = [];\n        resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n        for (let i = startLineIndex + 1; i < endLineIndex; i++) {\n            resultLines.push(this._lines[i]);\n        }\n        resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n        return resultLines.join(lineEnding);\n    }\n    offsetAt(position) {\n        position = this._validatePosition(position);\n        this._ensureLineStarts();\n        return this._lineStarts.getPrefixSum(position.lineNumber - 2) + (position.column - 1);\n    }\n    positionAt(offset) {\n        offset = Math.floor(offset);\n        offset = Math.max(0, offset);\n        this._ensureLineStarts();\n        let out = this._lineStarts.getIndexOf(offset);\n        let lineLength = this._lines[out.index].length;\n        // Ensure we return a valid position\n        return {\n            lineNumber: 1 + out.index,\n            column: 1 + Math.min(out.remainder, lineLength)\n        };\n    }\n    _validateRange(range) {\n        const start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n        const end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n        if (start.lineNumber !== range.startLineNumber\n            || start.column !== range.startColumn\n            || end.lineNumber !== range.endLineNumber\n            || end.column !== range.endColumn) {\n            return {\n                startLineNumber: start.lineNumber,\n                startColumn: start.column,\n                endLineNumber: end.lineNumber,\n                endColumn: end.column\n            };\n        }\n        return range;\n    }\n    _validatePosition(position) {\n        if (!Position.isIPosition(position)) {\n            throw new Error('bad position');\n        }\n        let { lineNumber, column } = position;\n        let hasChanged = false;\n        if (lineNumber < 1) {\n            lineNumber = 1;\n            column = 1;\n            hasChanged = true;\n        }\n        else if (lineNumber > this._lines.length) {\n            lineNumber = this._lines.length;\n            column = this._lines[lineNumber - 1].length + 1;\n            hasChanged = true;\n        }\n        else {\n            let maxCharacter = this._lines[lineNumber - 1].length + 1;\n            if (column < 1) {\n                column = 1;\n                hasChanged = true;\n            }\n            else if (column > maxCharacter) {\n                column = maxCharacter;\n                hasChanged = true;\n            }\n        }\n        if (!hasChanged) {\n            return position;\n        }\n        else {\n            return { lineNumber, column };\n        }\n    }\n}\n/**\n * @internal\n */\nexport class EditorSimpleWorker {\n    constructor(host, foreignModuleFactory) {\n        this._host = host;\n        this._models = Object.create(null);\n        this._foreignModuleFactory = foreignModuleFactory;\n        this._foreignModule = null;\n    }\n    dispose() {\n        this._models = Object.create(null);\n    }\n    _getModel(uri) {\n        return this._models[uri];\n    }\n    _getModels() {\n        let all = [];\n        Object.keys(this._models).forEach((key) => all.push(this._models[key]));\n        return all;\n    }\n    acceptNewModel(data) {\n        this._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\n    }\n    acceptModelChanged(strURL, e) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        let model = this._models[strURL];\n        model.onEvents(e);\n    }\n    acceptRemovedModel(strURL) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        delete this._models[strURL];\n    }\n    // ---- BEGIN diff --------------------------------------------------------------------------\n    computeDiff(originalUrl, modifiedUrl, ignoreTrimWhitespace, maxComputationTime) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const original = this._getModel(originalUrl);\n            const modified = this._getModel(modifiedUrl);\n            if (!original || !modified) {\n                return null;\n            }\n            const originalLines = original.getLinesContent();\n            const modifiedLines = modified.getLinesContent();\n            const diffComputer = new DiffComputer(originalLines, modifiedLines, {\n                shouldComputeCharChanges: true,\n                shouldPostProcessCharChanges: true,\n                shouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n                shouldMakePrettyDiff: true,\n                maxComputationTime: maxComputationTime\n            });\n            const diffResult = diffComputer.computeDiff();\n            const identical = (diffResult.changes.length > 0 ? false : this._modelsAreIdentical(original, modified));\n            return {\n                quitEarly: diffResult.quitEarly,\n                identical: identical,\n                changes: diffResult.changes\n            };\n        });\n    }\n    _modelsAreIdentical(original, modified) {\n        const originalLineCount = original.getLineCount();\n        const modifiedLineCount = modified.getLineCount();\n        if (originalLineCount !== modifiedLineCount) {\n            return false;\n        }\n        for (let line = 1; line <= originalLineCount; line++) {\n            const originalLine = original.getLineContent(line);\n            const modifiedLine = modified.getLineContent(line);\n            if (originalLine !== modifiedLine) {\n                return false;\n            }\n        }\n        return true;\n    }\n    computeMoreMinimalEdits(modelUrl, edits) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const model = this._getModel(modelUrl);\n            if (!model) {\n                return edits;\n            }\n            const result = [];\n            let lastEol = undefined;\n            edits = edits.slice(0).sort((a, b) => {\n                if (a.range && b.range) {\n                    return Range.compareRangesUsingStarts(a.range, b.range);\n                }\n                // eol only changes should go to the end\n                let aRng = a.range ? 0 : 1;\n                let bRng = b.range ? 0 : 1;\n                return aRng - bRng;\n            });\n            for (let { range, text, eol } of edits) {\n                if (typeof eol === 'number') {\n                    lastEol = eol;\n                }\n                if (Range.isEmpty(range) && !text) {\n                    // empty change\n                    continue;\n                }\n                const original = model.getValueInRange(range);\n                text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n                if (original === text) {\n                    // noop\n                    continue;\n                }\n                // make sure diff won't take too long\n                if (Math.max(text.length, original.length) > EditorSimpleWorker._diffLimit) {\n                    result.push({ range, text });\n                    continue;\n                }\n                // compute diff between original and edit.text\n                const changes = stringDiff(original, text, false);\n                const editOffset = model.offsetAt(Range.lift(range).getStartPosition());\n                for (const change of changes) {\n                    const start = model.positionAt(editOffset + change.originalStart);\n                    const end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n                    const newEdit = {\n                        text: text.substr(change.modifiedStart, change.modifiedLength),\n                        range: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\n                    };\n                    if (model.getValueInRange(newEdit.range) !== newEdit.text) {\n                        result.push(newEdit);\n                    }\n                }\n            }\n            if (typeof lastEol === 'number') {\n                result.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\n            }\n            return result;\n        });\n    }\n    // ---- END minimal edits ---------------------------------------------------------------\n    computeLinks(modelUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let model = this._getModel(modelUrl);\n            if (!model) {\n                return null;\n            }\n            return computeLinks(model);\n        });\n    }\n    textualSuggest(modelUrls, leadingWord, wordDef, wordDefFlags) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const sw = new StopWatch(true);\n            const wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n            const seen = new Set();\n            outer: for (let url of modelUrls) {\n                const model = this._getModel(url);\n                if (!model) {\n                    continue;\n                }\n                for (let word of model.words(wordDefRegExp)) {\n                    if (word === leadingWord || !isNaN(Number(word))) {\n                        continue;\n                    }\n                    seen.add(word);\n                    if (seen.size > EditorSimpleWorker._suggestionsLimit) {\n                        break outer;\n                    }\n                }\n            }\n            return { words: Array.from(seen), duration: sw.elapsed() };\n        });\n    }\n    // ---- END suggest --------------------------------------------------------------------------\n    //#region -- word ranges --\n    computeWordRanges(modelUrl, range, wordDef, wordDefFlags) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let model = this._getModel(modelUrl);\n            if (!model) {\n                return Object.create(null);\n            }\n            const wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n            const result = Object.create(null);\n            for (let line = range.startLineNumber; line < range.endLineNumber; line++) {\n                let words = model.getLineWords(line, wordDefRegExp);\n                for (const word of words) {\n                    if (!isNaN(Number(word.word))) {\n                        continue;\n                    }\n                    let array = result[word.word];\n                    if (!array) {\n                        array = [];\n                        result[word.word] = array;\n                    }\n                    array.push({\n                        startLineNumber: line,\n                        startColumn: word.startColumn,\n                        endLineNumber: line,\n                        endColumn: word.endColumn\n                    });\n                }\n            }\n            return result;\n        });\n    }\n    //#endregion\n    navigateValueSet(modelUrl, range, up, wordDef, wordDefFlags) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let model = this._getModel(modelUrl);\n            if (!model) {\n                return null;\n            }\n            let wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n            if (range.startColumn === range.endColumn) {\n                range = {\n                    startLineNumber: range.startLineNumber,\n                    startColumn: range.startColumn,\n                    endLineNumber: range.endLineNumber,\n                    endColumn: range.endColumn + 1\n                };\n            }\n            let selectionText = model.getValueInRange(range);\n            let wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n            if (!wordRange) {\n                return null;\n            }\n            let word = model.getValueInRange(wordRange);\n            let result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n            return result;\n        });\n    }\n    // ---- BEGIN foreign module support --------------------------------------------------------------------------\n    loadForeignModule(moduleId, createData, foreignHostMethods) {\n        const proxyMethodRequest = (method, args) => {\n            return this._host.fhr(method, args);\n        };\n        const foreignHost = types.createProxyObject(foreignHostMethods, proxyMethodRequest);\n        let ctx = {\n            host: foreignHost,\n            getMirrorModels: () => {\n                return this._getModels();\n            }\n        };\n        if (this._foreignModuleFactory) {\n            this._foreignModule = this._foreignModuleFactory(ctx, createData);\n            // static foreing module\n            return Promise.resolve(types.getAllMethodNames(this._foreignModule));\n        }\n        // ESM-comment-begin\n        // \t\treturn new Promise<any>((resolve, reject) => {\n        // \t\t\trequire([moduleId], (foreignModule: { create: IForeignModuleFactory }) => {\n        // \t\t\t\tthis._foreignModule = foreignModule.create(ctx, createData);\n        // \n        // \t\t\t\tresolve(types.getAllMethodNames(this._foreignModule));\n        // \n        // \t\t\t}, reject);\n        // \t\t});\n        // ESM-comment-end\n        // ESM-uncomment-begin\n        return Promise.reject(new Error(`Unexpected usage`));\n        // ESM-uncomment-end\n    }\n    // foreign method request\n    fmr(method, args) {\n        if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n}\n// ---- END diff --------------------------------------------------------------------------\n// ---- BEGIN minimal edits ---------------------------------------------------------------\nEditorSimpleWorker._diffLimit = 100000;\n// ---- BEGIN suggest --------------------------------------------------------------------------\nEditorSimpleWorker._suggestionsLimit = 10000;\n/**\n * Called on the worker side\n * @internal\n */\nexport function create(host) {\n    return new EditorSimpleWorker(host, null);\n}\nif (typeof importScripts === 'function') {\n    // Running in a web worker\n    globals.monaco = createMonacoBaseAPI();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { SimpleWorkerServer } from '../base/common/worker/simpleWorker.js';\nimport { EditorSimpleWorker } from './common/services/editorSimpleWorker.js';\nlet initialized = false;\nexport function initialize(foreignModule) {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    const simpleWorker = new SimpleWorkerServer((msg) => {\n        self.postMessage(msg);\n    }, (host) => new EditorSimpleWorker(host, foreignModule));\n    self.onmessage = (e) => {\n        simpleWorker.onmessage(e.data);\n    };\n}\nself.onmessage = (e) => {\n    // Ignore first message in this case and initialize if not yet initialized\n    if (!initialized) {\n        initialize(null);\n    }\n};\n"],"names":["__webpack_require__","_arrayLikeToArray","arr","len","length","i","arr2","Array","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","_createForOfIteratorHelper","allowArrayLike","it","Symbol","iterator","isArray","F","s","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","_typeof","obj","_toPropertyKey","arg","key","input","hint","prim","toPrimitive","undefined","res","String","Number","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","instance","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","subClass","superClass","create","getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","_possibleConstructorReturn","self","ReferenceError","Derived","hasNativeReflectConstruct","result","Super","NewTarget","this","arguments","apply","_construct","Parent","args","Class","a","push","Function","_wrapNativeSuper","_cache","Map","fn","indexOf","has","get","set","Wrapper","g","globalThis","window","errorHandler","listeners","unexpectedErrorHandler","setTimeout","stack","Error","message","forEach","listener","emit","onUnexpectedError","isPromiseCanceledError","transformErrorForSerialization","error","$isError","stacktrace","canceledName","Iterable","_slicedToArray","_i","_s","_x","_r","_arr","_n","_d","_toConsumableArray","iter","once","_this","didCall","_defineProperty","_regeneratorRuntime","exports","Op","hasOwn","hasOwnProperty","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","makeInvokeMethod","tryCatch","type","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","__await","then","unwrapped","previousPromise","callInvokeWithMethodAndArg","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","awrap","async","Promise","keys","val","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","single","filter","map","concat","concatNested","is","thing","_empty","freeze","element","predicate","index","iterables","empty","isEmpty","first","some","find","reduce","reducer","initialValue","to","consume","atMost","POSITIVE_INFINITY","consumed","equals","b","comparator","at","bt","ai","bi","an","bn","disposableTracker","trackDisposable","x","markAsDisposed","disposable","setParentOfDisposable","child","parent","setParent","MultiDisposeError","errors","join","dispose","d","combinedDisposable","disposables","toDisposable","children","setParentOfDisposables","DisposableStore","_toDispose","Set","_isDisposed","clear","DISABLE_DISPOSED_WARNING","console","warn","add","Disposable","_store","None","Node","Undefined","_a","LinkedList","_first","_last","_size","node","_insert","atTheEnd","newNode","oldLast","oldFirst","didRemove","_remove","anchor","LANGUAGE_DEFAULT","_isWindows","_isMacintosh","_isLinux","_userAgent","globals","global","nodeProcess","vscode","process","isElectronRenderer","versions","electron","navigator","platform","env","rawNlsConfig","nlsConfig","JSON","parse","resolved","availableLanguages","locale","_translationsConfigFile","userAgent","maxTouchPoints","language","isWindows","isMacintosh","setImmediate","postMessage","importScripts","pending","addEventListener","data","vscodeSetImmediateId","candidate","id","splice","callback","lastId","myId","nextTick","_promise","Event","hasPerformanceNow","StopWatch","highResolution","_highResolution","_startTime","_now","_stopTime","Date","now","event","thisArgs","didFire","snapshot","each","merge","initial","output","emitter","Emitter","onFirstListenerAdd","fire","onLastListenerRemove","debounce","subscription","delay","leading","numDebouncedCalls","leakWarningThreshold","cur","clearTimeout","_output","latch","cache","firstCall","shouldEmit","signal","any","events","split","isT","buffer","flush","onFirstListenerDidAdd","ChainableEvent","chain","fromNodeEventEmitter","eventName","on","removeListener","fromDOMEventEmitter","removeEventListener","toPromise","EventProfiling","_listenerCount","_invocationCount","_elapsedOverall","_name","_idPool","listenerCount","_stopWatch","elapsed","toFixed","_globalLeakWarningThreshold","LeakageMonitor","customThreshold","Math","random","_warnCountdown","_stacks","threshold","count","topStack","topCount","options","_disposed","_options","_leakageMon","_perfMon","_profName","_event","_listeners","firstListener","remove","onListenerDidAdd","removeMonitor","check","size","_b","_deliveryQueue","start","shift","_c","getAllMethodNames","methods","proto","getOwnPropertyNames","getAllPropertyNames","prop","isUpperAsciiLetter","code","isHighSurrogate","charCode","isLowSurrogate","computeCodePoint","highSurrogate","lowSurrogate","fromCharCode","GraphemeBreakTree","_data","codePoint","nodeCount","nodeIndex","_INSTANCE","INITIALIZE","RequestMessage","vsWorker","req","ReplyMessage","seq","SubscribeEventMessage","EventMessage","UnsubscribeEventMessage","SimpleWorkerProtocol","handler","_workerId","_handler","_lastSentReq","_pendingReplies","_pendingEmitters","_pendingEvents","workerId","_send","delete","_handleMessage","msg","_handleReplyMessage","_handleRequestMessage","_handleSubscribeEventMessage","_handleEventMessage","_handleUnsubscribeEventMessage","replyMessage","reply","requestMessage","handleMessage","r","detail","handleEvent","transfer","ArrayBuffer","sendMessage","propertyIsEvent","strings","charCodeAt","propertyIsDynamicEvent","createProxyObject","methodNames","proxyListen","createProxyMethod","createProxyDynamicEvent","SimpleWorkerServer","requestHandlerFactory","_requestHandlerFactory","_requestHandler","_protocol","_handleEvent","initialize","loaderConfig","moduleId","hostMethods","setWorkerId","hostProxy","listen","types","baseUrl","paths","vs","trustedTypesPolicy","catchError","module","DiffChange","originalStart","originalLength","modifiedStart","modifiedLength","numberHash","initialHashVal","stringHash","hashVal","leftRotate","bits","delta","fill","dest","byteLength","toHexString","bufferOrValue","bitsize","Uint8Array","padStart","char","leftPad","_h0","_h1","_h2","_h3","_h4","_buff","_buffDV","DataView","_buffLen","_totalLen","_leftoverHighSurrogate","_finished","str","strLen","offset","buff","buffLen","leftoverHighSurrogate","nextCharCode","_push","_step","_wrapUp","ml","setUint32","floor","bigBlock32","StringSHA1","_bigBlock32","j","getUint32","k","temp","c","StringDiffSequence","source","characters","Int32Array","stringDiff","original","modified","pretty","LcsDiff","ComputeDiff","changes","safeProcess","Debug","condition","MyArray","sourceArray","sourceIndex","destinationArray","destinationIndex","DiffChangeHelper","m_changes","m_originalStart","m_modifiedStart","m_originalCount","m_modifiedCount","originalIndex","modifiedIndex","min","MarkNextChange","originalSequence","modifiedSequence","continueProcessingPredicate","ContinueProcessingPredicate","_originalSequence","_modifiedSequence","_getElements","originalStringElements","originalElementsOrHash","originalHasStrings","modifiedStringElements","modifiedElementsOrHash","modifiedHasStrings","_hasStrings","_originalStringElements","_originalElementsOrHash","_modifiedStringElements","_modifiedElementsOrHash","m_forwardHistory","m_reverseHistory","newIndex","ElementsAreEqual","_getStrictElement","index1","index2","_ComputeDiff","originalEnd","modifiedEnd","quitEarlyArr","ComputeDiffRecursive","PrettifyChanges","quitEarly","Assert","midOriginalArr","midModifiedArr","ComputeRecursionPoint","midOriginal","midModified","leftChanges","rightChanges","ConcatenateChanges","diagonalForwardBase","diagonalForwardStart","diagonalForwardEnd","diagonalForwardOffset","diagonalReverseBase","diagonalReverseStart","diagonalReverseEnd","diagonalReverseOffset","forwardPoints","reversePoints","deltaIsEven","forwardChanges","reverseChanges","changeHelper","diagonalMin","diagonalMax","diagonalRelative","lastOriginalIndex","historyIndex","diagonal","AddModifiedElement","AddOriginalElement","getReverseChanges","originalStartPoint","modifiedStartPoint","lastForwardChange","max","getOriginalEnd","getModifiedEnd","getChanges","maxDifferences","numDiagonals","numDifferences","furthestOriginalIndex","furthestModifiedIndex","ClipDiagonalBound","tempOriginalIndex","abs","WALKTRACE","matchLengthOfLongest","Copy2","change","originalStop","modifiedStop","checkOriginal","checkModified","OriginalElementsAreEqual","ModifiedElementsAreEqual","startStrictEqual","ElementsAreStrictEqual","mergedChangeArr","ChangesOverlap","prevChange","bestDelta","bestScore","_boundaryScore","score","aChange","bChange","matchedLength","aOriginalStart","bOriginalEnd","abOriginalLength","aModifiedStart","bModifiedEnd","abModifiedLength","t","_findBetterContiguousSequence","originalMatchStart","modifiedMatchStart","desiredLength","originalMax","modifiedMax","bestOriginalStart","bestModifiedStart","_contiguousSequenceScore","l","_OriginalIsBoundary","_ModifiedIsBoundary","_OriginalRegionIsBoundary","_ModifiedRegionIsBoundary","left","right","Copy","diagonalBaseIndex","diffEven","sequence","elements","getElements","_isStringArray","hashes","getStrictElement","sandboxProcess","arch","cwd","CHAR_UPPERCASE_A","CHAR_LOWERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_Z","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","CHAR_COLON","ErrorInvalidArgType","expected","actual","determiner","replace","validateString","isPathSeparator","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","path","allowAboveRoot","separator","lastSegmentLength","lastSlash","dots","lastSlashIndex","lastIndexOf","_format","sep","pathObject","dir","root","base","ext","win32","resolvedDevice","resolvedTail","resolvedAbsolute","toLowerCase","rootEnd","device","isAbsolute","last","firstPart","normalize","tail","joined","needsReplace","slashCount","firstLen","relative","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","out","toNamespacedPath","resolvedPath","dirname","end","matchedSlash","basename","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","ret","delimiter","posix","trailingSeparator","hasRoot","_schemePattern","_singleSlashStart","_doubleSlashStart","_validateUri","_strict","scheme","authority","query","fragment","_slash","_regexp","URI","schemeOrData","_schemeFix","_referenceResolution","uriToFsPath","Uri","_asFormatted","fsPath","with","match","exec","percentDecode","idx","substring","components","uri","newPath","pathFragment","file","_formatted","external","_fsPath","_sep","_pathSepMarker","$mid","encodeTable","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","pos","encodeURIComponent","substr","escaped","encodeURIComponentMinimal","keepDriveLetterCasing","skipEncoding","encoder","userinfo","decodeURIComponentGraceful","decodeURIComponent","_rEncodedAsHex","Position","lineNumber","column","newLineNumber","newColumn","deltaLineNumber","deltaColumn","other","isBefore","isBeforeOrEqual","aLineNumber","bLineNumber","Range","startLineNumber","startColumn","endLineNumber","endColumn","position","containsPosition","range","containsRange","strictContainsRange","plusRange","intersectRanges","equalsRange","getEndPosition","getStartPosition","collapseToStart","otherRange","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","MINIMUM_MATCHING_CHARACTER_LENGTH","computeDiff","LineSequence","lines","startColumns","endColumns","getFirstNonBlankColumn","getLastNonBlankColumn","_startColumns","_endColumns","shouldIgnoreTrimWhitespace","startIndex","endIndex","charCodes","lineNumbers","columns","lineContent","col","CharSequence","_charCodes","_lineNumbers","_columns","CharChange","originalStartLineNumber","originalStartColumn","originalEndLineNumber","originalEndColumn","modifiedStartLineNumber","modifiedStartColumn","modifiedEndLineNumber","modifiedEndColumn","diffChange","originalCharSequence","modifiedCharSequence","getStartLineNumber","getStartColumn","getEndLineNumber","getEndColumn","LineChange","charChanges","originalLineSequence","modifiedLineSequence","continueCharDiff","shouldComputeCharChanges","shouldPostProcessCharChanges","createCharSequence","rawChanges","currChange","originalMatchingLength","modifiedMatchingLength","postProcessCharChanges","createFromDiffChange","DiffComputer","originalLines","modifiedLines","opts","shouldMakePrettyDiff","continueLineDiff","createContinueProcessingPredicate","maxComputationTime","diffResult","lineChanges","createFromDiffResult","originalLineIndex","modifiedLineIndex","nextChange","originalLine","modifiedLine","_pushTrimWhitespaceCharChange","originalMaxColumn","modifiedMaxColumn","originalLineNumber","modifiedLineNumber","_mergeTrimWhitespaceCharChange","txt","defaultValue","chCode","maximumRuntime","startTime","toUint8","v","toUint32","PrefixSumIndexOfResult","remainder","_prefixSumIndexOfResultBrand","PrefixSumComputer","prefixSum","Uint32Array","prefixSumValidIndex","insertIndex","insertValues","oldValues","oldPrefixSum","insertValuesLen","subarray","maxCount","_getPrefixSum","sum","getTotalSum","low","high","mid","midStop","midStart","MirrorTextModel","eol","versionId","_uri","_lines","_eol","_versionId","_lineStarts","_cachedTextValue","_acceptDeleteRange","_acceptInsertText","text","eolLength","linesLength","lineStartValues","lineIndex","newValue","changeValue","_setLineText","removeValues","insertText","insertLines","newLengths","USUAL_WORD_SEPARATORS","DEFAULT_WORD_REGEXP","allowInWords","RegExp","createWordRegExp","_defaultConfig","maxLen","windowSize","timeBudget","getWordAtText","wordDefinition","textOffset","config","t1","prevRegexIndex","regexIndex","lastIndex","thisMatch","_findRegexMatchEnclosingPosition","word","stopPos","matchIndex","CharacterClassifier","_defaultValue","_asciiMap","_createAsciiMap","_map","_value","asciiMap","Uint8Matrix","rows","cols","row","StateMachine","edges","maxCharCode","maxState","states","_states","_maxCharCode","currentState","_stateMachine","_classifier","LinkComputer","classifier","line","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","charCodeBeforeLink","lastCharCodeInLink","url","model","stateMachine","FORCE_TERMINATION_CHARACTERS","getClassifier","lineCount","getLineCount","getLineContent","linkBeginChCode","hasOpenParens","hasOpenSquareBracket","inSquareBrackets","hasOpenCurlyBracket","resetStateMachine","chClass","_createLink","nextState","computeLinks","BasicInplaceReplace","_defaultValueSet","range1","text1","range2","text2","up","doNavigateValueSet","numberResult","numberReplace","textReplace","precision","pow","n1","n2","parseFloat","valueSetsReplace","valueSets","valueSetReplace","valueSet","INSTANCE","CancellationToken","shortcutEvent","isCancellationToken","Cancelled","MutableToken","isCancellationRequested","onCancellationRequested","KeyCodeUtils","_isCancelled","_emitter","CancellationTokenSource","_token","_parentListener","cancel","KeyCodeStrMap","_keyCodeToStr","_strToKeyCode","keyCode","uiMap","userSettingsUSMap","userSettingsGeneralMap","EVENT_KEY_CODE_MAP","NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE","scanCodeIntToStr","scanCodeStrToInt","scanCodeLowerCaseStrToInt","IMMUTABLE_CODE_TO_KEY_CODE","IMMUTABLE_KEY_CODE_TO_CODE","seenKeyCode","seenScanCode","immutable","scanCode","scanCodeStr","keyCodeStr","eventKeyCode","vkey","usUserSettingsLabel","generalUserSettingsLabel","keyCodeToStr","fromString","strToKeyCode","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","toElectronAccelerator","AccessibilitySupport","CompletionItemInsertTextRule","CompletionItemKind","CompletionItemTag","CompletionTriggerKind","ContentWidgetPositionPreference","CursorChangeReason","DefaultEndOfLine","DocumentHighlightKind","EditorAutoIndentStrategy","EditorOption","EndOfLinePreference","EndOfLineSequence","IndentAction","InlayHintKind","InlineCompletionTriggerKind","KeyCode","MarkerSeverity","MarkerTag","MinimapPosition","MouseTargetType","OverlayWidgetPositionPreference","OverviewRulerLane","RenderLineNumbersType","RenderMinimap","ScrollType","ScrollbarVisibility","SelectionDirection","SignatureHelpTriggerKind","SymbolKind","SymbolTag","TextEditorCursorBlinkingStyle","TextEditorCursorStyle","TrackedRangeStickiness","WrappingIndent","Selection","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","selectionsEqual","getDirection","sel","direction","Token","_tokenBrand","KeyMod","secondPart","KeyChord","CtrlCmd","Shift","Alt","WinCtrl","__awaiter","thisArg","_arguments","P","fulfilled","rejected","MirrorModel","getText","wordAtText","flags","ignoreCase","multiline","unicode","ensureValidWordDefinition","wordenize","_wordenize","lineText","wordRangesIdx","wordRanges","content","words","_validateRange","lineEnding","startLineIndex","endLineIndex","resultLines","_validatePosition","_ensureLineStarts","getPrefixSum","getIndexOf","lineLength","isIPosition","hasChanged","maxCharacter","BaseMirrorModel","EditorSimpleWorker","host","foreignModuleFactory","_host","_models","_foreignModuleFactory","_foreignModule","all","EOL","strURL","onEvents","originalUrl","modifiedUrl","ignoreTrimWhitespace","_getModel","getLinesContent","diffComputer","identical","_modelsAreIdentical","originalLineCount","modelUrl","edits","lastEol","sort","compareRangesUsingStarts","getValueInRange","_diffLimit","editOffset","offsetAt","lift","positionAt","newEdit","modelUrls","leadingWord","wordDef","wordDefFlags","sw","wordDefRegExp","seen","_suggestionsLimit","duration","getLineWords","array","selectionText","wordRange","getWordAtPosition","navigateValueSet","createData","foreignHostMethods","foreignHost","fhr","ctx","getMirrorModels","_getModels","editor","languages","standaloneEnums","initialized","onmessage","foreignModule","simpleWorker"],"sourceRoot":""}